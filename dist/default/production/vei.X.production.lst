

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 30 07:21:09 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.10
    54                           ; Generated 31/07/2019 GMT
    55                           ; 
    56                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     _PORTDbits	set	3971
    88  0000                     _PORTCbits	set	3970
    89  0000                     _PR2	set	4043
    90  0000                     _T2CONbits	set	4042
    91  0000                     _INTCON3bits	set	4080
    92  0000                     _INTCON2bits	set	4081
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTD	set	3971
    95  0000                     _TRISD	set	3989
    96  0000                     _PORTC	set	3970
    97  0000                     _TRISC	set	3988
    98  0000                     _TMR2IF	set	31985
    99  0000                     _TMR2IE	set	31977
   100                           
   101                           	psect	smallconst
   102  000800                     __psmallconst:
   103                           	opt callstack 0
   104  000800  00                 	db	0
   105  000801                     STR_3:
   106  000801  6A                 	db	106	;'j'
   107  000802  6F                 	db	111	;'o'
   108  000803  67                 	db	103	;'g'
   109  000804  61                 	db	97	;'a'
   110  000805  64                 	db	100	;'d'
   111  000806  6F                 	db	111	;'o'
   112  000807  72                 	db	114	;'r'
   113  000808  20                 	db	32
   114  000809  31                 	db	49	;'1'
   115  00080A  21                 	db	33
   116  00080B  21                 	db	33
   117  00080C  00                 	db	0
   118  00080D                     STR_5:
   119  00080D  6A                 	db	106	;'j'
   120  00080E  6F                 	db	111	;'o'
   121  00080F  67                 	db	103	;'g'
   122  000810  61                 	db	97	;'a'
   123  000811  64                 	db	100	;'d'
   124  000812  6F                 	db	111	;'o'
   125  000813  72                 	db	114	;'r'
   126  000814  20                 	db	32
   127  000815  32                 	db	50	;'2'
   128  000816  21                 	db	33
   129  000817  21                 	db	33
   130  000818  00                 	db	0
   131  000819                     STR_2:
   132  000819  63                 	db	99	;'c'
   133  00081A  6F                 	db	111	;'o'
   134  00081B  6D                 	db	109	;'m'
   135  00081C  65                 	db	101	;'e'
   136  00081D  63                 	db	99	;'c'
   137  00081E  65                 	db	101	;'e'
   138  00081F  6D                 	db	109	;'m'
   139  000820  21                 	db	33
   140  000821  00                 	db	0
   141  000822                     STR_1:
   142  000822  70                 	db	112	;'p'
   143  000823  72                 	db	114	;'r'
   144  000824  6F                 	db	111	;'o'
   145  000825  6E                 	db	110	;'n'
   146  000826  74                 	db	116	;'t'
   147  000827  6F                 	db	111	;'o'
   148  000828  00                 	db	0
   149  000829                     STR_4:
   150  000829  25                 	db	37
   151  00082A  64                 	db	100	;'d'
   152  00082B  20                 	db	32
   153  00082C  6D                 	db	109	;'m'
   154  00082D  73                 	db	115	;'s'
   155  00082E  00                 	db	0
   156  0000                     
   157                           ; #config settings
   158  00082F  00                 	db	0	; dummy byte at the end
   159  0000                     
   160                           	psect	cinit
   161  00211C                     __pcinit:
   162                           	opt callstack 0
   163  00211C                     start_initialization:
   164                           	opt callstack 0
   165  00211C                     __initialization:
   166                           	opt callstack 0
   167                           
   168                           ; Clear objects allocated to BANK1 (32 bytes)
   169  00211C  EE01  F000         	lfsr	0,__pbssBANK1
   170  002120  0E20               	movlw	32
   171  002122                     clear_0:
   172  002122  6AEE               	clrf	postinc0,c
   173  002124  06E8               	decf	wreg,f,c
   174  002126  E1FD               	bnz	clear_0
   175                           
   176                           ; Clear objects allocated to BANK0 (14 bytes)
   177  002128  EE00  F0D5         	lfsr	0,__pbssBANK0
   178  00212C  0E0E               	movlw	14
   179  00212E                     clear_1:
   180  00212E  6AEE               	clrf	postinc0,c
   181  002130  06E8               	decf	wreg,f,c
   182  002132  E1FD               	bnz	clear_1
   183  002134                     end_of_initialization:
   184                           	opt callstack 0
   185  002134                     __end_of__initialization:
   186                           	opt callstack 0
   187  002134  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   188  002136  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   189  002138  0E00               	movlw	low (__Lsmallconst shr (0+16))
   190  00213A  6EF8               	movwf	tblptru,c
   191  00213C  0E08               	movlw	high __Lsmallconst
   192  00213E  6EF7               	movwf	tblptrh,c
   193  002140  0100               	movlb	0
   194  002142  EF39  F00D         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssBANK0
   197  0000D5                     __pbssBANK0:
   198                           	opt callstack 0
   199  0000D5                     _nout:
   200                           	opt callstack 0
   201  0000D5                     	ds	2
   202  0000D7                     _width:
   203                           	opt callstack 0
   204  0000D7                     	ds	2
   205  0000D9                     _prec:
   206                           	opt callstack 0
   207  0000D9                     	ds	2
   208  0000DB                     _flags:
   209                           	opt callstack 0
   210  0000DB                     	ds	2
   211  0000DD                     _T:
   212                           	opt callstack 0
   213  0000DD                     	ds	2
   214  0000DF                     _fix:
   215                           	opt callstack 0
   216  0000DF                     	ds	2
   217  0000E1                     _fi:
   218                           	opt callstack 0
   219  0000E1                     	ds	2
   220                           
   221                           	psect	bssBANK1
   222  000100                     __pbssBANK1:
   223                           	opt callstack 0
   224  000100                     _dbuf:
   225                           	opt callstack 0
   226  000100                     	ds	32
   227                           
   228                           	psect	cstackBANK0
   229  000060                     __pcstackBANK0:
   230                           	opt callstack 0
   231  000060                     ?i2_printf:
   232                           	opt callstack 0
   233  000060                     i2printf@fmt:
   234                           	opt callstack 0
   235                           
   236                           ; 2 bytes @ 0x0
   237  000060                     	ds	4
   238  000064                     i2printf@ret:
   239                           	opt callstack 0
   240                           
   241                           ; 2 bytes @ 0x4
   242  000064                     	ds	2
   243  000066                     i2printf@ap:
   244                           	opt callstack 0
   245                           
   246                           ; 2 bytes @ 0x6
   247  000066                     	ds	2
   248  000068                     ??_isr:
   249                           
   250                           ; 1 bytes @ 0x8
   251  000068                     	ds	8
   252  000070                     ??_envia_nibble_lcd:
   253  000070                     ?_strlen:
   254                           	opt callstack 0
   255  000070                     ?___aodiv:
   256                           	opt callstack 0
   257  000070                     ?___aomod:
   258                           	opt callstack 0
   259  000070                     strlen@s:
   260                           	opt callstack 0
   261  000070                     ___aodiv@dividend:
   262                           	opt callstack 0
   263  000070                     ___aomod@dividend:
   264                           	opt callstack 0
   265                           
   266                           ; 8 bytes @ 0x10
   267  000070                     	ds	1
   268  000071                     envia_nibble_lcd@dado:
   269                           	opt callstack 0
   270                           
   271                           ; 1 bytes @ 0x11
   272  000071                     	ds	1
   273  000072                     envia_byte_lcd@dado:
   274                           	opt callstack 0
   275  000072                     strlen@a:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x12
   279  000072                     	ds	1
   280  000073                     envia_byte_lcd@endereco:
   281                           	opt callstack 0
   282                           
   283                           ; 1 bytes @ 0x13
   284  000073                     	ds	1
   285  000074                     ??_inicializa_lcd:
   286  000074                     ??_limpa_lcd:
   287  000074                     escreve_lcd@c:
   288                           	opt callstack 0
   289  000074                     caracter_inicio@coluna:
   290                           	opt callstack 0
   291                           
   292                           ; 1 bytes @ 0x14
   293  000074                     	ds	1
   294  000075                     putch@data:
   295                           	opt callstack 0
   296  000075                     caracter_inicio@linha:
   297                           	opt callstack 0
   298                           
   299                           ; 1 bytes @ 0x15
   300  000075                     	ds	1
   301  000076                     caracter_inicio@posicao:
   302                           	opt callstack 0
   303  000076                     fputc@c:
   304                           	opt callstack 0
   305                           
   306                           ; 2 bytes @ 0x16
   307  000076                     	ds	2
   308  000078                     fputc@fp:
   309                           	opt callstack 0
   310  000078                     ___aodiv@divisor:
   311                           	opt callstack 0
   312  000078                     ___aomod@divisor:
   313                           	opt callstack 0
   314                           
   315                           ; 8 bytes @ 0x18
   316  000078                     	ds	2
   317  00007A                     ??_fputc:
   318                           
   319                           ; 1 bytes @ 0x1A
   320  00007A                     	ds	5
   321  00007F                     fputs@s:
   322                           	opt callstack 0
   323                           
   324                           ; 2 bytes @ 0x1F
   325  00007F                     	ds	1
   326  000080                     ___aodiv@counter:
   327                           	opt callstack 0
   328  000080                     ___aomod@counter:
   329                           	opt callstack 0
   330                           
   331                           ; 1 bytes @ 0x20
   332  000080                     	ds	1
   333  000081                     ___aodiv@sign:
   334                           	opt callstack 0
   335  000081                     ___aomod@sign:
   336                           	opt callstack 0
   337  000081                     fputs@fp:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x21
   341  000081                     	ds	1
   342  000082                     ?_abs:
   343                           	opt callstack 0
   344  000082                     abs@a:
   345                           	opt callstack 0
   346  000082                     ___aodiv@quotient:
   347                           	opt callstack 0
   348                           
   349                           ; 8 bytes @ 0x22
   350  000082                     	ds	1
   351  000083                     fputs@c:
   352                           	opt callstack 0
   353                           
   354                           ; 1 bytes @ 0x23
   355  000083                     	ds	1
   356  000084                     ??_abs:
   357  000084                     fputs@i:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x24
   361  000084                     	ds	2
   362  000086                     ?_pad:
   363                           	opt callstack 0
   364  000086                     pad@fp:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x26
   368  000086                     	ds	2
   369  000088                     pad@buf:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x28
   373  000088                     	ds	2
   374  00008A                     pad@p:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x2A
   378  00008A                     	ds	2
   379  00008C                     ??_pad:
   380                           
   381                           ; 1 bytes @ 0x2C
   382  00008C                     	ds	1
   383  00008D                     pad@i:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x2D
   387  00008D                     	ds	2
   388  00008F                     pad@w:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x2F
   392  00008F                     	ds	2
   393  000091                     ?_dtoa:
   394                           	opt callstack 0
   395  000091                     dtoa@fp:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x31
   399  000091                     	ds	2
   400  000093                     dtoa@d:
   401                           	opt callstack 0
   402                           
   403                           ; 8 bytes @ 0x33
   404  000093                     	ds	8
   405  00009B                     ??_dtoa:
   406                           
   407                           ; 1 bytes @ 0x3B
   408  00009B                     	ds	8
   409  0000A3                     _dtoa$490:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x43
   413  0000A3                     	ds	2
   414  0000A5                     dtoa@p:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x45
   418  0000A5                     	ds	2
   419  0000A7                     dtoa@w:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x47
   423  0000A7                     	ds	2
   424  0000A9                     dtoa@s:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x49
   428  0000A9                     	ds	2
   429  0000AB                     dtoa@n:
   430                           	opt callstack 0
   431                           
   432                           ; 8 bytes @ 0x4B
   433  0000AB                     	ds	8
   434  0000B3                     dtoa@i:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x53
   438  0000B3                     	ds	2
   439  0000B5                     ?_vfpfcnvrt:
   440                           	opt callstack 0
   441  0000B5                     vfpfcnvrt@fp:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x55
   445  0000B5                     	ds	2
   446  0000B7                     vfpfcnvrt@fmt:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x57
   450  0000B7                     	ds	2
   451  0000B9                     vfpfcnvrt@ap:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x59
   455  0000B9                     	ds	2
   456  0000BB                     ??_vfpfcnvrt:
   457                           
   458                           ; 1 bytes @ 0x5B
   459  0000BB                     	ds	2
   460  0000BD                     vfpfcnvrt@ll:
   461                           	opt callstack 0
   462                           
   463                           ; 8 bytes @ 0x5D
   464  0000BD                     	ds	8
   465  0000C5                     ?_vfprintf:
   466                           	opt callstack 0
   467  0000C5                     vfprintf@fp:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x65
   471  0000C5                     	ds	2
   472  0000C7                     vfprintf@fmt:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x67
   476  0000C7                     	ds	2
   477  0000C9                     vfprintf@ap:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x69
   481  0000C9                     	ds	2
   482  0000CB                     vfprintf@cfmt:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x6B
   486  0000CB                     	ds	2
   487  0000CD                     ?_printf:
   488                           	opt callstack 0
   489  0000CD                     printf@fmt:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x6D
   493  0000CD                     	ds	2
   494  0000CF                     
   495                           ; 1 bytes @ 0x6F
   496  0000CF                     	ds	2
   497  0000D1                     printf@ap:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x71
   501  0000D1                     	ds	2
   502  0000D3                     ??_main:
   503                           
   504                           ; 1 bytes @ 0x73
   505  0000D3                     	ds	2
   506                           
   507                           	psect	cstackCOMRAM
   508  000001                     __pcstackCOMRAM:
   509                           	opt callstack 0
   510  000001                     ??i2_envia_nibble_lcd:
   511  000001                     ?i2_strlen:
   512                           	opt callstack 0
   513  000001                     ?i2___aodiv:
   514                           	opt callstack 0
   515  000001                     ?i2___aomod:
   516                           	opt callstack 0
   517  000001                     i2strlen@s:
   518                           	opt callstack 0
   519  000001                     i2___aodiv@dividend:
   520                           	opt callstack 0
   521  000001                     i2___aomod@dividend:
   522                           	opt callstack 0
   523                           
   524                           ; 8 bytes @ 0x0
   525  000001                     	ds	1
   526  000002                     i2envia_nibble_lcd@dado:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x1
   530  000002                     	ds	1
   531  000003                     i2envia_byte_lcd@dado:
   532                           	opt callstack 0
   533  000003                     i2strlen@a:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x2
   537  000003                     	ds	1
   538  000004                     i2envia_byte_lcd@endereco:
   539                           	opt callstack 0
   540                           
   541                           ; 1 bytes @ 0x3
   542  000004                     	ds	1
   543  000005                     ??i2_limpa_lcd:
   544  000005                     i2escreve_lcd@c:
   545                           	opt callstack 0
   546  000005                     i2caracter_inicio@coluna:
   547                           	opt callstack 0
   548                           
   549                           ; 1 bytes @ 0x4
   550  000005                     	ds	1
   551  000006                     i2putch@data:
   552                           	opt callstack 0
   553  000006                     i2caracter_inicio@linha:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x5
   557  000006                     	ds	1
   558  000007                     i2caracter_inicio@posicao:
   559                           	opt callstack 0
   560  000007                     i2fputc@c:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x6
   564  000007                     	ds	2
   565  000009                     i2fputc@fp:
   566                           	opt callstack 0
   567  000009                     i2___aodiv@divisor:
   568                           	opt callstack 0
   569  000009                     i2___aomod@divisor:
   570                           	opt callstack 0
   571                           
   572                           ; 8 bytes @ 0x8
   573  000009                     	ds	2
   574  00000B                     ??i2_fputc:
   575                           
   576                           ; 1 bytes @ 0xA
   577  00000B                     	ds	5
   578  000010                     i2fputs@s:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0xF
   582  000010                     	ds	1
   583  000011                     i2___aodiv@counter:
   584                           	opt callstack 0
   585  000011                     i2___aomod@counter:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x10
   589  000011                     	ds	1
   590  000012                     i2___aodiv@sign:
   591                           	opt callstack 0
   592  000012                     i2___aomod@sign:
   593                           	opt callstack 0
   594  000012                     i2fputs@fp:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x11
   598  000012                     	ds	1
   599  000013                     ?i2_abs:
   600                           	opt callstack 0
   601  000013                     i2abs@a:
   602                           	opt callstack 0
   603  000013                     i2___aodiv@quotient:
   604                           	opt callstack 0
   605                           
   606                           ; 8 bytes @ 0x12
   607  000013                     	ds	1
   608  000014                     i2fputs@c:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0x13
   612  000014                     	ds	1
   613  000015                     ??i2_abs:
   614  000015                     i2fputs@i:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x14
   618  000015                     	ds	2
   619  000017                     ?i2_pad:
   620                           	opt callstack 0
   621  000017                     i2pad@fp:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x16
   625  000017                     	ds	2
   626  000019                     i2pad@buf:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0x18
   630  000019                     	ds	2
   631  00001B                     i2pad@p:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0x1A
   635  00001B                     	ds	2
   636  00001D                     ??i2_pad:
   637                           
   638                           ; 1 bytes @ 0x1C
   639  00001D                     	ds	1
   640  00001E                     i2pad@i:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x1D
   644  00001E                     	ds	2
   645  000020                     i2pad@w:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x1F
   649  000020                     	ds	2
   650  000022                     ?i2_dtoa:
   651                           	opt callstack 0
   652  000022                     i2dtoa@fp:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x21
   656  000022                     	ds	2
   657  000024                     i2dtoa@d:
   658                           	opt callstack 0
   659                           
   660                           ; 8 bytes @ 0x23
   661  000024                     	ds	8
   662  00002C                     ??i2_dtoa:
   663                           
   664                           ; 1 bytes @ 0x2B
   665  00002C                     	ds	8
   666  000034                     i2_dtoa$490:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x33
   670  000034                     	ds	2
   671  000036                     i2dtoa@p:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x35
   675  000036                     	ds	2
   676  000038                     i2dtoa@w:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x37
   680  000038                     	ds	2
   681  00003A                     i2dtoa@s:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x39
   685  00003A                     	ds	2
   686  00003C                     i2dtoa@n:
   687                           	opt callstack 0
   688                           
   689                           ; 8 bytes @ 0x3B
   690  00003C                     	ds	8
   691  000044                     i2dtoa@i:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x43
   695  000044                     	ds	2
   696  000046                     ?i2_vfpfcnvrt:
   697                           	opt callstack 0
   698  000046                     i2vfpfcnvrt@fp:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x45
   702  000046                     	ds	2
   703  000048                     i2vfpfcnvrt@fmt:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x47
   707  000048                     	ds	2
   708  00004A                     i2vfpfcnvrt@ap:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x49
   712  00004A                     	ds	2
   713  00004C                     ??i2_vfpfcnvrt:
   714                           
   715                           ; 1 bytes @ 0x4B
   716  00004C                     	ds	2
   717  00004E                     i2vfpfcnvrt@ll:
   718                           	opt callstack 0
   719                           
   720                           ; 8 bytes @ 0x4D
   721  00004E                     	ds	8
   722  000056                     ?i2_vfprintf:
   723                           	opt callstack 0
   724  000056                     i2vfprintf@fp:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x55
   728  000056                     	ds	2
   729  000058                     i2vfprintf@fmt:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x57
   733  000058                     	ds	2
   734  00005A                     i2vfprintf@ap:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x59
   738  00005A                     	ds	2
   739  00005C                     i2vfprintf@cfmt:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x5B
   743  00005C                     	ds	2
   744  00005E                     
   745                           ; 1 bytes @ 0x5D
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 84 in file "newmain.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0
   767 ;;      Temps:          0       2       0       0       0       0       0       0       0
   768 ;;      Totals:         0       2       0       0       0       0       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels required when called:   23
   771 ;; This function calls:
   772 ;;		_caracter_inicio
   773 ;;		_inicializa_lcd
   774 ;;		_limpa_lcd
   775 ;;		_printf
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text0
   782  001A72                     __ptext0:
   783                           	opt callstack 0
   784  001A72                     _main:
   785                           	opt callstack 8
   786  001A72                     
   787                           ;newmain.c: 86:     fi = 0;
   788  001A72  0E00               	movlw	0
   789  001A74  0100               	movlb	0	; () banked
   790  001A76  6FE2               	movwf	(_fi+1)& (0+255),b
   791  001A78  0E00               	movlw	0
   792  001A7A  6FE1               	movwf	_fi& (0+255),b
   793                           
   794                           ;newmain.c: 87:     fix = 0;
   795  001A7C  0E00               	movlw	0
   796  001A7E  6FE0               	movwf	(_fix+1)& (0+255),b
   797  001A80  0E00               	movlw	0
   798  001A82  6FDF               	movwf	_fix& (0+255),b
   799                           
   800                           ;newmain.c: 88:     T = 0;
   801  001A84  0E00               	movlw	0
   802  001A86  6FDE               	movwf	(_T+1)& (0+255),b
   803  001A88  0E00               	movlw	0
   804  001A8A  6FDD               	movwf	_T& (0+255),b
   805                           
   806                           ;newmain.c: 90:     TRISC = 0;
   807  001A8C  0E00               	movlw	0
   808  001A8E  6E94               	movwf	148,c	;volatile
   809                           
   810                           ;newmain.c: 91:     PORTC = 0;
   811  001A90  0E00               	movlw	0
   812  001A92  6E82               	movwf	130,c	;volatile
   813                           
   814                           ;newmain.c: 92:     TRISD = 0;
   815  001A94  0E00               	movlw	0
   816  001A96  6E95               	movwf	149,c	;volatile
   817                           
   818                           ;newmain.c: 93:     PORTD = 0;
   819  001A98  0E00               	movlw	0
   820  001A9A  6E83               	movwf	131,c	;volatile
   821  001A9C                     
   822                           ; BSR set to: 0
   823                           ;newmain.c: 95:     INTCONbits.INT0IE = 1;
   824  001A9C  88F2               	bsf	242,4,c	;volatile
   825  001A9E                     
   826                           ; BSR set to: 0
   827                           ;newmain.c: 96:     INTCON2bits.INTEDG0 = 0;
   828  001A9E  9CF1               	bcf	241,6,c	;volatile
   829  001AA0                     
   830                           ; BSR set to: 0
   831                           ;newmain.c: 97:     INTCON3bits.INT1IE = 1;
   832  001AA0  86F0               	bsf	240,3,c	;volatile
   833  001AA2                     
   834                           ; BSR set to: 0
   835                           ;newmain.c: 98:     INTCON2bits.INTEDG1 = 0;
   836  001AA2  9AF1               	bcf	241,5,c	;volatile
   837  001AA4                     
   838                           ; BSR set to: 0
   839                           ;newmain.c: 99:     INTCON3bits.INT2IE = 1;
   840  001AA4  88F0               	bsf	240,4,c	;volatile
   841  001AA6                     
   842                           ; BSR set to: 0
   843                           ;newmain.c: 100:     INTCON2bits.INTEDG2 = 0;
   844  001AA6  98F1               	bcf	241,4,c	;volatile
   845  001AA8                     
   846                           ; BSR set to: 0
   847                           ;newmain.c: 102:     INTCONbits.GIE = 1;
   848  001AA8  8EF2               	bsf	242,7,c	;volatile
   849  001AAA                     
   850                           ; BSR set to: 0
   851                           ;newmain.c: 103:     INTCONbits.PEIE = 1;
   852  001AAA  8CF2               	bsf	242,6,c	;volatile
   853  001AAC                     
   854                           ; BSR set to: 0
   855                           ;newmain.c: 104:     TMR2IE = 1;
   856  001AAC  829D               	bsf	3997,1,c	;volatile
   857                           
   858                           ;newmain.c: 106:     T2CONbits.T2CKPS = 1;
   859  001AAE  50CA               	movf	202,w,c	;volatile
   860  001AB0  0BFC               	andlw	-4
   861  001AB2  0901               	iorlw	1
   862  001AB4  6ECA               	movwf	202,c	;volatile
   863                           
   864                           ;newmain.c: 107:     T2CONbits.TOUTPS = 0;
   865  001AB6  0E87               	movlw	-121
   866  001AB8  16CA               	andwf	202,f,c	;volatile
   867                           
   868                           ;newmain.c: 108:     PR2 = 250;
   869  001ABA  0EFA               	movlw	250
   870  001ABC  6ECB               	movwf	203,c	;volatile
   871  001ABE                     
   872                           ; BSR set to: 0
   873                           ;newmain.c: 113:     inicializa_lcd();
   874  001ABE  EC28  F00E         	call	_inicializa_lcd	;wreg free
   875  001AC2                     
   876                           ;newmain.c: 114:     limpa_lcd();
   877  001AC2  ECC9  F010         	call	_limpa_lcd	;wreg free
   878  001AC6                     
   879                           ;newmain.c: 116:     caracter_inicio(1,5);
   880  001AC6  0E05               	movlw	5
   881  001AC8  0100               	movlb	0	; () banked
   882  001ACA  6F74               	movwf	caracter_inicio@coluna& (0+255),b
   883  001ACC  0E01               	movlw	1
   884  001ACE  EC81  F00F         	call	_caracter_inicio
   885  001AD2                     
   886                           ;newmain.c: 117:     printf("pronto");
   887  001AD2  0E22               	movlw	low STR_1
   888  001AD4  0100               	movlb	0	; () banked
   889  001AD6  6FCD               	movwf	printf@fmt& (0+255),b
   890  001AD8  0E08               	movlw	high STR_1
   891  001ADA  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   892  001ADC  ECA3  F010         	call	_printf	;wreg free
   893  001AE0                     l2236:
   894                           
   895                           ;newmain.c: 121:         if(fix){
   896  001AE0  0100               	movlb	0	; () banked
   897  001AE2  51DF               	movf	_fix& (0+255),w,b
   898  001AE4  11E0               	iorwf	(_fix+1)& (0+255),w,b
   899  001AE6  B4D8               	btfsc	status,2,c
   900  001AE8  EF78  F00D         	goto	u1971
   901  001AEC  EF7A  F00D         	goto	u1970
   902  001AF0                     u1971:
   903  001AF0  EF70  F00D         	goto	l2236
   904  001AF4                     u1970:
   905  001AF4                     
   906                           ; BSR set to: 0
   907                           ;newmain.c: 122:         fix = 0;
   908  001AF4  0E00               	movlw	0
   909  001AF6  6FE0               	movwf	(_fix+1)& (0+255),b
   910  001AF8  0E00               	movlw	0
   911  001AFA  6FDF               	movwf	_fix& (0+255),b
   912  001AFC                     
   913                           ; BSR set to: 0
   914                           ;newmain.c: 123:         PORTCbits.RC0 = 1;
   915  001AFC  8082               	bsf	130,0,c	;volatile
   916  001AFE                     
   917                           ; BSR set to: 0
   918                           ;newmain.c: 124:         _delay((unsigned long)((500)*(4000000/4000.0)));
   919  001AFE  0E03               	movlw	3
   920  001B00  0100               	movlb	0	; () banked
   921  001B02  6FD4               	movwf	(??_main+1)& (0+255),b
   922  001B04  0E8A               	movlw	138
   923  001B06  6FD3               	movwf	??_main& (0+255),b
   924  001B08  0E55               	movlw	85
   925  001B0A                     u2057:
   926  001B0A  2EE8               	decfsz	wreg,f,c
   927  001B0C  D7FE               	bra	u2057
   928  001B0E  2FD3               	decfsz	??_main& (0+255),f,b
   929  001B10  D7FC               	bra	u2057
   930  001B12  2FD4               	decfsz	(??_main+1)& (0+255),f,b
   931  001B14  D7FA               	bra	u2057
   932  001B16  D000               	nop2	
   933  001B18                     
   934                           ;newmain.c: 125:         PORTCbits.RC0 = 0;
   935  001B18  9082               	bcf	130,0,c	;volatile
   936  001B1A  EF70  F00D         	goto	l2236
   937  001B1E  EF07  F000         	goto	start
   938  001B22                     __end_of_main:
   939                           	opt callstack 0
   940                           
   941 ;; *************** function _printf *****************
   942 ;; Defined at:
   943 ;;		line 5 in file "F:\Program Files\mplab\pic\sources\c99\common\printf.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
   946 ;;		 -> STR_6(6), STR_5(12), STR_4(6), STR_3(12), 
   947 ;;		 -> STR_2(9), STR_1(7), 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  ap              2  113[BANK0 ] PTR void [1]
   950 ;;		 -> ?_printf(2), 
   951 ;;  ret             2    0        int 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2  109[BANK0 ] int 
   954 ;; Registers used:
   955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   961 ;;      Params:         0       2       0       0       0       0       0       0       0
   962 ;;      Locals:         0       4       0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0
   964 ;;      Totals:         0       6       0       0       0       0       0       0       0
   965 ;;Total ram usage:        6 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:   22
   968 ;; This function calls:
   969 ;;		_vfprintf
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text1
   976  002146                     __ptext1:
   977                           	opt callstack 0
   978  002146                     _printf:
   979                           	opt callstack 8
   980  002146  0ECF               	movlw	low (?_printf+2)
   981  002148  0100               	movlb	0	; () banked
   982  00214A  6FD1               	movwf	printf@ap& (0+255),b
   983  00214C  0E00               	movlw	high (?_printf+2)
   984  00214E  6FD2               	movwf	(printf@ap+1)& (0+255),b
   985  002150                     
   986                           ; BSR set to: 0
   987  002150  0E00               	movlw	0
   988  002152  6FC5               	movwf	vfprintf@fp& (0+255),b
   989  002154  0E00               	movlw	0
   990  002156  6FC6               	movwf	(vfprintf@fp+1)& (0+255),b
   991  002158  C0CD  F0C7         	movff	printf@fmt,vfprintf@fmt
   992  00215C  C0CE  F0C8         	movff	printf@fmt+1,vfprintf@fmt+1
   993  002160  0ED1               	movlw	low printf@ap
   994  002162  6FC9               	movwf	vfprintf@ap& (0+255),b
   995  002164  0E00               	movlw	high printf@ap
   996  002166  6FCA               	movwf	(vfprintf@ap+1)& (0+255),b
   997  002168  ECFB  F00E         	call	_vfprintf	;wreg free
   998  00216C  0012               	return		;funcret
   999  00216E                     __end_of_printf:
  1000                           	opt callstack 0
  1001                           
  1002 ;; *************** function _vfprintf *****************
  1003 ;; Defined at:
  1004 ;;		line 1368 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  1007 ;;		 -> NULL(0), 
  1008 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  1009 ;;		 -> STR_6(6), STR_5(12), STR_4(6), STR_3(12), 
  1010 ;;		 -> STR_2(9), STR_1(7), 
  1011 ;;  ap              2  105[BANK0 ] PTR PTR void 
  1012 ;;		 -> printf@ap(2), 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  1015 ;;		 -> STR_6(6), STR_5(12), STR_4(6), STR_3(12), 
  1016 ;;		 -> STR_2(9), STR_1(7), 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2  101[BANK0 ] int 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1026 ;;      Params:         0       6       0       0       0       0       0       0       0
  1027 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1029 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1030 ;;Total ram usage:        8 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:   21
  1033 ;; This function calls:
  1034 ;;		_vfpfcnvrt
  1035 ;; This function is called by:
  1036 ;;		_printf
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text2
  1041  001DF6                     __ptext2:
  1042                           	opt callstack 0
  1043  001DF6                     _vfprintf:
  1044                           	opt callstack 8
  1045  001DF6                     
  1046                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *fp, co
      +                          nst char *fmt, va_list ap);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1369:
      +                           {;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1371:     char *cfmt;;F:\Prog
      +                          ram Files\mplab\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1047  001DF6  C0C7  F0CB         	movff	vfprintf@fmt,vfprintf@cfmt
  1048  001DFA  C0C8  F0CC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1049  001DFE                     
  1050                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  1051  001DFE  0E00               	movlw	0
  1052  001E00  0100               	movlb	0	; () banked
  1053  001E02  6FD6               	movwf	(_nout+1)& (0+255),b
  1054  001E04  0E00               	movlw	0
  1055  001E06  6FD5               	movwf	_nout& (0+255),b
  1056                           
  1057                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  1058  001E08  EF19  F00F         	goto	l2128
  1059  001E0C                     l2126:
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1376:         nout += vfpfcnvrt
      +                          (fp, &cfmt, ap);
  1063  001E0C  C0C5  F0B5         	movff	vfprintf@fp,vfpfcnvrt@fp
  1064  001E10  C0C6  F0B6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1065  001E14  0ECB               	movlw	low vfprintf@cfmt
  1066  001E16  6FB7               	movwf	vfpfcnvrt@fmt& (0+255),b
  1067  001E18  0E00               	movlw	high vfprintf@cfmt
  1068  001E1A  6FB8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1069  001E1C  C0C9  F0B9         	movff	vfprintf@ap,vfpfcnvrt@ap
  1070  001E20  C0CA  F0BA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1071  001E24  ECFC  F006         	call	_vfpfcnvrt	;wreg free
  1072  001E28  0100               	movlb	0	; () banked
  1073  001E2A  51B5               	movf	?_vfpfcnvrt& (0+255),w,b
  1074  001E2C  27D5               	addwf	_nout& (0+255),f,b
  1075  001E2E  51B6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1076  001E30  23D6               	addwfc	(_nout+1)& (0+255),f,b
  1077  001E32                     l2128:
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  1081  001E32  C0CB  FFF6         	movff	vfprintf@cfmt,tblptrl
  1082  001E36  C0CC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1083  001E3A                     	if	0	;tblptru may be non-zero
  1084  001E3A                     	endif
  1085  001E3A                     	if	0	;tblptru may be non-zero
  1086  001E3A                     	endif
  1087  001E3A  0008               	tblrd		*
  1088  001E3C  50F5               	movf	tablat,w,c
  1089  001E3E  0900               	iorlw	0
  1090  001E40  A4D8               	btfss	status,2,c
  1091  001E42  EF25  F00F         	goto	u1911
  1092  001E46  EF27  F00F         	goto	u1910
  1093  001E4A                     u1911:
  1094  001E4A  EF06  F00F         	goto	l2126
  1095  001E4E                     u1910:
  1096  001E4E                     
  1097                           ; BSR set to: 0
  1098                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  1099  001E4E  C0D5  F0C5         	movff	_nout,?_vfprintf
  1100  001E52  C0D6  F0C6         	movff	_nout+1,?_vfprintf+1
  1101  001E56                     
  1102                           ; BSR set to: 0
  1103  001E56  0012               	return		;funcret
  1104  001E58                     __end_of_vfprintf:
  1105                           	opt callstack 0
  1106                           
  1107 ;; *************** function _vfpfcnvrt *****************
  1108 ;; Defined at:
  1109 ;;		line 670 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  fp              2   85[BANK0 ] PTR struct _IO_FILE
  1112 ;;		 -> NULL(0), 
  1113 ;;  fmt             2   87[BANK0 ] PTR PTR unsigned char 
  1114 ;;		 -> vfprintf@cfmt(2), 
  1115 ;;  ap              2   89[BANK0 ] PTR PTR void 
  1116 ;;		 -> printf@ap(2), 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  ll              8   93[BANK0 ] long long 
  1119 ;;  llu             8    0        unsigned long long 
  1120 ;;  f               4    0        unsigned long long 
  1121 ;;  vp              3    0        PTR void 
  1122 ;;  ct              3    0        unsigned char [3]
  1123 ;;  cp              3    0        PTR unsigned char 
  1124 ;;  i               2    0        int 
  1125 ;;  done            2    0        int 
  1126 ;;  c               1    0        unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2   85[BANK0 ] int 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1136 ;;      Params:         0       6       0       0       0       0       0       0       0
  1137 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1138 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1139 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1140 ;;Total ram usage:       16 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:   20
  1143 ;; This function calls:
  1144 ;;		_dtoa
  1145 ;;		_fputc
  1146 ;; This function is called by:
  1147 ;;		_vfprintf
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text3
  1152  000DF8                     __ptext3:
  1153                           	opt callstack 0
  1154  000DF8                     _vfpfcnvrt:
  1155                           	opt callstack 8
  1156  000DF8                     
  1157                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt(FILE 
      +                          *fp, char *fmt[], va_list ap);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 67
      +                          1: {;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3]
      +                          ;;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 673:     int done, i;;F:\Progr
      +                          am Files\mplab\pic\sources\c99\common\doprnt.c: 674:     long long ll;;F:\Program Files\
      +                          mplab\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;;F:\Program Files
      +                          \mplab\pic\sources\c99\common\doprnt.c: 676:     long double f;
  1158  000DF8  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1159  000DFC  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1160  000E00  CFDE FFF6          	movff	postinc2,tblptrl
  1161  000E04  CFDD FFF7          	movff	postdec2,tblptrh
  1162  000E08                     	if	0	;tblptru may be non-zero
  1163  000E08                     	endif
  1164  000E08                     	if	0	;tblptru may be non-zero
  1165  000E08                     	endif
  1166  000E08  0008               	tblrd		*
  1167  000E0A  50F5               	movf	tablat,w,c
  1168  000E0C  0A25               	xorlw	37
  1169  000E0E  A4D8               	btfss	status,2,c
  1170  000E10  EF0C  F007         	goto	u1831
  1171  000E14  EF0E  F007         	goto	u1830
  1172  000E18                     u1831:
  1173  000E18  EFBB  F007         	goto	l2072
  1174  000E1C                     u1830:
  1175  000E1C                     
  1176                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  1177  000E1C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1178  000E20  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1179  000E24  2ADE               	incf	postinc2,f,c
  1180  000E26  0E00               	movlw	0
  1181  000E28  22DD               	addwfc	postdec2,f,c
  1182  000E2A                     
  1183                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 683:         flags = width = 0;
  1184  000E2A  0E00               	movlw	0
  1185  000E2C  0100               	movlb	0	; () banked
  1186  000E2E  6FD8               	movwf	(_width+1)& (0+255),b
  1187  000E30  0E00               	movlw	0
  1188  000E32  6FD7               	movwf	_width& (0+255),b
  1189  000E34  C0D7  F0DB         	movff	_width,_flags
  1190  000E38  C0D8  F0DC         	movff	_width+1,_flags+1
  1191  000E3C                     
  1192                           ; BSR set to: 0
  1193                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  1194  000E3C  69D9               	setf	_prec& (0+255),b
  1195  000E3E  69DA               	setf	(_prec+1)& (0+255),b
  1196  000E40                     
  1197                           ; BSR set to: 0
  1198                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0] == 'd
      +                          ') || (*fmt[0] == 'i')) {
  1199  000E40  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1200  000E44  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1201  000E48  CFDE FFF6          	movff	postinc2,tblptrl
  1202  000E4C  CFDD FFF7          	movff	postdec2,tblptrh
  1203  000E50                     	if	0	;tblptru may be non-zero
  1204  000E50                     	endif
  1205  000E50                     	if	0	;tblptru may be non-zero
  1206  000E50                     	endif
  1207  000E50  0008               	tblrd		*
  1208  000E52  50F5               	movf	tablat,w,c
  1209  000E54  0A64               	xorlw	100
  1210  000E56  B4D8               	btfsc	status,2,c
  1211  000E58  EF30  F007         	goto	u1841
  1212  000E5C  EF32  F007         	goto	u1840
  1213  000E60                     u1841:
  1214  000E60  EF44  F007         	goto	l2050
  1215  000E64                     u1840:
  1216  000E64                     
  1217                           ; BSR set to: 0
  1218  000E64  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1219  000E68  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1220  000E6C  CFDE FFF6          	movff	postinc2,tblptrl
  1221  000E70  CFDD FFF7          	movff	postdec2,tblptrh
  1222  000E74                     	if	0	;tblptru may be non-zero
  1223  000E74                     	endif
  1224  000E74                     	if	0	;tblptru may be non-zero
  1225  000E74                     	endif
  1226  000E74  0008               	tblrd		*
  1227  000E76  50F5               	movf	tablat,w,c
  1228  000E78  0A69               	xorlw	105
  1229  000E7A  A4D8               	btfss	status,2,c
  1230  000E7C  EF42  F007         	goto	u1851
  1231  000E80  EF44  F007         	goto	u1850
  1232  000E84                     u1851:
  1233  000E84  EF84  F007         	goto	l2056
  1234  000E88                     u1850:
  1235  000E88                     l2050:
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 827:             ++*fmt;
  1239  000E88  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1240  000E8C  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1241  000E90  2ADE               	incf	postinc2,f,c
  1242  000E92  0E00               	movlw	0
  1243  000E94  22DD               	addwfc	postdec2,f,c
  1244                           
  1245                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 828:             ll = (long lon
      +                          g)(*(int *)__va_arg(*(int **)ap, (int)0));
  1246  000E96  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1247  000E9A  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1248  000E9E  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
  1249  000EA2  0E02               	movlw	2
  1250  000EA4  26DE               	addwf	postinc2,f,c
  1251  000EA6  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
  1252  000EAA  0E00               	movlw	0
  1253  000EAC  22DD               	addwfc	postdec2,f,c
  1254  000EAE  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1255  000EB2  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1256  000EB6  CFDE F0BD          	movff	postinc2,vfpfcnvrt@ll
  1257  000EBA  CFDD F0BE          	movff	postdec2,vfpfcnvrt@ll+1
  1258  000EBE  0E00               	movlw	0
  1259  000EC0  BFBE               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1260  000EC2  0EFF               	movlw	-1
  1261  000EC4  6FBF               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1262  000EC6  6FC0               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1263  000EC8  6FC1               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1264  000ECA  6FC2               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1265  000ECC  6FC3               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1266  000ECE  6FC4               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1267  000ED0                     
  1268                           ; BSR set to: 0
  1269                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 830:             return dtoa(fp
      +                          , ll);
  1270  000ED0  C0B5  F091         	movff	vfpfcnvrt@fp,dtoa@fp
  1271  000ED4  C0B6  F092         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1272  000ED8  C0BD  F093         	movff	vfpfcnvrt@ll,dtoa@d
  1273  000EDC  C0BE  F094         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1274  000EE0  C0BF  F095         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1275  000EE4  C0C0  F096         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1276  000EE8  C0C1  F097         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1277  000EEC  C0C2  F098         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1278  000EF0  C0C3  F099         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1279  000EF4  C0C4  F09A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1280  000EF8  EC18  F004         	call	_dtoa	;wreg free
  1281  000EFC  C091  F0B5         	movff	?_dtoa,?_vfpfcnvrt
  1282  000F00  C092  F0B6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1283  000F04  EFD7  F007         	goto	l155
  1284  000F08                     l2056:
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[0] == 
      +                          '%') {
  1288  000F08  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1289  000F0C  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1290  000F10  CFDE FFF6          	movff	postinc2,tblptrl
  1291  000F14  CFDD FFF7          	movff	postdec2,tblptrh
  1292  000F18                     	if	0	;tblptru may be non-zero
  1293  000F18                     	endif
  1294  000F18                     	if	0	;tblptru may be non-zero
  1295  000F18                     	endif
  1296  000F18  0008               	tblrd		*
  1297  000F1A  50F5               	movf	tablat,w,c
  1298  000F1C  0A25               	xorlw	37
  1299  000F1E  A4D8               	btfss	status,2,c
  1300  000F20  EF94  F007         	goto	u1861
  1301  000F24  EF96  F007         	goto	u1860
  1302  000F28                     u1861:
  1303  000F28  EFAE  F007         	goto	l2066
  1304  000F2C                     u1860:
  1305  000F2C                     
  1306                           ; BSR set to: 0
  1307                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  1308  000F2C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1309  000F30  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1310  000F34  2ADE               	incf	postinc2,f,c
  1311  000F36  0E00               	movlw	0
  1312  000F38  22DD               	addwfc	postdec2,f,c
  1313  000F3A                     
  1314                           ; BSR set to: 0
  1315                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1352:             fputc((int)'%
      +                          ', fp);
  1316  000F3A  0E00               	movlw	0
  1317  000F3C  6F77               	movwf	(fputc@c+1)& (0+255),b
  1318  000F3E  0E25               	movlw	37
  1319  000F40  6F76               	movwf	fputc@c& (0+255),b
  1320  000F42  C0B5  F078         	movff	vfpfcnvrt@fp,fputc@fp
  1321  000F46  C0B6  F079         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1322  000F4A  EC91  F00D         	call	_fputc	;wreg free
  1323  000F4E                     l2062:
  1324                           
  1325                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1353:             return 1;
  1326  000F4E  0E00               	movlw	0
  1327  000F50  0100               	movlb	0	; () banked
  1328  000F52  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1329  000F54  0E01               	movlw	1
  1330  000F56  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  1331  000F58  EFD7  F007         	goto	l155
  1332  000F5C                     l2066:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  1336  000F5C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1337  000F60  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1338  000F64  2ADE               	incf	postinc2,f,c
  1339  000F66  0E00               	movlw	0
  1340  000F68  22DD               	addwfc	postdec2,f,c
  1341  000F6A                     
  1342                           ; BSR set to: 0
  1343                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  1344  000F6A  0E00               	movlw	0
  1345  000F6C  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1346  000F6E  0E00               	movlw	0
  1347  000F70  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  1348  000F72  EFD7  F007         	goto	l155
  1349  000F76                     l2072:
  1350                           
  1351                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fmt)[0],
      +                           fp);
  1352  000F76  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353  000F7A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354  000F7E  CFDE FFF6          	movff	postinc2,tblptrl
  1355  000F82  CFDD FFF7          	movff	postdec2,tblptrh
  1356  000F86                     	if	0	;tblptru may be non-zero
  1357  000F86                     	endif
  1358  000F86                     	if	0	;tblptru may be non-zero
  1359  000F86                     	endif
  1360  000F86  0008               	tblrd		*
  1361  000F88  50F5               	movf	tablat,w,c
  1362  000F8A  0100               	movlb	0	; () banked
  1363  000F8C  6F76               	movwf	fputc@c& (0+255),b
  1364  000F8E  6B77               	clrf	(fputc@c+1)& (0+255),b
  1365  000F90  C0B5  F078         	movff	vfpfcnvrt@fp,fputc@fp
  1366  000F94  C0B6  F079         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1367  000F98  EC91  F00D         	call	_fputc	;wreg free
  1368  000F9C                     
  1369                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1370  000F9C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1371  000FA0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1372  000FA4  2ADE               	incf	postinc2,f,c
  1373  000FA6  0E00               	movlw	0
  1374  000FA8  22DD               	addwfc	postdec2,f,c
  1375  000FAA  EFA7  F007         	goto	l2062
  1376  000FAE                     l155:
  1377  000FAE  0012               	return		;funcret
  1378  000FB0                     __end_of_vfpfcnvrt:
  1379                           	opt callstack 0
  1380                           
  1381 ;; *************** function _dtoa *****************
  1382 ;; Defined at:
  1383 ;;		line 274 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
  1386 ;;		 -> NULL(0), 
  1387 ;;  d               8   51[BANK0 ] long long 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  n               8   75[BANK0 ] long long 
  1390 ;;  i               2   83[BANK0 ] int 
  1391 ;;  s               2   73[BANK0 ] int 
  1392 ;;  w               2   71[BANK0 ] int 
  1393 ;;  p               2   69[BANK0 ] int 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  2   49[BANK0 ] int 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         0      10       0       0       0       0       0       0       0
  1404 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1406 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1407 ;;Total ram usage:       36 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:   19
  1410 ;; This function calls:
  1411 ;;		___aodiv
  1412 ;;		___aomod
  1413 ;;		_abs
  1414 ;;		_pad
  1415 ;; This function is called by:
  1416 ;;		_vfpfcnvrt
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text4
  1421  000830                     __ptext4:
  1422                           	opt callstack 0
  1423  000830                     _dtoa:
  1424                           	opt callstack 8
  1425  000830                     
  1426                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FILE *fp, 
      +                          long long d);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 275: {;F:\Program F
      +                          iles\mplab\pic\sources\c99\common\doprnt.c: 276:     int i, p, s, w;;F:\Program Files\mp
      +                          lab\pic\sources\c99\common\doprnt.c: 277:     long long n;;F:\Program Files\mplab\pic\so
      +                          urces\c99\common\doprnt.c: 280:     n = d;
  1427  000830  C093  F0AB         	movff	dtoa@d,dtoa@n
  1428  000834  C094  F0AC         	movff	dtoa@d+1,dtoa@n+1
  1429  000838  C095  F0AD         	movff	dtoa@d+2,dtoa@n+2
  1430  00083C  C096  F0AE         	movff	dtoa@d+3,dtoa@n+3
  1431  000840  C097  F0AF         	movff	dtoa@d+4,dtoa@n+4
  1432  000844  C098  F0B0         	movff	dtoa@d+5,dtoa@n+5
  1433  000848  C099  F0B1         	movff	dtoa@d+6,dtoa@n+6
  1434  00084C  C09A  F0B2         	movff	dtoa@d+7,dtoa@n+7
  1435  000850                     
  1436                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 : 0;
  1437  000850  0100               	movlb	0	; () banked
  1438  000852  BFB2               	btfsc	(dtoa@n+7)& (0+255),7,b
  1439  000854  EF2E  F004         	goto	u1531
  1440  000858  EF31  F004         	goto	u1530
  1441  00085C                     u1531:
  1442  00085C  0E01               	movlw	1
  1443  00085E  EF32  F004         	goto	u1540
  1444  000862                     u1530:
  1445  000862  0E00               	movlw	0
  1446  000864                     u1540:
  1447  000864  6FA9               	movwf	dtoa@s& (0+255),b
  1448  000866  6BAA               	clrf	(dtoa@s+1)& (0+255),b
  1449                           
  1450                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1451  000868  51A9               	movf	dtoa@s& (0+255),w,b
  1452  00086A  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1453  00086C  B4D8               	btfsc	status,2,c
  1454  00086E  EF3B  F004         	goto	u1551
  1455  000872  EF3D  F004         	goto	u1550
  1456  000876                     u1551:
  1457  000876  EF4D  F004         	goto	l1920
  1458  00087A                     u1550:
  1459  00087A                     
  1460                           ; BSR set to: 0
  1461                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  1462  00087A  1FB2               	comf	(dtoa@n+7)& (0+255),f,b
  1463  00087C  1FB1               	comf	(dtoa@n+6)& (0+255),f,b
  1464  00087E  1FB0               	comf	(dtoa@n+5)& (0+255),f,b
  1465  000880  1FAF               	comf	(dtoa@n+4)& (0+255),f,b
  1466  000882  1FAE               	comf	(dtoa@n+3)& (0+255),f,b
  1467  000884  1FAD               	comf	(dtoa@n+2)& (0+255),f,b
  1468  000886  1FAC               	comf	(dtoa@n+1)& (0+255),f,b
  1469  000888  6DAB               	negf	dtoa@n& (0+255),b
  1470  00088A  0E00               	movlw	0
  1471  00088C  23AC               	addwfc	(dtoa@n+1)& (0+255),f,b
  1472  00088E  23AD               	addwfc	(dtoa@n+2)& (0+255),f,b
  1473  000890  23AE               	addwfc	(dtoa@n+3)& (0+255),f,b
  1474  000892  23AF               	addwfc	(dtoa@n+4)& (0+255),f,b
  1475  000894  23B0               	addwfc	(dtoa@n+5)& (0+255),f,b
  1476  000896  23B1               	addwfc	(dtoa@n+6)& (0+255),f,b
  1477  000898  23B2               	addwfc	(dtoa@n+7)& (0+255),f,b
  1478  00089A                     l1920:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0)) {
  1482  00089A  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  1483  00089C  EF52  F004         	goto	u1561
  1484  0008A0  EF54  F004         	goto	u1560
  1485  0008A4                     u1561:
  1486  0008A4  EF55  F004         	goto	l1924
  1487  0008A8                     u1560:
  1488  0008A8                     
  1489                           ; BSR set to: 0
  1490                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 288:         flags &= ~(1 << 1)
      +                          ;
  1491  0008A8  93DB               	bcf	_flags& (0+255),1,b
  1492  0008AA                     l1924:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec) ? prec 
      +                          : 1;
  1496  0008AA  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  1497  0008AC  EF62  F004         	goto	u1570
  1498  0008B0  51DA               	movf	(_prec+1)& (0+255),w,b
  1499  0008B2  E106               	bnz	u1571
  1500  0008B4  05D9               	decf	_prec& (0+255),w,b
  1501  0008B6  B0D8               	btfsc	status,0,c
  1502  0008B8  EF60  F004         	goto	u1571
  1503  0008BC  EF62  F004         	goto	u1570
  1504  0008C0                     u1571:
  1505  0008C0  EF68  F004         	goto	l128
  1506  0008C4                     u1570:
  1507  0008C4                     
  1508                           ; BSR set to: 0
  1509  0008C4  0E00               	movlw	0
  1510  0008C6  6FA6               	movwf	(dtoa@p+1)& (0+255),b
  1511  0008C8  0E01               	movlw	1
  1512  0008CA  6FA5               	movwf	dtoa@p& (0+255),b
  1513  0008CC  EF6C  F004         	goto	l130
  1514  0008D0                     l128:
  1515                           
  1516                           ; BSR set to: 0
  1517  0008D0  C0D9  F0A5         	movff	_prec,dtoa@p
  1518  0008D4  C0DA  F0A6         	movff	_prec+1,dtoa@p+1
  1519  0008D8                     l130:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 291:     w = width;
  1523  0008D8  C0D7  F0A7         	movff	_width,dtoa@w
  1524  0008DC  C0D8  F0A8         	movff	_width+1,dtoa@w+1
  1525  0008E0                     
  1526                           ; BSR set to: 0
  1527                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 292:     if (s || (flags & (1 <
      +                          < 2))) {
  1528  0008E0  51A9               	movf	dtoa@s& (0+255),w,b
  1529  0008E2  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1530  0008E4  A4D8               	btfss	status,2,c
  1531  0008E6  EF77  F004         	goto	u1581
  1532  0008EA  EF79  F004         	goto	u1580
  1533  0008EE                     u1581:
  1534  0008EE  EF80  F004         	goto	l1932
  1535  0008F2                     u1580:
  1536  0008F2                     
  1537                           ; BSR set to: 0
  1538  0008F2  A5DB               	btfss	_flags& (0+255),2,b
  1539  0008F4  EF7E  F004         	goto	u1591
  1540  0008F8  EF80  F004         	goto	u1590
  1541  0008FC                     u1591:
  1542  0008FC  EF83  F004         	goto	l1934
  1543  000900                     u1590:
  1544  000900                     l1932:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 293:         --w;
  1548  000900  07A7               	decf	dtoa@w& (0+255),f,b
  1549  000902  A0D8               	btfss	status,0,c
  1550  000904  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  1551  000906                     l1934:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbuf) - 1;
  1555  000906  0E00               	movlw	0
  1556  000908  6FB4               	movwf	(dtoa@i+1)& (0+255),b
  1557  00090A  0E1F               	movlw	31
  1558  00090C  6FB3               	movwf	dtoa@i& (0+255),b
  1559  00090E                     
  1560                           ; BSR set to: 0
  1561                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0';
  1562  00090E  0E00               	movlw	0
  1563  000910  0101               	movlb	1	; () banked
  1564  000912  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1565                           
  1566                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n 
      +                          || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1567  000914  EF09  F005         	goto	l1948
  1568  000918                     l1938:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 300:         --i;
  1572  000918  07B3               	decf	dtoa@i& (0+255),f,b
  1573  00091A  A0D8               	btfss	status,0,c
  1574  00091C  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  1575  00091E                     
  1576                           ; BSR set to: 0
  1577                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = '0' + ab
      +                          s(n % 10);
  1578  00091E  0E00               	movlw	low _dbuf
  1579  000920  25B3               	addwf	dtoa@i& (0+255),w,b
  1580  000922  6ED9               	movwf	fsr2l,c
  1581  000924  0E01               	movlw	high _dbuf
  1582  000926  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  1583  000928  6EDA               	movwf	fsr2h,c
  1584  00092A  C0AB  F070         	movff	dtoa@n,___aomod@dividend
  1585  00092E  C0AC  F071         	movff	dtoa@n+1,___aomod@dividend+1
  1586  000932  C0AD  F072         	movff	dtoa@n+2,___aomod@dividend+2
  1587  000936  C0AE  F073         	movff	dtoa@n+3,___aomod@dividend+3
  1588  00093A  C0AF  F074         	movff	dtoa@n+4,___aomod@dividend+4
  1589  00093E  C0B0  F075         	movff	dtoa@n+5,___aomod@dividend+5
  1590  000942  C0B1  F076         	movff	dtoa@n+6,___aomod@dividend+6
  1591  000946  C0B2  F077         	movff	dtoa@n+7,___aomod@dividend+7
  1592  00094A  0E0A               	movlw	10
  1593  00094C  6F78               	movwf	___aomod@divisor& (0+255),b
  1594  00094E  0E00               	movlw	0
  1595  000950  6F79               	movwf	(___aomod@divisor+1)& (0+255),b
  1596  000952  0E00               	movlw	0
  1597  000954  6F7A               	movwf	(___aomod@divisor+2)& (0+255),b
  1598  000956  0E00               	movlw	0
  1599  000958  6F7B               	movwf	(___aomod@divisor+3)& (0+255),b
  1600  00095A  0E00               	movlw	0
  1601  00095C  6F7C               	movwf	(___aomod@divisor+4)& (0+255),b
  1602  00095E  0E00               	movlw	0
  1603  000960  6F7D               	movwf	(___aomod@divisor+5)& (0+255),b
  1604  000962  0E00               	movlw	0
  1605  000964  6F7E               	movwf	(___aomod@divisor+6)& (0+255),b
  1606  000966  0E00               	movlw	0
  1607  000968  6F7F               	movwf	(___aomod@divisor+7)& (0+255),b
  1608  00096A  EC0C  F00B         	call	___aomod	;wreg free
  1609  00096E  C070  F09B         	movff	?___aomod,??_dtoa
  1610  000972  C071  F09C         	movff	?___aomod+1,??_dtoa+1
  1611  000976  C072  F09D         	movff	?___aomod+2,??_dtoa+2
  1612  00097A  C073  F09E         	movff	?___aomod+3,??_dtoa+3
  1613  00097E  C074  F09F         	movff	?___aomod+4,??_dtoa+4
  1614  000982  C075  F0A0         	movff	?___aomod+5,??_dtoa+5
  1615  000986  C076  F0A1         	movff	?___aomod+6,??_dtoa+6
  1616  00098A  C077  F0A2         	movff	?___aomod+7,??_dtoa+7
  1617  00098E  C09B  F082         	movff	??_dtoa,abs@a
  1618  000992  C09D  F083         	movff	??_dtoa+2,abs@a+1
  1619  000996  ECC6  F00F         	call	_abs	;wreg free
  1620  00099A  0100               	movlb	0	; () banked
  1621  00099C  5182               	movf	?_abs& (0+255),w,b
  1622  00099E  0F30               	addlw	48
  1623  0009A0  6EDF               	movwf	indf2,c
  1624  0009A2                     
  1625                           ; BSR set to: 0
  1626                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 302:         --p;
  1627  0009A2  07A5               	decf	dtoa@p& (0+255),f,b
  1628  0009A4  A0D8               	btfss	status,0,c
  1629  0009A6  07A6               	decf	(dtoa@p+1)& (0+255),f,b
  1630  0009A8                     
  1631                           ; BSR set to: 0
  1632                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 303:         --w;
  1633  0009A8  07A7               	decf	dtoa@w& (0+255),f,b
  1634  0009AA  A0D8               	btfss	status,0,c
  1635  0009AC  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  1636  0009AE                     
  1637                           ; BSR set to: 0
  1638                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 304:         n = n / 10;
  1639  0009AE  C0AB  F070         	movff	dtoa@n,___aodiv@dividend
  1640  0009B2  C0AC  F071         	movff	dtoa@n+1,___aodiv@dividend+1
  1641  0009B6  C0AD  F072         	movff	dtoa@n+2,___aodiv@dividend+2
  1642  0009BA  C0AE  F073         	movff	dtoa@n+3,___aodiv@dividend+3
  1643  0009BE  C0AF  F074         	movff	dtoa@n+4,___aodiv@dividend+4
  1644  0009C2  C0B0  F075         	movff	dtoa@n+5,___aodiv@dividend+5
  1645  0009C6  C0B1  F076         	movff	dtoa@n+6,___aodiv@dividend+6
  1646  0009CA  C0B2  F077         	movff	dtoa@n+7,___aodiv@dividend+7
  1647  0009CE  0E0A               	movlw	10
  1648  0009D0  6F78               	movwf	___aodiv@divisor& (0+255),b
  1649  0009D2  0E00               	movlw	0
  1650  0009D4  6F79               	movwf	(___aodiv@divisor+1)& (0+255),b
  1651  0009D6  0E00               	movlw	0
  1652  0009D8  6F7A               	movwf	(___aodiv@divisor+2)& (0+255),b
  1653  0009DA  0E00               	movlw	0
  1654  0009DC  6F7B               	movwf	(___aodiv@divisor+3)& (0+255),b
  1655  0009DE  0E00               	movlw	0
  1656  0009E0  6F7C               	movwf	(___aodiv@divisor+4)& (0+255),b
  1657  0009E2  0E00               	movlw	0
  1658  0009E4  6F7D               	movwf	(___aodiv@divisor+5)& (0+255),b
  1659  0009E6  0E00               	movlw	0
  1660  0009E8  6F7E               	movwf	(___aodiv@divisor+6)& (0+255),b
  1661  0009EA  0E00               	movlw	0
  1662  0009EC  6F7F               	movwf	(___aodiv@divisor+7)& (0+255),b
  1663  0009EE  EC83  F009         	call	___aodiv	;wreg free
  1664  0009F2  C070  F0AB         	movff	?___aodiv,dtoa@n
  1665  0009F6  C071  F0AC         	movff	?___aodiv+1,dtoa@n+1
  1666  0009FA  C072  F0AD         	movff	?___aodiv+2,dtoa@n+2
  1667  0009FE  C073  F0AE         	movff	?___aodiv+3,dtoa@n+3
  1668  000A02  C074  F0AF         	movff	?___aodiv+4,dtoa@n+4
  1669  000A06  C075  F0B0         	movff	?___aodiv+5,dtoa@n+5
  1670  000A0A  C076  F0B1         	movff	?___aodiv+6,dtoa@n+6
  1671  000A0E  C077  F0B2         	movff	?___aodiv+7,dtoa@n+7
  1672  000A12                     l1948:
  1673                           
  1674                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n 
      +                          || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1675  000A12  0100               	movlb	0	; () banked
  1676  000A14  BFB4               	btfsc	(dtoa@i+1)& (0+255),7,b
  1677  000A16  EF15  F005         	goto	u1601
  1678  000A1A  51B4               	movf	(dtoa@i+1)& (0+255),w,b
  1679  000A1C  E108               	bnz	u1600
  1680  000A1E  05B3               	decf	dtoa@i& (0+255),w,b
  1681  000A20  A0D8               	btfss	status,0,c
  1682  000A22  EF15  F005         	goto	u1601
  1683  000A26  EF17  F005         	goto	u1600
  1684  000A2A                     u1601:
  1685  000A2A  EF47  F005         	goto	l1958
  1686  000A2E                     u1600:
  1687  000A2E                     
  1688                           ; BSR set to: 0
  1689  000A2E  51AB               	movf	dtoa@n& (0+255),w,b
  1690  000A30  11AC               	iorwf	(dtoa@n+1)& (0+255),w,b
  1691  000A32  11AD               	iorwf	(dtoa@n+2)& (0+255),w,b
  1692  000A34  11AE               	iorwf	(dtoa@n+3)& (0+255),w,b
  1693  000A36  11AF               	iorwf	(dtoa@n+4)& (0+255),w,b
  1694  000A38  11B0               	iorwf	(dtoa@n+5)& (0+255),w,b
  1695  000A3A  11B1               	iorwf	(dtoa@n+6)& (0+255),w,b
  1696  000A3C  11B2               	iorwf	(dtoa@n+7)& (0+255),w,b
  1697  000A3E  A4D8               	btfss	status,2,c
  1698  000A40  EF24  F005         	goto	u1611
  1699  000A44  EF26  F005         	goto	u1610
  1700  000A48                     u1611:
  1701  000A48  EF8C  F004         	goto	l1938
  1702  000A4C                     u1610:
  1703  000A4C                     
  1704                           ; BSR set to: 0
  1705  000A4C  BFA6               	btfsc	(dtoa@p+1)& (0+255),7,b
  1706  000A4E  EF33  F005         	goto	u1620
  1707  000A52  51A6               	movf	(dtoa@p+1)& (0+255),w,b
  1708  000A54  E106               	bnz	u1621
  1709  000A56  05A5               	decf	dtoa@p& (0+255),w,b
  1710  000A58  B0D8               	btfsc	status,0,c
  1711  000A5A  EF31  F005         	goto	u1621
  1712  000A5E  EF33  F005         	goto	u1620
  1713  000A62                     u1621:
  1714  000A62  EF8C  F004         	goto	l1938
  1715  000A66                     u1620:
  1716  000A66                     
  1717                           ; BSR set to: 0
  1718  000A66  BFA8               	btfsc	(dtoa@w+1)& (0+255),7,b
  1719  000A68  EF3E  F005         	goto	u1631
  1720  000A6C  51A8               	movf	(dtoa@w+1)& (0+255),w,b
  1721  000A6E  E108               	bnz	u1630
  1722  000A70  05A7               	decf	dtoa@w& (0+255),w,b
  1723  000A72  A0D8               	btfss	status,0,c
  1724  000A74  EF3E  F005         	goto	u1631
  1725  000A78  EF40  F005         	goto	u1630
  1726  000A7C                     u1631:
  1727  000A7C  EF47  F005         	goto	l1958
  1728  000A80                     u1630:
  1729  000A80                     
  1730                           ; BSR set to: 0
  1731  000A80  B3DB               	btfsc	_flags& (0+255),1,b
  1732  000A82  EF45  F005         	goto	u1641
  1733  000A86  EF47  F005         	goto	u1640
  1734  000A8A                     u1641:
  1735  000A8A  EF8C  F004         	goto	l1938
  1736  000A8E                     u1640:
  1737  000A8E                     l1958:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 308:     if (s || (flags & (1 <
      +                          < 2))) {
  1741  000A8E  51A9               	movf	dtoa@s& (0+255),w,b
  1742  000A90  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1743  000A92  A4D8               	btfss	status,2,c
  1744  000A94  EF4E  F005         	goto	u1651
  1745  000A98  EF50  F005         	goto	u1650
  1746  000A9C                     u1651:
  1747  000A9C  EF57  F005         	goto	l1962
  1748  000AA0                     u1650:
  1749  000AA0                     
  1750                           ; BSR set to: 0
  1751  000AA0  A5DB               	btfss	_flags& (0+255),2,b
  1752  000AA2  EF55  F005         	goto	u1661
  1753  000AA6  EF57  F005         	goto	u1660
  1754  000AAA                     u1661:
  1755  000AAA  EF75  F005         	goto	l1972
  1756  000AAE                     u1660:
  1757  000AAE                     l1962:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 309:         --i;
  1761  000AAE  07B3               	decf	dtoa@i& (0+255),f,b
  1762  000AB0  A0D8               	btfss	status,0,c
  1763  000AB2  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  1764  000AB4                     
  1765                           ; BSR set to: 0
  1766                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = s ? '-' 
      +                          : '+';
  1767  000AB4  51A9               	movf	dtoa@s& (0+255),w,b
  1768  000AB6  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  1769  000AB8  A4D8               	btfss	status,2,c
  1770  000ABA  EF61  F005         	goto	u1671
  1771  000ABE  EF63  F005         	goto	u1670
  1772  000AC2                     u1671:
  1773  000AC2  EF69  F005         	goto	l1968
  1774  000AC6                     u1670:
  1775  000AC6                     
  1776                           ; BSR set to: 0
  1777  000AC6  0E00               	movlw	0
  1778  000AC8  6FA4               	movwf	(_dtoa$490+1)& (0+255),b
  1779  000ACA  0E2B               	movlw	43
  1780  000ACC  6FA3               	movwf	_dtoa$490& (0+255),b
  1781  000ACE  EF6D  F005         	goto	l1970
  1782  000AD2                     l1968:
  1783                           
  1784                           ; BSR set to: 0
  1785  000AD2  0E00               	movlw	0
  1786  000AD4  6FA4               	movwf	(_dtoa$490+1)& (0+255),b
  1787  000AD6  0E2D               	movlw	45
  1788  000AD8  6FA3               	movwf	_dtoa$490& (0+255),b
  1789  000ADA                     l1970:
  1790                           
  1791                           ; BSR set to: 0
  1792  000ADA  0E00               	movlw	low _dbuf
  1793  000ADC  25B3               	addwf	dtoa@i& (0+255),w,b
  1794  000ADE  6ED9               	movwf	fsr2l,c
  1795  000AE0  0E01               	movlw	high _dbuf
  1796  000AE2  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  1797  000AE4  6EDA               	movwf	fsr2h,c
  1798  000AE6  C0A3  FFDF         	movff	_dtoa$490,indf2
  1799  000AEA                     l1972:
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 314:     return pad(fp, &dbuf[i
      +                          ], w);
  1803  000AEA  C091  F086         	movff	dtoa@fp,pad@fp
  1804  000AEE  C092  F087         	movff	dtoa@fp+1,pad@fp+1
  1805  000AF2  0E00               	movlw	low _dbuf
  1806  000AF4  25B3               	addwf	dtoa@i& (0+255),w,b
  1807  000AF6  6F88               	movwf	pad@buf& (0+255),b
  1808  000AF8  0E01               	movlw	high _dbuf
  1809  000AFA  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  1810  000AFC  6F89               	movwf	(pad@buf+1)& (0+255),b
  1811  000AFE  C0A7  F08A         	movff	dtoa@w,pad@p
  1812  000B02  C0A8  F08B         	movff	dtoa@w+1,pad@p+1
  1813  000B06  EC71  F00C         	call	_pad	;wreg free
  1814  000B0A  C086  F091         	movff	?_pad,?_dtoa
  1815  000B0E  C087  F092         	movff	?_pad+1,?_dtoa+1
  1816  000B12  0012               	return		;funcret
  1817  000B14                     __end_of_dtoa:
  1818                           	opt callstack 0
  1819                           
  1820 ;; *************** function _pad *****************
  1821 ;; Defined at:
  1822 ;;		line 72 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  fp              2   38[BANK0 ] PTR struct _IO_FILE
  1825 ;;		 -> NULL(0), 
  1826 ;;  buf             2   40[BANK0 ] PTR unsigned char 
  1827 ;;		 -> dbuf(32), 
  1828 ;;  p               2   42[BANK0 ] int 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  w               2   47[BANK0 ] int 
  1831 ;;  i               2   45[BANK0 ] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  2   38[BANK0 ] int 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1841 ;;      Params:         0       6       0       0       0       0       0       0       0
  1842 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1843 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1844 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1845 ;;Total ram usage:       11 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:   18
  1848 ;; This function calls:
  1849 ;;		_fputc
  1850 ;;		_fputs
  1851 ;;		_strlen
  1852 ;; This function is called by:
  1853 ;;		_dtoa
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text5
  1858  0018E2                     __ptext5:
  1859                           	opt callstack 0
  1860  0018E2                     _pad:
  1861                           	opt callstack 8
  1862  0018E2                     
  1863                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, ch
      +                          ar *buf, int p);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 73: {;F:\Program
      +                           Files\mplab\pic\sources\c99\common\doprnt.c: 74:     int i, w;;F:\Program Files\mplab\p
      +                          ic\sources\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1864  0018E2  0100               	movlb	0	; () banked
  1865  0018E4  A1DB               	btfss	_flags& (0+255),0,b
  1866  0018E6  EF77  F00C         	goto	u1171
  1867  0018EA  EF79  F00C         	goto	u1170
  1868  0018EE                     u1171:
  1869  0018EE  EF83  F00C         	goto	l1706
  1870  0018F2                     u1170:
  1871  0018F2                     
  1872                           ; BSR set to: 0
  1873                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *
      +                          )buf, fp);
  1874  0018F2  C088  F07F         	movff	pad@buf,fputs@s
  1875  0018F6  C089  F080         	movff	pad@buf+1,fputs@s+1
  1876  0018FA  C086  F081         	movff	pad@fp,fputs@fp
  1877  0018FE  C087  F082         	movff	pad@fp+1,fputs@fp+1
  1878  001902  EC5D  F00F         	call	_fputs	;wreg free
  1879  001906                     l1706:
  1880                           
  1881                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  1882  001906  0100               	movlb	0	; () banked
  1883  001908  BF8B               	btfsc	(pad@p+1)& (0+255),7,b
  1884  00190A  EF89  F00C         	goto	u1181
  1885  00190E  EF8B  F00C         	goto	u1180
  1886  001912                     u1181:
  1887  001912  EF91  F00C         	goto	l1710
  1888  001916                     u1180:
  1889  001916                     
  1890                           ; BSR set to: 0
  1891  001916  C08A  F08F         	movff	pad@p,pad@w
  1892  00191A  C08B  F090         	movff	pad@p+1,pad@w+1
  1893  00191E  EF95  F00C         	goto	l117
  1894  001922                     l1710:
  1895                           
  1896                           ; BSR set to: 0
  1897  001922  0E00               	movlw	0
  1898  001924  6F90               	movwf	(pad@w+1)& (0+255),b
  1899  001926  0E00               	movlw	0
  1900  001928  6F8F               	movwf	pad@w& (0+255),b
  1901  00192A                     l117:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1905  00192A  0E00               	movlw	0
  1906  00192C  6F8E               	movwf	(pad@i+1)& (0+255),b
  1907  00192E  0E00               	movlw	0
  1908  001930  6F8D               	movwf	pad@i& (0+255),b
  1909                           
  1910                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  1911  001932  EFA8  F00C         	goto	l1716
  1912  001936                     l1712:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  1916  001936  0E00               	movlw	0
  1917  001938  6F77               	movwf	(fputc@c+1)& (0+255),b
  1918  00193A  0E20               	movlw	32
  1919  00193C  6F76               	movwf	fputc@c& (0+255),b
  1920  00193E  C086  F078         	movff	pad@fp,fputc@fp
  1921  001942  C087  F079         	movff	pad@fp+1,fputc@fp+1
  1922  001946  EC91  F00D         	call	_fputc	;wreg free
  1923  00194A                     
  1924                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1925  00194A  0100               	movlb	0	; () banked
  1926  00194C  4B8D               	infsnz	pad@i& (0+255),f,b
  1927  00194E  2B8E               	incf	(pad@i+1)& (0+255),f,b
  1928  001950                     l1716:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  1932  001950  518F               	movf	pad@w& (0+255),w,b
  1933  001952  5D8D               	subwf	pad@i& (0+255),w,b
  1934  001954  518E               	movf	(pad@i+1)& (0+255),w,b
  1935  001956  0A80               	xorlw	128
  1936  001958  6F8C               	movwf	??_pad& (0+255),b
  1937  00195A  5190               	movf	(pad@w+1)& (0+255),w,b
  1938  00195C  0A80               	xorlw	128
  1939  00195E  598C               	subwfb	??_pad& (0+255),w,b
  1940  001960  A0D8               	btfss	status,0,c
  1941  001962  EFB5  F00C         	goto	u1191
  1942  001966  EFB7  F00C         	goto	u1190
  1943  00196A                     u1191:
  1944  00196A  EF9B  F00C         	goto	l1712
  1945  00196E                     u1190:
  1946  00196E                     
  1947                           ; BSR set to: 0
  1948                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))
      +                          ) {
  1949  00196E  B1DB               	btfsc	_flags& (0+255),0,b
  1950  001970  EFBC  F00C         	goto	u1201
  1951  001974  EFBE  F00C         	goto	u1200
  1952  001978                     u1201:
  1953  001978  EFC8  F00C         	goto	l1720
  1954  00197C                     u1200:
  1955  00197C                     
  1956                           ; BSR set to: 0
  1957                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *
      +                          )buf, fp);
  1958  00197C  C088  F07F         	movff	pad@buf,fputs@s
  1959  001980  C089  F080         	movff	pad@buf+1,fputs@s+1
  1960  001984  C086  F081         	movff	pad@fp,fputs@fp
  1961  001988  C087  F082         	movff	pad@fp+1,fputs@fp+1
  1962  00198C  EC5D  F00F         	call	_fputs	;wreg free
  1963  001990                     l1720:
  1964                           
  1965                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf) + w;
  1966  001990  C088  F070         	movff	pad@buf,strlen@s
  1967  001994  C089  F071         	movff	pad@buf+1,strlen@s+1
  1968  001998  EC28  F010         	call	_strlen	;wreg free
  1969  00199C  0100               	movlb	0	; () banked
  1970  00199E  518F               	movf	pad@w& (0+255),w,b
  1971  0019A0  2570               	addwf	?_strlen& (0+255),w,b
  1972  0019A2  6F86               	movwf	?_pad& (0+255),b
  1973  0019A4  5190               	movf	(pad@w+1)& (0+255),w,b
  1974  0019A6  2171               	addwfc	(?_strlen+1)& (0+255),w,b
  1975  0019A8  6F87               	movwf	(?_pad+1)& (0+255),b
  1976  0019AA                     
  1977                           ; BSR set to: 0
  1978  0019AA  0012               	return		;funcret
  1979  0019AC                     __end_of_pad:
  1980                           	opt callstack 0
  1981                           
  1982 ;; *************** function _strlen *****************
  1983 ;; Defined at:
  1984 ;;		line 5 in file "F:\Program Files\mplab\pic\sources\c99\common\strlen.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  1987 ;;		 -> dbuf(32), 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  a               2   18[BANK0 ] PTR const unsigned char 
  1990 ;;		 -> dbuf(32), 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2   16[BANK0 ] unsigned int 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         0       2       0       0       0       0       0       0       0
  2001 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        4 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:   12
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_pad
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text6
  2015  002050                     __ptext6:
  2016                           	opt callstack 0
  2017  002050                     _strlen:
  2018                           	opt callstack 13
  2019  002050  C070  F072         	movff	strlen@s,strlen@a
  2020  002054  C071  F073         	movff	strlen@s+1,strlen@a+1
  2021  002058  EF31  F010         	goto	l1678
  2022  00205C                     l1676:
  2023  00205C  0100               	movlb	0	; () banked
  2024  00205E  4B70               	infsnz	strlen@s& (0+255),f,b
  2025  002060  2B71               	incf	(strlen@s+1)& (0+255),f,b
  2026  002062                     l1678:
  2027  002062  C070  FFD9         	movff	strlen@s,fsr2l
  2028  002066  C071  FFDA         	movff	strlen@s+1,fsr2h
  2029  00206A  50DF               	movf	indf2,w,c
  2030  00206C  A4D8               	btfss	status,2,c
  2031  00206E  EF3B  F010         	goto	u1141
  2032  002072  EF3D  F010         	goto	u1140
  2033  002076                     u1141:
  2034  002076  EF2E  F010         	goto	l1676
  2035  00207A                     u1140:
  2036  00207A  0100               	movlb	0	; () banked
  2037  00207C  5172               	movf	strlen@a& (0+255),w,b
  2038  00207E  5D70               	subwf	strlen@s& (0+255),w,b
  2039  002080  6F70               	movwf	?_strlen& (0+255),b
  2040  002082  5173               	movf	(strlen@a+1)& (0+255),w,b
  2041  002084  5971               	subwfb	(strlen@s+1)& (0+255),w,b
  2042  002086  6F71               	movwf	(?_strlen+1)& (0+255),b
  2043  002088                     
  2044                           ; BSR set to: 0
  2045  002088  0012               	return		;funcret
  2046  00208A                     __end_of_strlen:
  2047                           	opt callstack 0
  2048                           
  2049 ;; *************** function _fputs *****************
  2050 ;; Defined at:
  2051 ;;		line 8 in file "F:\Program Files\mplab\pic\sources\c99\common\nf_fputs.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  s               2   31[BANK0 ] PTR const unsigned char 
  2054 ;;		 -> dbuf(32), 
  2055 ;;  fp              2   33[BANK0 ] PTR struct _IO_FILE
  2056 ;;		 -> NULL(0), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  i               2   36[BANK0 ] int 
  2059 ;;  c               1   35[BANK0 ] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2   31[BANK0 ] int 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2069 ;;      Params:         0       4       0       0       0       0       0       0       0
  2070 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2072 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2073 ;;Total ram usage:        7 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:   17
  2076 ;; This function calls:
  2077 ;;		_fputc
  2078 ;; This function is called by:
  2079 ;;		_pad
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text7
  2084  001EBA                     __ptext7:
  2085                           	opt callstack 0
  2086  001EBA                     _fputs:
  2087                           	opt callstack 8
  2088  001EBA  0E00               	movlw	0
  2089  001EBC  0100               	movlb	0	; () banked
  2090  001EBE  6F85               	movwf	(fputs@i+1)& (0+255),b
  2091  001EC0  0E00               	movlw	0
  2092  001EC2  6F84               	movwf	fputs@i& (0+255),b
  2093  001EC4  EF70  F00F         	goto	l1672
  2094  001EC8                     l1668:
  2095                           
  2096                           ; BSR set to: 0
  2097  001EC8  C083  F076         	movff	fputs@c,fputc@c
  2098  001ECC  6B77               	clrf	(fputc@c+1)& (0+255),b
  2099  001ECE  C081  F078         	movff	fputs@fp,fputc@fp
  2100  001ED2  C082  F079         	movff	fputs@fp+1,fputc@fp+1
  2101  001ED6  EC91  F00D         	call	_fputc	;wreg free
  2102  001EDA  0100               	movlb	0	; () banked
  2103  001EDC  4B84               	infsnz	fputs@i& (0+255),f,b
  2104  001EDE  2B85               	incf	(fputs@i+1)& (0+255),f,b
  2105  001EE0                     l1672:
  2106                           
  2107                           ; BSR set to: 0
  2108  001EE0  5184               	movf	fputs@i& (0+255),w,b
  2109  001EE2  257F               	addwf	fputs@s& (0+255),w,b
  2110  001EE4  6ED9               	movwf	fsr2l,c
  2111  001EE6  5185               	movf	(fputs@i+1)& (0+255),w,b
  2112  001EE8  2180               	addwfc	(fputs@s+1)& (0+255),w,b
  2113  001EEA  6EDA               	movwf	fsr2h,c
  2114  001EEC  50DF               	movf	indf2,w,c
  2115  001EEE  6F83               	movwf	fputs@c& (0+255),b
  2116  001EF0  5183               	movf	fputs@c& (0+255),w,b
  2117  001EF2  A4D8               	btfss	status,2,c
  2118  001EF4  EF7E  F00F         	goto	u1131
  2119  001EF8  EF80  F00F         	goto	u1130
  2120  001EFC                     u1131:
  2121  001EFC  EF64  F00F         	goto	l1668
  2122  001F00                     u1130:
  2123  001F00                     
  2124                           ; BSR set to: 0
  2125  001F00  0012               	return		;funcret
  2126  001F02                     __end_of_fputs:
  2127                           	opt callstack 0
  2128                           
  2129 ;; *************** function _fputc *****************
  2130 ;; Defined at:
  2131 ;;		line 8 in file "F:\Program Files\mplab\pic\sources\c99\common\nf_fputc.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  c               2   22[BANK0 ] int 
  2134 ;;  fp              2   24[BANK0 ] PTR struct _IO_FILE
  2135 ;;		 -> NULL(0), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   22[BANK0 ] int 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2147 ;;      Params:         0       4       0       0       0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2149 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2150 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2151 ;;Total ram usage:        9 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:   16
  2154 ;; This function calls:
  2155 ;;		_putch
  2156 ;; This function is called by:
  2157 ;;		_pad
  2158 ;;		_vfpfcnvrt
  2159 ;;		_fputs
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text8
  2164  001B22                     __ptext8:
  2165                           	opt callstack 0
  2166  001B22                     _fputc:
  2167                           	opt callstack 11
  2168  001B22  0100               	movlb	0	; () banked
  2169  001B24  5178               	movf	fputc@fp& (0+255),w,b
  2170  001B26  1179               	iorwf	(fputc@fp+1)& (0+255),w,b
  2171  001B28  B4D8               	btfsc	status,2,c
  2172  001B2A  EF99  F00D         	goto	u1051
  2173  001B2E  EF9B  F00D         	goto	u1050
  2174  001B32                     u1051:
  2175  001B32  EFA4  F00D         	goto	l1642
  2176  001B36                     u1050:
  2177  001B36                     
  2178                           ; BSR set to: 0
  2179  001B36  5178               	movf	fputc@fp& (0+255),w,b
  2180  001B38  1179               	iorwf	(fputc@fp+1)& (0+255),w,b
  2181  001B3A  A4D8               	btfss	status,2,c
  2182  001B3C  EFA2  F00D         	goto	u1061
  2183  001B40  EFA4  F00D         	goto	u1060
  2184  001B44                     u1061:
  2185  001B44  EFA9  F00D         	goto	l1644
  2186  001B48                     u1060:
  2187  001B48                     l1642:
  2188                           
  2189                           ; BSR set to: 0
  2190  001B48  5176               	movf	fputc@c& (0+255),w,b
  2191  001B4A  ECEE  F010         	call	_putch
  2192  001B4E  EFDC  F00D         	goto	l855
  2193  001B52                     l1644:
  2194                           
  2195                           ; BSR set to: 0
  2196  001B52  EE20 F004          	lfsr	2,4
  2197  001B56  5178               	movf	fputc@fp& (0+255),w,b
  2198  001B58  26D9               	addwf	fsr2l,f,c
  2199  001B5A  5179               	movf	(fputc@fp+1)& (0+255),w,b
  2200  001B5C  22DA               	addwfc	fsr2h,f,c
  2201  001B5E  50DE               	movf	postinc2,w,c
  2202  001B60  10DE               	iorwf	postinc2,w,c
  2203  001B62  B4D8               	btfsc	status,2,c
  2204  001B64  EFB6  F00D         	goto	u1071
  2205  001B68  EFB8  F00D         	goto	u1070
  2206  001B6C                     u1071:
  2207  001B6C  EFD3  F00D         	goto	l1648
  2208  001B70                     u1070:
  2209  001B70                     
  2210                           ; BSR set to: 0
  2211  001B70  EE20 F004          	lfsr	2,4
  2212  001B74  5178               	movf	fputc@fp& (0+255),w,b
  2213  001B76  26D9               	addwf	fsr2l,f,c
  2214  001B78  5179               	movf	(fputc@fp+1)& (0+255),w,b
  2215  001B7A  22DA               	addwfc	fsr2h,f,c
  2216  001B7C  EE10 F002          	lfsr	1,2
  2217  001B80  5178               	movf	fputc@fp& (0+255),w,b
  2218  001B82  26E1               	addwf	fsr1l,f,c
  2219  001B84  5179               	movf	(fputc@fp+1)& (0+255),w,b
  2220  001B86  22E2               	addwfc	fsr1h,f,c
  2221  001B88  50DE               	movf	postinc2,w,c
  2222  001B8A  5CE6               	subwf	postinc1,w,c
  2223  001B8C  50E6               	movf	postinc1,w,c
  2224  001B8E  0A80               	xorlw	128
  2225  001B90  6F7E               	movwf	(??_fputc+4)& (0+255),b
  2226  001B92  50DE               	movf	postinc2,w,c
  2227  001B94  0A80               	xorlw	128
  2228  001B96  597E               	subwfb	(??_fputc+4)& (0+255),w,b
  2229  001B98  B0D8               	btfsc	status,0,c
  2230  001B9A  EFD1  F00D         	goto	u1081
  2231  001B9E  EFD3  F00D         	goto	u1080
  2232  001BA2                     u1081:
  2233  001BA2  EFDC  F00D         	goto	l855
  2234  001BA6                     u1080:
  2235  001BA6                     l1648:
  2236                           
  2237                           ; BSR set to: 0
  2238  001BA6  EE20 F002          	lfsr	2,2
  2239  001BAA  5178               	movf	fputc@fp& (0+255),w,b
  2240  001BAC  26D9               	addwf	fsr2l,f,c
  2241  001BAE  5179               	movf	(fputc@fp+1)& (0+255),w,b
  2242  001BB0  22DA               	addwfc	fsr2h,f,c
  2243  001BB2  2ADE               	incf	postinc2,f,c
  2244  001BB4  0E00               	movlw	0
  2245  001BB6  22DD               	addwfc	postdec2,f,c
  2246  001BB8                     l855:
  2247  001BB8  0012               	return		;funcret
  2248  001BBA                     __end_of_fputc:
  2249                           	opt callstack 0
  2250                           
  2251 ;; *************** function _putch *****************
  2252 ;; Defined at:
  2253 ;;		line 79 in file "newmain.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  data            1    wreg     unsigned char 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  data            1   21[BANK0 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0
  2268 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2270 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2271 ;;Total ram usage:        1 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:   15
  2274 ;; This function calls:
  2275 ;;		_escreve_lcd
  2276 ;; This function is called by:
  2277 ;;		_fputc
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text9
  2282  0021DC                     __ptext9:
  2283                           	opt callstack 0
  2284  0021DC                     _putch:
  2285                           	opt callstack 11
  2286                           
  2287                           ;incstack = 0
  2288                           ;putch@data stored from wreg
  2289  0021DC  0100               	movlb	0	; () banked
  2290  0021DE  6F75               	movwf	putch@data& (0+255),b
  2291  0021E0                     
  2292                           ;newmain.c: 79: void putch(char data);newmain.c: 80: {;newmain.c: 81:   escreve_lcd(data
      +                          );
  2293  0021E0  0100               	movlb	0	; () banked
  2294  0021E2  5175               	movf	putch@data& (0+255),w,b
  2295  0021E4  ECE6  F010         	call	_escreve_lcd
  2296  0021E8  0012               	return		;funcret
  2297  0021EA                     __end_of_putch:
  2298                           	opt callstack 0
  2299                           
  2300 ;; *************** function _escreve_lcd *****************
  2301 ;; Defined at:
  2302 ;;		line 33 in file "lcd.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  c               1    wreg     unsigned char 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  c               1   20[BANK0 ] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        1 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:   14
  2323 ;; This function calls:
  2324 ;;		_envia_byte_lcd
  2325 ;; This function is called by:
  2326 ;;		_putch
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text10
  2331  0021CC                     __ptext10:
  2332                           	opt callstack 0
  2333  0021CC                     _escreve_lcd:
  2334                           	opt callstack 11
  2335                           
  2336                           ;incstack = 0
  2337                           ;escreve_lcd@c stored from wreg
  2338  0021CC  0100               	movlb	0	; () banked
  2339  0021CE  6F74               	movwf	escreve_lcd@c& (0+255),b
  2340  0021D0  C074  F072         	movff	escreve_lcd@c,envia_byte_lcd@dado
  2341  0021D4  0E01               	movlw	1
  2342  0021D6  EC78  F010         	call	_envia_byte_lcd
  2343  0021DA  0012               	return		;funcret
  2344  0021DC                     __end_of_escreve_lcd:
  2345                           	opt callstack 0
  2346                           
  2347 ;; *************** function _abs *****************
  2348 ;; Defined at:
  2349 ;;		line 1 in file "F:\Program Files\mplab\pic\sources\c99\common\abs.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  a               2   34[BANK0 ] int 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  2   34[BANK0 ] int 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2363 ;;      Params:         0       2       0       0       0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2365 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2366 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2367 ;;Total ram usage:        4 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:   12
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_dtoa
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text11
  2378  001F8C                     __ptext11:
  2379                           	opt callstack 0
  2380  001F8C                     _abs:
  2381                           	opt callstack 14
  2382  001F8C  0100               	movlb	0	; () banked
  2383  001F8E  BF83               	btfsc	(abs@a+1)& (0+255),7,b
  2384  001F90  EFD4  F00F         	goto	u1210
  2385  001F94  5183               	movf	(abs@a+1)& (0+255),w,b
  2386  001F96  E106               	bnz	u1211
  2387  001F98  0582               	decf	abs@a& (0+255),w,b
  2388  001F9A  B0D8               	btfsc	status,0,c
  2389  001F9C  EFD2  F00F         	goto	u1211
  2390  001FA0  EFD4  F00F         	goto	u1210
  2391  001FA4                     u1211:
  2392  001FA4  EFE2  F00F         	goto	l840
  2393  001FA8                     u1210:
  2394  001FA8                     
  2395                           ; BSR set to: 0
  2396  001FA8  C082  F084         	movff	abs@a,??_abs
  2397  001FAC  C083  F085         	movff	abs@a+1,??_abs+1
  2398  001FB0  1F84               	comf	??_abs& (0+255),f,b
  2399  001FB2  1F85               	comf	(??_abs+1)& (0+255),f,b
  2400  001FB4  4B84               	infsnz	??_abs& (0+255),f,b
  2401  001FB6  2B85               	incf	(??_abs+1)& (0+255),f,b
  2402  001FB8  C084  F082         	movff	??_abs,?_abs
  2403  001FBC  C085  F083         	movff	??_abs+1,?_abs+1
  2404  001FC0  EFE6  F00F         	goto	l843
  2405  001FC4                     l840:
  2406                           
  2407                           ; BSR set to: 0
  2408  001FC4  C082  F082         	movff	abs@a,?_abs
  2409  001FC8  C083  F083         	movff	abs@a+1,?_abs+1
  2410  001FCC                     l843:
  2411                           
  2412                           ; BSR set to: 0
  2413  001FCC  0012               	return		;funcret
  2414  001FCE                     __end_of_abs:
  2415                           	opt callstack 0
  2416                           
  2417 ;; *************** function ___aomod *****************
  2418 ;; Defined at:
  2419 ;;		line 9 in file "F:\Program Files\mplab\pic\sources\c99\common\aomod.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  dividend        8   16[BANK0 ] long long 
  2422 ;;  divisor         8   24[BANK0 ] long long 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  sign            1   33[BANK0 ] unsigned char 
  2425 ;;  counter         1   32[BANK0 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  8   16[BANK0 ] long long 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2435 ;;      Params:         0      16       0       0       0       0       0       0       0
  2436 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2438 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2439 ;;Total ram usage:       18 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:   12
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_dtoa
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text12
  2450  001618                     __ptext12:
  2451                           	opt callstack 0
  2452  001618                     ___aomod:
  2453                           	opt callstack 14
  2454  001618  0E00               	movlw	0
  2455  00161A  0100               	movlb	0	; () banked
  2456  00161C  6F81               	movwf	___aomod@sign& (0+255),b
  2457  00161E                     
  2458                           ; BSR set to: 0
  2459  00161E  BF77               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2460  001620  EF16  F00B         	goto	u1290
  2461  001624  EF14  F00B         	goto	u1291
  2462  001628                     u1291:
  2463  001628  EF28  F00B         	goto	l1780
  2464  00162C                     u1290:
  2465  00162C                     
  2466                           ; BSR set to: 0
  2467  00162C  1F77               	comf	(___aomod@dividend+7)& (0+255),f,b
  2468  00162E  1F76               	comf	(___aomod@dividend+6)& (0+255),f,b
  2469  001630  1F75               	comf	(___aomod@dividend+5)& (0+255),f,b
  2470  001632  1F74               	comf	(___aomod@dividend+4)& (0+255),f,b
  2471  001634  1F73               	comf	(___aomod@dividend+3)& (0+255),f,b
  2472  001636  1F72               	comf	(___aomod@dividend+2)& (0+255),f,b
  2473  001638  1F71               	comf	(___aomod@dividend+1)& (0+255),f,b
  2474  00163A  6D70               	negf	___aomod@dividend& (0+255),b
  2475  00163C  0E00               	movlw	0
  2476  00163E  2371               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2477  001640  2372               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2478  001642  2373               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2479  001644  2374               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2480  001646  2375               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2481  001648  2376               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2482  00164A  2377               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2483  00164C                     
  2484                           ; BSR set to: 0
  2485  00164C  0E01               	movlw	1
  2486  00164E  6F81               	movwf	___aomod@sign& (0+255),b
  2487  001650                     l1780:
  2488                           
  2489                           ; BSR set to: 0
  2490  001650  BF7F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2491  001652  EF2F  F00B         	goto	u1300
  2492  001656  EF2D  F00B         	goto	u1301
  2493  00165A                     u1301:
  2494  00165A  EF3F  F00B         	goto	l1784
  2495  00165E                     u1300:
  2496  00165E                     
  2497                           ; BSR set to: 0
  2498  00165E  1F7F               	comf	(___aomod@divisor+7)& (0+255),f,b
  2499  001660  1F7E               	comf	(___aomod@divisor+6)& (0+255),f,b
  2500  001662  1F7D               	comf	(___aomod@divisor+5)& (0+255),f,b
  2501  001664  1F7C               	comf	(___aomod@divisor+4)& (0+255),f,b
  2502  001666  1F7B               	comf	(___aomod@divisor+3)& (0+255),f,b
  2503  001668  1F7A               	comf	(___aomod@divisor+2)& (0+255),f,b
  2504  00166A  1F79               	comf	(___aomod@divisor+1)& (0+255),f,b
  2505  00166C  6D78               	negf	___aomod@divisor& (0+255),b
  2506  00166E  0E00               	movlw	0
  2507  001670  2379               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2508  001672  237A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2509  001674  237B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2510  001676  237C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2511  001678  237D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2512  00167A  237E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2513  00167C  237F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2514  00167E                     l1784:
  2515                           
  2516                           ; BSR set to: 0
  2517  00167E  5178               	movf	___aomod@divisor& (0+255),w,b
  2518  001680  1179               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2519  001682  117A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2520  001684  117B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2521  001686  117C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2522  001688  117D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2523  00168A  117E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2524  00168C  117F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2525  00168E  B4D8               	btfsc	status,2,c
  2526  001690  EF4C  F00B         	goto	u1311
  2527  001694  EF4E  F00B         	goto	u1310
  2528  001698                     u1311:
  2529  001698  EF96  F00B         	goto	l1800
  2530  00169C                     u1310:
  2531  00169C                     
  2532                           ; BSR set to: 0
  2533  00169C  0E01               	movlw	1
  2534  00169E  6F80               	movwf	___aomod@counter& (0+255),b
  2535  0016A0  EF5C  F00B         	goto	l1790
  2536  0016A4                     l1788:
  2537                           
  2538                           ; BSR set to: 0
  2539  0016A4  90D8               	bcf	status,0,c
  2540  0016A6  3778               	rlcf	___aomod@divisor& (0+255),f,b
  2541  0016A8  3779               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2542  0016AA  377A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2543  0016AC  377B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2544  0016AE  377C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2545  0016B0  377D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2546  0016B2  377E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2547  0016B4  377F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2548  0016B6  2B80               	incf	___aomod@counter& (0+255),f,b
  2549  0016B8                     l1790:
  2550                           
  2551                           ; BSR set to: 0
  2552  0016B8  AF7F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2553  0016BA  EF61  F00B         	goto	u1321
  2554  0016BE  EF63  F00B         	goto	u1320
  2555  0016C2                     u1321:
  2556  0016C2  EF52  F00B         	goto	l1788
  2557  0016C6                     u1320:
  2558  0016C6                     l1792:
  2559                           
  2560                           ; BSR set to: 0
  2561  0016C6  5178               	movf	___aomod@divisor& (0+255),w,b
  2562  0016C8  5D70               	subwf	___aomod@dividend& (0+255),w,b
  2563  0016CA  5179               	movf	(___aomod@divisor+1)& (0+255),w,b
  2564  0016CC  5971               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2565  0016CE  517A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2566  0016D0  5972               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2567  0016D2  517B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2568  0016D4  5973               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2569  0016D6  517C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2570  0016D8  5974               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2571  0016DA  517D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2572  0016DC  5975               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2573  0016DE  517E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2574  0016E0  5976               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2575  0016E2  517F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2576  0016E4  5977               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2577  0016E6  A0D8               	btfss	status,0,c
  2578  0016E8  EF78  F00B         	goto	u1331
  2579  0016EC  EF7A  F00B         	goto	u1330
  2580  0016F0                     u1331:
  2581  0016F0  EF8A  F00B         	goto	l1796
  2582  0016F4                     u1330:
  2583  0016F4                     
  2584                           ; BSR set to: 0
  2585  0016F4  5178               	movf	___aomod@divisor& (0+255),w,b
  2586  0016F6  5F70               	subwf	___aomod@dividend& (0+255),f,b
  2587  0016F8  5179               	movf	(___aomod@divisor+1)& (0+255),w,b
  2588  0016FA  5B71               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2589  0016FC  517A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2590  0016FE  5B72               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2591  001700  517B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2592  001702  5B73               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2593  001704  517C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2594  001706  5B74               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2595  001708  517D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2596  00170A  5B75               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2597  00170C  517E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2598  00170E  5B76               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2599  001710  517F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2600  001712  5B77               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2601  001714                     l1796:
  2602                           
  2603                           ; BSR set to: 0
  2604  001714  90D8               	bcf	status,0,c
  2605  001716  337F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2606  001718  337E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2607  00171A  337D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2608  00171C  337C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2609  00171E  337B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2610  001720  337A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2611  001722  3379               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2612  001724  3378               	rrcf	___aomod@divisor& (0+255),f,b
  2613  001726                     
  2614                           ; BSR set to: 0
  2615  001726  2F80               	decfsz	___aomod@counter& (0+255),f,b
  2616  001728  EF63  F00B         	goto	l1792
  2617  00172C                     l1800:
  2618                           
  2619                           ; BSR set to: 0
  2620  00172C  5181               	movf	___aomod@sign& (0+255),w,b
  2621  00172E  B4D8               	btfsc	status,2,c
  2622  001730  EF9C  F00B         	goto	u1341
  2623  001734  EF9E  F00B         	goto	u1340
  2624  001738                     u1341:
  2625  001738  EFAE  F00B         	goto	l1804
  2626  00173C                     u1340:
  2627  00173C                     
  2628                           ; BSR set to: 0
  2629  00173C  1F77               	comf	(___aomod@dividend+7)& (0+255),f,b
  2630  00173E  1F76               	comf	(___aomod@dividend+6)& (0+255),f,b
  2631  001740  1F75               	comf	(___aomod@dividend+5)& (0+255),f,b
  2632  001742  1F74               	comf	(___aomod@dividend+4)& (0+255),f,b
  2633  001744  1F73               	comf	(___aomod@dividend+3)& (0+255),f,b
  2634  001746  1F72               	comf	(___aomod@dividend+2)& (0+255),f,b
  2635  001748  1F71               	comf	(___aomod@dividend+1)& (0+255),f,b
  2636  00174A  6D70               	negf	___aomod@dividend& (0+255),b
  2637  00174C  0E00               	movlw	0
  2638  00174E  2371               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2639  001750  2372               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2640  001752  2373               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2641  001754  2374               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2642  001756  2375               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2643  001758  2376               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2644  00175A  2377               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2645  00175C                     l1804:
  2646                           
  2647                           ; BSR set to: 0
  2648  00175C  C070  F070         	movff	___aomod@dividend,?___aomod
  2649  001760  C071  F071         	movff	___aomod@dividend+1,?___aomod+1
  2650  001764  C072  F072         	movff	___aomod@dividend+2,?___aomod+2
  2651  001768  C073  F073         	movff	___aomod@dividend+3,?___aomod+3
  2652  00176C  C074  F074         	movff	___aomod@dividend+4,?___aomod+4
  2653  001770  C075  F075         	movff	___aomod@dividend+5,?___aomod+5
  2654  001774  C076  F076         	movff	___aomod@dividend+6,?___aomod+6
  2655  001778  C077  F077         	movff	___aomod@dividend+7,?___aomod+7
  2656  00177C                     
  2657                           ; BSR set to: 0
  2658  00177C  0012               	return		;funcret
  2659  00177E                     __end_of___aomod:
  2660                           	opt callstack 0
  2661                           
  2662 ;; *************** function ___aodiv *****************
  2663 ;; Defined at:
  2664 ;;		line 9 in file "F:\Program Files\mplab\pic\sources\c99\common\aodiv.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  dividend        8   16[BANK0 ] long long 
  2667 ;;  divisor         8   24[BANK0 ] long long 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  quotient        8   34[BANK0 ] long long 
  2670 ;;  sign            1   33[BANK0 ] unsigned char 
  2671 ;;  counter         1   32[BANK0 ] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  8   16[BANK0 ] long long 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2681 ;;      Params:         0      16       0       0       0       0       0       0       0
  2682 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2684 ;;      Totals:         0      26       0       0       0       0       0       0       0
  2685 ;;Total ram usage:       26 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:   12
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_dtoa
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text13
  2696  001306                     __ptext13:
  2697                           	opt callstack 0
  2698  001306                     ___aodiv:
  2699                           	opt callstack 14
  2700  001306  0E00               	movlw	0
  2701  001308  0100               	movlb	0	; () banked
  2702  00130A  6F81               	movwf	___aodiv@sign& (0+255),b
  2703  00130C                     
  2704                           ; BSR set to: 0
  2705  00130C  BF7F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  2706  00130E  EF8D  F009         	goto	u1220
  2707  001312  EF8B  F009         	goto	u1221
  2708  001316                     u1221:
  2709  001316  EF9F  F009         	goto	l1736
  2710  00131A                     u1220:
  2711  00131A                     
  2712                           ; BSR set to: 0
  2713  00131A  1F7F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  2714  00131C  1F7E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  2715  00131E  1F7D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  2716  001320  1F7C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  2717  001322  1F7B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  2718  001324  1F7A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  2719  001326  1F79               	comf	(___aodiv@divisor+1)& (0+255),f,b
  2720  001328  6D78               	negf	___aodiv@divisor& (0+255),b
  2721  00132A  0E00               	movlw	0
  2722  00132C  2379               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  2723  00132E  237A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  2724  001330  237B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  2725  001332  237C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  2726  001334  237D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  2727  001336  237E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  2728  001338  237F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  2729  00133A                     
  2730                           ; BSR set to: 0
  2731  00133A  0E01               	movlw	1
  2732  00133C  6F81               	movwf	___aodiv@sign& (0+255),b
  2733  00133E                     l1736:
  2734                           
  2735                           ; BSR set to: 0
  2736  00133E  BF77               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  2737  001340  EFA6  F009         	goto	u1230
  2738  001344  EFA4  F009         	goto	u1231
  2739  001348                     u1231:
  2740  001348  EFB8  F009         	goto	l1742
  2741  00134C                     u1230:
  2742  00134C                     
  2743                           ; BSR set to: 0
  2744  00134C  1F77               	comf	(___aodiv@dividend+7)& (0+255),f,b
  2745  00134E  1F76               	comf	(___aodiv@dividend+6)& (0+255),f,b
  2746  001350  1F75               	comf	(___aodiv@dividend+5)& (0+255),f,b
  2747  001352  1F74               	comf	(___aodiv@dividend+4)& (0+255),f,b
  2748  001354  1F73               	comf	(___aodiv@dividend+3)& (0+255),f,b
  2749  001356  1F72               	comf	(___aodiv@dividend+2)& (0+255),f,b
  2750  001358  1F71               	comf	(___aodiv@dividend+1)& (0+255),f,b
  2751  00135A  6D70               	negf	___aodiv@dividend& (0+255),b
  2752  00135C  0E00               	movlw	0
  2753  00135E  2371               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  2754  001360  2372               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  2755  001362  2373               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  2756  001364  2374               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  2757  001366  2375               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  2758  001368  2376               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  2759  00136A  2377               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  2760  00136C                     
  2761                           ; BSR set to: 0
  2762  00136C  0E01               	movlw	1
  2763  00136E  1B81               	xorwf	___aodiv@sign& (0+255),f,b
  2764  001370                     l1742:
  2765                           
  2766                           ; BSR set to: 0
  2767  001370  EE20  F082         	lfsr	2,___aodiv@quotient
  2768  001374  0E07               	movlw	7
  2769  001376                     u1241:
  2770  001376  6ADE               	clrf	postinc2,c
  2771  001378  06E8               	decf	wreg,f,c
  2772  00137A  E2FD               	bc	u1241
  2773  00137C                     
  2774                           ; BSR set to: 0
  2775  00137C  5178               	movf	___aodiv@divisor& (0+255),w,b
  2776  00137E  1179               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  2777  001380  117A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  2778  001382  117B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  2779  001384  117C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  2780  001386  117D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  2781  001388  117E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  2782  00138A  117F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  2783  00138C  B4D8               	btfsc	status,2,c
  2784  00138E  EFCB  F009         	goto	u1251
  2785  001392  EFCD  F009         	goto	u1250
  2786  001396                     u1251:
  2787  001396  EF1F  F00A         	goto	l1764
  2788  00139A                     u1250:
  2789  00139A                     
  2790                           ; BSR set to: 0
  2791  00139A  0E01               	movlw	1
  2792  00139C  6F80               	movwf	___aodiv@counter& (0+255),b
  2793  00139E  EFDB  F009         	goto	l1750
  2794  0013A2                     l1748:
  2795                           
  2796                           ; BSR set to: 0
  2797  0013A2  90D8               	bcf	status,0,c
  2798  0013A4  3778               	rlcf	___aodiv@divisor& (0+255),f,b
  2799  0013A6  3779               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  2800  0013A8  377A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  2801  0013AA  377B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  2802  0013AC  377C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  2803  0013AE  377D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  2804  0013B0  377E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  2805  0013B2  377F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  2806  0013B4  2B80               	incf	___aodiv@counter& (0+255),f,b
  2807  0013B6                     l1750:
  2808                           
  2809                           ; BSR set to: 0
  2810  0013B6  AF7F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2811  0013B8  EFE0  F009         	goto	u1261
  2812  0013BC  EFE2  F009         	goto	u1260
  2813  0013C0                     u1261:
  2814  0013C0  EFD1  F009         	goto	l1748
  2815  0013C4                     u1260:
  2816  0013C4                     l1752:
  2817                           
  2818                           ; BSR set to: 0
  2819  0013C4  90D8               	bcf	status,0,c
  2820  0013C6  3782               	rlcf	___aodiv@quotient& (0+255),f,b
  2821  0013C8  3783               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  2822  0013CA  3784               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  2823  0013CC  3785               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  2824  0013CE  3786               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  2825  0013D0  3787               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  2826  0013D2  3788               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  2827  0013D4  3789               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  2828  0013D6                     
  2829                           ; BSR set to: 0
  2830  0013D6  5178               	movf	___aodiv@divisor& (0+255),w,b
  2831  0013D8  5D70               	subwf	___aodiv@dividend& (0+255),w,b
  2832  0013DA  5179               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2833  0013DC  5971               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  2834  0013DE  517A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2835  0013E0  5972               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  2836  0013E2  517B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2837  0013E4  5973               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  2838  0013E6  517C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2839  0013E8  5974               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  2840  0013EA  517D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2841  0013EC  5975               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  2842  0013EE  517E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2843  0013F0  5976               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  2844  0013F2  517F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2845  0013F4  5977               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  2846  0013F6  A0D8               	btfss	status,0,c
  2847  0013F8  EF00  F00A         	goto	u1271
  2848  0013FC  EF02  F00A         	goto	u1270
  2849  001400                     u1271:
  2850  001400  EF13  F00A         	goto	l1760
  2851  001404                     u1270:
  2852  001404                     
  2853                           ; BSR set to: 0
  2854  001404  5178               	movf	___aodiv@divisor& (0+255),w,b
  2855  001406  5F70               	subwf	___aodiv@dividend& (0+255),f,b
  2856  001408  5179               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2857  00140A  5B71               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  2858  00140C  517A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2859  00140E  5B72               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  2860  001410  517B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2861  001412  5B73               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  2862  001414  517C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2863  001416  5B74               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  2864  001418  517D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2865  00141A  5B75               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  2866  00141C  517E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2867  00141E  5B76               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  2868  001420  517F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2869  001422  5B77               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  2870  001424                     
  2871                           ; BSR set to: 0
  2872  001424  8182               	bsf	___aodiv@quotient& (0+255),0,b
  2873  001426                     l1760:
  2874                           
  2875                           ; BSR set to: 0
  2876  001426  90D8               	bcf	status,0,c
  2877  001428  337F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  2878  00142A  337E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  2879  00142C  337D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  2880  00142E  337C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  2881  001430  337B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  2882  001432  337A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  2883  001434  3379               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  2884  001436  3378               	rrcf	___aodiv@divisor& (0+255),f,b
  2885  001438                     
  2886                           ; BSR set to: 0
  2887  001438  2F80               	decfsz	___aodiv@counter& (0+255),f,b
  2888  00143A  EFE2  F009         	goto	l1752
  2889  00143E                     l1764:
  2890                           
  2891                           ; BSR set to: 0
  2892  00143E  5181               	movf	___aodiv@sign& (0+255),w,b
  2893  001440  B4D8               	btfsc	status,2,c
  2894  001442  EF25  F00A         	goto	u1281
  2895  001446  EF27  F00A         	goto	u1280
  2896  00144A                     u1281:
  2897  00144A  EF37  F00A         	goto	l1768
  2898  00144E                     u1280:
  2899  00144E                     
  2900                           ; BSR set to: 0
  2901  00144E  1F89               	comf	(___aodiv@quotient+7)& (0+255),f,b
  2902  001450  1F88               	comf	(___aodiv@quotient+6)& (0+255),f,b
  2903  001452  1F87               	comf	(___aodiv@quotient+5)& (0+255),f,b
  2904  001454  1F86               	comf	(___aodiv@quotient+4)& (0+255),f,b
  2905  001456  1F85               	comf	(___aodiv@quotient+3)& (0+255),f,b
  2906  001458  1F84               	comf	(___aodiv@quotient+2)& (0+255),f,b
  2907  00145A  1F83               	comf	(___aodiv@quotient+1)& (0+255),f,b
  2908  00145C  6D82               	negf	___aodiv@quotient& (0+255),b
  2909  00145E  0E00               	movlw	0
  2910  001460  2383               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  2911  001462  2384               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  2912  001464  2385               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  2913  001466  2386               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  2914  001468  2387               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  2915  00146A  2388               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  2916  00146C  2389               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  2917  00146E                     l1768:
  2918                           
  2919                           ; BSR set to: 0
  2920  00146E  C082  F070         	movff	___aodiv@quotient,?___aodiv
  2921  001472  C083  F071         	movff	___aodiv@quotient+1,?___aodiv+1
  2922  001476  C084  F072         	movff	___aodiv@quotient+2,?___aodiv+2
  2923  00147A  C085  F073         	movff	___aodiv@quotient+3,?___aodiv+3
  2924  00147E  C086  F074         	movff	___aodiv@quotient+4,?___aodiv+4
  2925  001482  C087  F075         	movff	___aodiv@quotient+5,?___aodiv+5
  2926  001486  C088  F076         	movff	___aodiv@quotient+6,?___aodiv+6
  2927  00148A  C089  F077         	movff	___aodiv@quotient+7,?___aodiv+7
  2928  00148E                     
  2929                           ; BSR set to: 0
  2930  00148E  0012               	return		;funcret
  2931  001490                     __end_of___aodiv:
  2932                           	opt callstack 0
  2933                           
  2934 ;; *************** function _limpa_lcd *****************
  2935 ;; Defined at:
  2936 ;;		line 36 in file "lcd.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2952 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2953 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2954 ;;Total ram usage:        1 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:   14
  2957 ;; This function calls:
  2958 ;;		_envia_byte_lcd
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text14
  2965  002192                     __ptext14:
  2966                           	opt callstack 0
  2967  002192                     _limpa_lcd:
  2968                           	opt callstack 16
  2969  002192                     
  2970                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  2971  002192  0E01               	movlw	1
  2972  002194  0100               	movlb	0	; () banked
  2973  002196  6F72               	movwf	envia_byte_lcd@dado& (0+255),b
  2974  002198  0E00               	movlw	0
  2975  00219A  EC78  F010         	call	_envia_byte_lcd
  2976  00219E                     
  2977                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  2978  00219E  0E03               	movlw	3
  2979  0021A0  0100               	movlb	0	; () banked
  2980  0021A2  6F74               	movwf	??_limpa_lcd& (0+255),b
  2981  0021A4  0E97               	movlw	151
  2982  0021A6                     u2067:
  2983  0021A6  2EE8               	decfsz	wreg,f,c
  2984  0021A8  D7FE               	bra	u2067
  2985  0021AA  2F74               	decfsz	??_limpa_lcd& (0+255),f,b
  2986  0021AC  D7FC               	bra	u2067
  2987  0021AE  D000               	nop2	
  2988  0021B0  0012               	return		;funcret
  2989  0021B2                     __end_of_limpa_lcd:
  2990                           	opt callstack 0
  2991                           
  2992 ;; *************** function _inicializa_lcd *****************
  2993 ;; Defined at:
  2994 ;;		line 43 in file "lcd.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3010 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3011 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3012 ;;Total ram usage:        1 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:   14
  3015 ;; This function calls:
  3016 ;;		_envia_byte_lcd
  3017 ;;		_envia_nibble_lcd
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text15
  3024  001C50                     __ptext15:
  3025                           	opt callstack 0
  3026  001C50                     _inicializa_lcd:
  3027                           	opt callstack 16
  3028  001C50                     
  3029                           ;lcd.c: 45:  PORTDbits.RD1 = 0;
  3030  001C50  9283               	bcf	131,1,c	;volatile
  3031                           
  3032                           ;lcd.c: 46:  PORTDbits.RD4 = 0;
  3033  001C52  9883               	bcf	131,4,c	;volatile
  3034                           
  3035                           ;lcd.c: 47:  PORTDbits.RD5 = 0;
  3036  001C54  9A83               	bcf	131,5,c	;volatile
  3037                           
  3038                           ;lcd.c: 48:  PORTDbits.RD6 = 0;
  3039  001C56  9C83               	bcf	131,6,c	;volatile
  3040                           
  3041                           ;lcd.c: 49:  PORTDbits.RD7 = 0;
  3042  001C58  9E83               	bcf	131,7,c	;volatile
  3043  001C5A                     
  3044                           ;lcd.c: 51:  _delay((unsigned long)((50)*(4000000/4000.0)));
  3045  001C5A  0E41               	movlw	65
  3046  001C5C  0100               	movlb	0	; () banked
  3047  001C5E  6F74               	movwf	??_inicializa_lcd& (0+255),b
  3048  001C60  0EEE               	movlw	238
  3049  001C62                     u2077:
  3050  001C62  2EE8               	decfsz	wreg,f,c
  3051  001C64  D7FE               	bra	u2077
  3052  001C66  2F74               	decfsz	??_inicializa_lcd& (0+255),f,b
  3053  001C68  D7FC               	bra	u2077
  3054  001C6A  F000               	nop	
  3055  001C6C                     
  3056                           ;lcd.c: 52:  envia_nibble_lcd(0x03);
  3057  001C6C  0E03               	movlw	3
  3058  001C6E  EC71  F00E         	call	_envia_nibble_lcd
  3059  001C72                     
  3060                           ;lcd.c: 53:  _delay((unsigned long)((4)*(4000000/4000.0)));
  3061  001C72  0E06               	movlw	6
  3062  001C74  0100               	movlb	0	; () banked
  3063  001C76  6F74               	movwf	??_inicializa_lcd& (0+255),b
  3064  001C78  0E30               	movlw	48
  3065  001C7A                     u2087:
  3066  001C7A  2EE8               	decfsz	wreg,f,c
  3067  001C7C  D7FE               	bra	u2087
  3068  001C7E  2F74               	decfsz	??_inicializa_lcd& (0+255),f,b
  3069  001C80  D7FC               	bra	u2087
  3070  001C82  F000               	nop	
  3071                           
  3072                           ;lcd.c: 54:  envia_nibble_lcd(0x03);
  3073  001C84  0E03               	movlw	3
  3074  001C86  EC71  F00E         	call	_envia_nibble_lcd
  3075  001C8A                     
  3076                           ;lcd.c: 55:  _delay((unsigned long)((100)*(4000000/4000000.0)));
  3077  001C8A  0E21               	movlw	33
  3078  001C8C                     u2097:
  3079  001C8C  2EE8               	decfsz	wreg,f,c
  3080  001C8E  D7FE               	bra	u2097
  3081  001C90  F000               	nop	
  3082  001C92                     
  3083                           ;lcd.c: 56:  envia_nibble_lcd(0x03);
  3084  001C92  0E03               	movlw	3
  3085  001C94  EC71  F00E         	call	_envia_nibble_lcd
  3086  001C98                     
  3087                           ;lcd.c: 58:  envia_nibble_lcd(0x02);
  3088  001C98  0E02               	movlw	2
  3089  001C9A  EC71  F00E         	call	_envia_nibble_lcd
  3090  001C9E                     
  3091                           ;lcd.c: 60:  envia_byte_lcd(0,0x01);
  3092  001C9E  0E01               	movlw	1
  3093  001CA0  0100               	movlb	0	; () banked
  3094  001CA2  6F72               	movwf	envia_byte_lcd@dado& (0+255),b
  3095  001CA4  0E00               	movlw	0
  3096  001CA6  EC78  F010         	call	_envia_byte_lcd
  3097                           
  3098                           ;lcd.c: 61:  _delay((unsigned long)((2)*(4000000/4000.0)));
  3099  001CAA  0E03               	movlw	3
  3100  001CAC  0100               	movlb	0	; () banked
  3101  001CAE  6F74               	movwf	??_inicializa_lcd& (0+255),b
  3102  001CB0  0E97               	movlw	151
  3103  001CB2                     u2107:
  3104  001CB2  2EE8               	decfsz	wreg,f,c
  3105  001CB4  D7FE               	bra	u2107
  3106  001CB6  2F74               	decfsz	??_inicializa_lcd& (0+255),f,b
  3107  001CB8  D7FC               	bra	u2107
  3108  001CBA  D000               	nop2	
  3109  001CBC                     
  3110                           ;lcd.c: 63:  envia_byte_lcd(0,0x28);
  3111  001CBC  0E28               	movlw	40
  3112  001CBE  0100               	movlb	0	; () banked
  3113  001CC0  6F72               	movwf	envia_byte_lcd@dado& (0+255),b
  3114  001CC2  0E00               	movlw	0
  3115  001CC4  EC78  F010         	call	_envia_byte_lcd
  3116  001CC8                     
  3117                           ;lcd.c: 65:  envia_byte_lcd(0,0x0c);
  3118  001CC8  0E0C               	movlw	12
  3119  001CCA  0100               	movlb	0	; () banked
  3120  001CCC  6F72               	movwf	envia_byte_lcd@dado& (0+255),b
  3121  001CCE  0E00               	movlw	0
  3122  001CD0  EC78  F010         	call	_envia_byte_lcd
  3123  001CD4                     
  3124                           ;lcd.c: 67:  envia_byte_lcd(0,0x06);
  3125  001CD4  0E06               	movlw	6
  3126  001CD6  0100               	movlb	0	; () banked
  3127  001CD8  6F72               	movwf	envia_byte_lcd@dado& (0+255),b
  3128  001CDA  0E00               	movlw	0
  3129  001CDC  EC78  F010         	call	_envia_byte_lcd
  3130  001CE0  0012               	return		;funcret
  3131  001CE2                     __end_of_inicializa_lcd:
  3132                           	opt callstack 0
  3133                           
  3134 ;; *************** function _caracter_inicio *****************
  3135 ;; Defined at:
  3136 ;;		line 73 in file "lcd.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  linha           1    wreg     unsigned char 
  3139 ;;  coluna          1   20[BANK0 ] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  linha           1   21[BANK0 ] unsigned char 
  3142 ;;  posicao         1   22[BANK0 ] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3152 ;;      Params:         0       1       0       0       0       0       0       0       0
  3153 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3155 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:   14
  3159 ;; This function calls:
  3160 ;;		_envia_byte_lcd
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text16
  3167  001F02                     __ptext16:
  3168                           	opt callstack 0
  3169  001F02                     _caracter_inicio:
  3170                           	opt callstack 16
  3171                           
  3172                           ;incstack = 0
  3173                           ;caracter_inicio@linha stored from wreg
  3174  001F02  0100               	movlb	0	; () banked
  3175  001F04  6F75               	movwf	caracter_inicio@linha& (0+255),b
  3176  001F06                     
  3177                           ;lcd.c: 73:  void caracter_inicio(char linha,char coluna);lcd.c: 74: {;lcd.c: 75:  char 
      +                          posicao=0;
  3178  001F06  0E00               	movlw	0
  3179  001F08  0100               	movlb	0	; () banked
  3180  001F0A  6F76               	movwf	caracter_inicio@posicao& (0+255),b
  3181  001F0C                     
  3182                           ; BSR set to: 0
  3183                           ;lcd.c: 76:  if(linha == 1)
  3184  001F0C  0575               	decf	caracter_inicio@linha& (0+255),w,b
  3185  001F0E  A4D8               	btfss	status,2,c
  3186  001F10  EF8C  F00F         	goto	u1931
  3187  001F14  EF8E  F00F         	goto	u1930
  3188  001F18                     u1931:
  3189  001F18  EF90  F00F         	goto	l2170
  3190  001F1C                     u1930:
  3191  001F1C                     
  3192                           ; BSR set to: 0
  3193                           ;lcd.c: 77: {;lcd.c: 78:  posicao=0x80;
  3194  001F1C  0E80               	movlw	128
  3195  001F1E  6F76               	movwf	caracter_inicio@posicao& (0+255),b
  3196  001F20                     l2170:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;lcd.c: 80:  if(linha == 2)
  3200  001F20  0E02               	movlw	2
  3201  001F22  1975               	xorwf	caracter_inicio@linha& (0+255),w,b
  3202  001F24  A4D8               	btfss	status,2,c
  3203  001F26  EF97  F00F         	goto	u1941
  3204  001F2A  EF99  F00F         	goto	u1940
  3205  001F2E                     u1941:
  3206  001F2E  EF9B  F00F         	goto	l2174
  3207  001F32                     u1940:
  3208  001F32                     
  3209                           ; BSR set to: 0
  3210                           ;lcd.c: 81: {;lcd.c: 82:  posicao=0xc0;
  3211  001F32  0EC0               	movlw	192
  3212  001F34  6F76               	movwf	caracter_inicio@posicao& (0+255),b
  3213  001F36                     l2174:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;lcd.c: 85: posicao=posicao+coluna;
  3217  001F36  5176               	movf	caracter_inicio@posicao& (0+255),w,b
  3218  001F38  2574               	addwf	caracter_inicio@coluna& (0+255),w,b
  3219  001F3A  6F76               	movwf	caracter_inicio@posicao& (0+255),b
  3220  001F3C                     
  3221                           ; BSR set to: 0
  3222                           ;lcd.c: 87: envia_byte_lcd(0,posicao);
  3223  001F3C  C076  F072         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  3224  001F40  0E00               	movlw	0
  3225  001F42  EC78  F010         	call	_envia_byte_lcd
  3226  001F46  0012               	return		;funcret
  3227  001F48                     __end_of_caracter_inicio:
  3228                           	opt callstack 0
  3229                           
  3230 ;; *************** function _envia_byte_lcd *****************
  3231 ;; Defined at:
  3232 ;;		line 22 in file "lcd.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  endereco        1    wreg     unsigned char 
  3235 ;;  dado            1   18[BANK0 ] unsigned char 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  endereco        1   19[BANK0 ] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3247 ;;      Params:         0       1       0       0       0       0       0       0       0
  3248 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3250 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3251 ;;Total ram usage:        2 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:   13
  3254 ;; This function calls:
  3255 ;;		_envia_nibble_lcd
  3256 ;; This function is called by:
  3257 ;;		_escreve_lcd
  3258 ;;		_limpa_lcd
  3259 ;;		_inicializa_lcd
  3260 ;;		_caracter_inicio
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text17
  3265  0020F0                     __ptext17:
  3266                           	opt callstack 0
  3267  0020F0                     _envia_byte_lcd:
  3268                           	opt callstack 11
  3269                           
  3270                           ;incstack = 0
  3271                           ;envia_byte_lcd@endereco stored from wreg
  3272  0020F0  0100               	movlb	0	; () banked
  3273  0020F2  6F73               	movwf	envia_byte_lcd@endereco& (0+255),b
  3274  0020F4                     
  3275                           ;lcd.c: 22: void envia_byte_lcd(char endereco,char dado);lcd.c: 23: {;lcd.c: 24:  PORTDb
      +                          its.RD0 = endereco;
  3276  0020F4  0100               	movlb	0	; () banked
  3277  0020F6  B173               	btfsc	envia_byte_lcd@endereco& (0+255),0,b
  3278  0020F8  D002               	bra	u1035
  3279  0020FA  9083               	bcf	131,0,c	;volatile
  3280  0020FC  D001               	bra	u1036
  3281  0020FE                     u1035:
  3282  0020FE  8083               	bsf	131,0,c	;volatile
  3283  002100                     u1036:
  3284  002100                     
  3285                           ;lcd.c: 25:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  3286  002100  D000               	nop2		;2 cycle nop
  3287  002102  D000               	nop2		;2 cycle nop
  3288  002104  F000               	nop	
  3289  002106                     
  3290                           ;lcd.c: 26:  envia_nibble_lcd(dado>>4);
  3291  002106  0100               	movlb	0	; () banked
  3292  002108  3972               	swapf	envia_byte_lcd@dado& (0+255),w,b
  3293  00210A  0B0F               	andlw	15
  3294  00210C  EC71  F00E         	call	_envia_nibble_lcd
  3295  002110                     
  3296                           ;lcd.c: 27:  envia_nibble_lcd(dado & 0x0f);
  3297  002110  0100               	movlb	0	; () banked
  3298  002112  5172               	movf	envia_byte_lcd@dado& (0+255),w,b
  3299  002114  0B0F               	andlw	15
  3300  002116  EC71  F00E         	call	_envia_nibble_lcd
  3301  00211A  0012               	return		;funcret
  3302  00211C                     __end_of_envia_byte_lcd:
  3303                           	opt callstack 0
  3304                           
  3305 ;; *************** function _envia_nibble_lcd *****************
  3306 ;; Defined at:
  3307 ;;		line 4 in file "lcd.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  dado            1    wreg     unsigned char 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  dado            1   17[BANK0 ] unsigned char 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0
  3322 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3323 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3324 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3325 ;;Total ram usage:        2 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:   12
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_envia_byte_lcd
  3332 ;;		_inicializa_lcd
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text18
  3337  001CE2                     __ptext18:
  3338                           	opt callstack 0
  3339  001CE2                     _envia_nibble_lcd:
  3340                           	opt callstack 11
  3341                           
  3342                           ;incstack = 0
  3343                           ;envia_nibble_lcd@dado stored from wreg
  3344  001CE2  0100               	movlb	0	; () banked
  3345  001CE4  6F71               	movwf	envia_nibble_lcd@dado& (0+255),b
  3346  001CE6                     
  3347                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD1 = 1;
  3348  001CE6  8283               	bsf	131,1,c	;volatile
  3349  001CE8                     
  3350                           ;lcd.c: 7:   PORTDbits.RD4 = dado & 0x01;
  3351  001CE8  C071  F070         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3352  001CEC  0E01               	movlw	1
  3353  001CEE  0100               	movlb	0	; () banked
  3354  001CF0  1770               	andwf	??_envia_nibble_lcd& (0+255),f,b
  3355  001CF2  3B70               	swapf	??_envia_nibble_lcd& (0+255),f,b
  3356  001CF4  5083               	movf	131,w,c	;volatile
  3357  001CF6  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3358  001CF8  0BEF               	andlw	-17
  3359  001CFA  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3360  001CFC  6E83               	movwf	131,c	;volatile
  3361                           
  3362                           ;lcd.c: 8:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  3363  001CFE  C071  F070         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3364  001D02  90D8               	bcf	status,0,c
  3365  001D04  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3366  001D06  0E01               	movlw	1
  3367  001D08  1770               	andwf	??_envia_nibble_lcd& (0+255),f,b
  3368  001D0A  3B70               	swapf	??_envia_nibble_lcd& (0+255),f,b
  3369  001D0C  4770               	rlncf	??_envia_nibble_lcd& (0+255),f,b
  3370  001D0E  5083               	movf	131,w,c	;volatile
  3371  001D10  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3372  001D12  0BDF               	andlw	-33
  3373  001D14  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3374  001D16  6E83               	movwf	131,c	;volatile
  3375                           
  3376                           ;lcd.c: 9:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  3377  001D18  C071  F070         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3378  001D1C  90D8               	bcf	status,0,c
  3379  001D1E  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3380  001D20  90D8               	bcf	status,0,c
  3381  001D22  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3382  001D24  0E01               	movlw	1
  3383  001D26  1770               	andwf	??_envia_nibble_lcd& (0+255),f,b
  3384  001D28  3B70               	swapf	??_envia_nibble_lcd& (0+255),f,b
  3385  001D2A  4770               	rlncf	??_envia_nibble_lcd& (0+255),f,b
  3386  001D2C  4770               	rlncf	??_envia_nibble_lcd& (0+255),f,b
  3387  001D2E  5083               	movf	131,w,c	;volatile
  3388  001D30  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3389  001D32  0BBF               	andlw	-65
  3390  001D34  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3391  001D36  6E83               	movwf	131,c	;volatile
  3392                           
  3393                           ;lcd.c: 10:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  3394  001D38  C071  F070         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  3395  001D3C  90D8               	bcf	status,0,c
  3396  001D3E  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3397  001D40  90D8               	bcf	status,0,c
  3398  001D42  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3399  001D44  90D8               	bcf	status,0,c
  3400  001D46  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3401  001D48  0E01               	movlw	1
  3402  001D4A  1770               	andwf	??_envia_nibble_lcd& (0+255),f,b
  3403  001D4C  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3404  001D4E  3370               	rrcf	??_envia_nibble_lcd& (0+255),f,b
  3405  001D50  5083               	movf	131,w,c	;volatile
  3406  001D52  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3407  001D54  0B7F               	andlw	-129
  3408  001D56  1970               	xorwf	??_envia_nibble_lcd& (0+255),w,b
  3409  001D58  6E83               	movwf	131,c	;volatile
  3410  001D5A                     
  3411                           ; BSR set to: 0
  3412                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3413  001D5A  0E10               	movlw	16
  3414  001D5C                     u2117:
  3415  001D5C  2EE8               	decfsz	wreg,f,c
  3416  001D5E  D7FE               	bra	u2117
  3417  001D60  D000               	nop2	
  3418  001D62                     
  3419                           ;lcd.c: 14:   PORTDbits.RD1 = 0;
  3420  001D62  9283               	bcf	131,1,c	;volatile
  3421  001D64                     
  3422                           ;lcd.c: 15:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3423  001D64  0E10               	movlw	16
  3424  001D66                     u2127:
  3425  001D66  2EE8               	decfsz	wreg,f,c
  3426  001D68  D7FE               	bra	u2127
  3427  001D6A  D000               	nop2	
  3428  001D6C  0012               	return		;funcret
  3429  001D6E                     __end_of_envia_nibble_lcd:
  3430                           	opt callstack 0
  3431                           
  3432 ;; *************** function _isr *****************
  3433 ;; Defined at:
  3434 ;;		line 130 in file "newmain.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          0       8       0       0       0       0       0       0       0
  3451 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        8 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:   11
  3455 ;; This function calls:
  3456 ;;		i2_caracter_inicio
  3457 ;;		i2_limpa_lcd
  3458 ;;		i2_printf
  3459 ;; This function is called by:
  3460 ;;		Interrupt level 2
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	intcode
  3465  000008                     __pintcode:
  3466                           	opt callstack 0
  3467  000008                     _isr:
  3468                           	opt callstack 8
  3469                           
  3470                           ;incstack = 0
  3471  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3472  00000A  EDB2  F008         	call	int_func,f	;refresh shadow registers
  3473                           
  3474                           	psect	intcode_body
  3475  001164                     __pintcode_body:
  3476                           	opt callstack 8
  3477  001164                     int_func:
  3478                           	opt callstack 8
  3479  001164  0006               	pop		; remove dummy address from shadow register refresh
  3480  001166  CFE1 F068          	movff	fsr1l,??_isr
  3481  00116A  CFE2 F069          	movff	fsr1h,??_isr+1
  3482  00116E  CFD9 F06A          	movff	fsr2l,??_isr+2
  3483  001172  CFDA F06B          	movff	fsr2h,??_isr+3
  3484  001176  CFF6 F06C          	movff	tblptrl,??_isr+4
  3485  00117A  CFF7 F06D          	movff	tblptrh,??_isr+5
  3486  00117E  CFF8 F06E          	movff	tblptru,??_isr+6
  3487  001182  CFF5 F06F          	movff	tablat,??_isr+7
  3488  001186                     
  3489                           ;newmain.c: 132:     if (INTCONbits.INT0F && !fi) {
  3490  001186  A2F2               	btfss	242,1,c	;volatile
  3491  001188  EFC8  F008         	goto	i2u198_41
  3492  00118C  EFCA  F008         	goto	i2u198_40
  3493  001190                     i2u198_41:
  3494  001190  EFF6  F008         	goto	i2l59
  3495  001194                     i2u198_40:
  3496  001194  0100               	movlb	0	; () banked
  3497  001196  51E1               	movf	_fi& (0+255),w,b
  3498  001198  11E2               	iorwf	(_fi+1)& (0+255),w,b
  3499  00119A  A4D8               	btfss	status,2,c
  3500  00119C  EFD2  F008         	goto	i2u199_41
  3501  0011A0  EFD4  F008         	goto	i2u199_40
  3502  0011A4                     i2u199_41:
  3503  0011A4  EFF6  F008         	goto	i2l59
  3504  0011A8                     i2u199_40:
  3505  0011A8                     
  3506                           ; BSR set to: 0
  3507                           ;newmain.c: 133:         T = 0;
  3508  0011A8  0E00               	movlw	0
  3509  0011AA  6FDE               	movwf	(_T+1)& (0+255),b
  3510  0011AC  0E00               	movlw	0
  3511  0011AE  6FDD               	movwf	_T& (0+255),b
  3512                           
  3513                           ;newmain.c: 134:         fi = 1;
  3514  0011B0  0E00               	movlw	0
  3515  0011B2  6FE2               	movwf	(_fi+1)& (0+255),b
  3516  0011B4  0E01               	movlw	1
  3517  0011B6  6FE1               	movwf	_fi& (0+255),b
  3518                           
  3519                           ;newmain.c: 135:         fix = 1;
  3520  0011B8  0E00               	movlw	0
  3521  0011BA  6FE0               	movwf	(_fix+1)& (0+255),b
  3522  0011BC  0E01               	movlw	1
  3523  0011BE  6FDF               	movwf	_fix& (0+255),b
  3524  0011C0                     
  3525                           ; BSR set to: 0
  3526                           ;newmain.c: 136:         INTCON3bits.INT2F = 0;
  3527  0011C0  92F0               	bcf	240,1,c	;volatile
  3528  0011C2                     
  3529                           ; BSR set to: 0
  3530                           ;newmain.c: 137:         INTCON3bits.INT1F = 0;
  3531  0011C2  90F0               	bcf	240,0,c	;volatile
  3532  0011C4                     
  3533                           ; BSR set to: 0
  3534                           ;newmain.c: 138:         PORTCbits.RC1 = 0;
  3535  0011C4  9282               	bcf	130,1,c	;volatile
  3536  0011C6                     
  3537                           ; BSR set to: 0
  3538                           ;newmain.c: 139:         PORTCbits.RC2 = 0;
  3539  0011C6  9482               	bcf	130,2,c	;volatile
  3540  0011C8                     
  3541                           ; BSR set to: 0
  3542                           ;newmain.c: 140:         INTCONbits.INT0F = 0;
  3543  0011C8  92F2               	bcf	242,1,c	;volatile
  3544  0011CA                     
  3545                           ; BSR set to: 0
  3546                           ;newmain.c: 141:         T2CONbits.TMR2ON = 1;
  3547  0011CA  84CA               	bsf	202,2,c	;volatile
  3548  0011CC                     
  3549                           ; BSR set to: 0
  3550                           ;newmain.c: 142:         limpa_lcd();
  3551  0011CC  ECD9  F010         	call	i2_limpa_lcd	;wreg free
  3552  0011D0                     
  3553                           ;newmain.c: 143:         caracter_inicio(1,4);
  3554  0011D0  0E04               	movlw	4
  3555  0011D2  6E05               	movwf	i2caracter_inicio@coluna^0,c
  3556  0011D4  0E01               	movlw	1
  3557  0011D6  ECE7  F00F         	call	i2_caracter_inicio
  3558  0011DA                     
  3559                           ;newmain.c: 144:         printf("comecem!");
  3560  0011DA  0E19               	movlw	low STR_2
  3561  0011DC  0100               	movlb	0	; () banked
  3562  0011DE  6F60               	movwf	i2printf@fmt& (0+255),b
  3563  0011E0  0E08               	movlw	high STR_2
  3564  0011E2  6F61               	movwf	(i2printf@fmt+1)& (0+255),b
  3565  0011E4  EC60  F010         	call	i2_printf	;wreg free
  3566                           
  3567                           ;newmain.c: 145:     } else if (INTCON3bits.INT1F && fi) {
  3568  0011E8  EF71  F009         	goto	i2l66
  3569  0011EC                     i2l59:
  3570  0011EC  A0F0               	btfss	240,0,c	;volatile
  3571  0011EE  EFFB  F008         	goto	i2u200_41
  3572  0011F2  EFFD  F008         	goto	i2u200_40
  3573  0011F6                     i2u200_41:
  3574  0011F6  EF2D  F009         	goto	i2l61
  3575  0011FA                     i2u200_40:
  3576  0011FA  0100               	movlb	0	; () banked
  3577  0011FC  51E1               	movf	_fi& (0+255),w,b
  3578  0011FE  11E2               	iorwf	(_fi+1)& (0+255),w,b
  3579  001200  B4D8               	btfsc	status,2,c
  3580  001202  EF05  F009         	goto	i2u201_41
  3581  001206  EF07  F009         	goto	i2u201_40
  3582  00120A                     i2u201_41:
  3583  00120A  EF2D  F009         	goto	i2l61
  3584  00120E                     i2u201_40:
  3585  00120E                     
  3586                           ; BSR set to: 0
  3587                           ;newmain.c: 146:         T2CONbits.TMR2ON = 0;
  3588  00120E  94CA               	bcf	202,2,c	;volatile
  3589                           
  3590                           ;newmain.c: 147:         INTCONbits.INT0F = 0;
  3591  001210  92F2               	bcf	242,1,c	;volatile
  3592  001212                     
  3593                           ; BSR set to: 0
  3594                           ;newmain.c: 148:         fi = 0;
  3595  001212  0E00               	movlw	0
  3596  001214  6FE2               	movwf	(_fi+1)& (0+255),b
  3597  001216  0E00               	movlw	0
  3598  001218  6FE1               	movwf	_fi& (0+255),b
  3599  00121A                     
  3600                           ; BSR set to: 0
  3601                           ;newmain.c: 149:         INTCON3bits.INT1F = 0;
  3602  00121A  90F0               	bcf	240,0,c	;volatile
  3603  00121C                     
  3604                           ; BSR set to: 0
  3605                           ;newmain.c: 150:         PORTCbits.RC1 = 1;
  3606  00121C  8282               	bsf	130,1,c	;volatile
  3607  00121E                     
  3608                           ; BSR set to: 0
  3609                           ;newmain.c: 151:         caracter_inicio(1,3);
  3610  00121E  0E03               	movlw	3
  3611  001220  6E05               	movwf	i2caracter_inicio@coluna^0,c
  3612  001222  0E01               	movlw	1
  3613  001224  ECE7  F00F         	call	i2_caracter_inicio
  3614  001228                     
  3615                           ;newmain.c: 152:         printf("jogador 1!!");
  3616  001228  0E01               	movlw	low STR_3
  3617  00122A  0100               	movlb	0	; () banked
  3618  00122C  6F60               	movwf	i2printf@fmt& (0+255),b
  3619  00122E  0E08               	movlw	high STR_3
  3620  001230  6F61               	movwf	(i2printf@fmt+1)& (0+255),b
  3621  001232  EC60  F010         	call	i2_printf	;wreg free
  3622  001236                     
  3623                           ;newmain.c: 153:         caracter_inicio(2,0);
  3624  001236  0E00               	movlw	0
  3625  001238  6E05               	movwf	i2caracter_inicio@coluna^0,c
  3626  00123A  0E02               	movlw	2
  3627  00123C  ECE7  F00F         	call	i2_caracter_inicio
  3628  001240                     
  3629                           ;newmain.c: 154:         printf("%d ms",T);
  3630  001240  0E29               	movlw	low STR_4
  3631  001242  0100               	movlb	0	; () banked
  3632  001244  6F60               	movwf	i2printf@fmt& (0+255),b
  3633  001246  0E08               	movlw	high STR_4
  3634  001248  6F61               	movwf	(i2printf@fmt+1)& (0+255),b
  3635  00124A  C0DD  F062         	movff	_T,?i2_printf+2
  3636  00124E  C0DE  F063         	movff	_T+1,?i2_printf+3
  3637  001252  EC60  F010         	call	i2_printf	;wreg free
  3638                           
  3639                           ;newmain.c: 155:     } else if (INTCON3bits.INT2F && fi) {
  3640  001256  EF71  F009         	goto	i2l66
  3641  00125A                     i2l61:
  3642  00125A  A2F0               	btfss	240,1,c	;volatile
  3643  00125C  EF32  F009         	goto	i2u202_41
  3644  001260  EF34  F009         	goto	i2u202_40
  3645  001264                     i2u202_41:
  3646  001264  EF64  F009         	goto	i2l63
  3647  001268                     i2u202_40:
  3648  001268  0100               	movlb	0	; () banked
  3649  00126A  51E1               	movf	_fi& (0+255),w,b
  3650  00126C  11E2               	iorwf	(_fi+1)& (0+255),w,b
  3651  00126E  B4D8               	btfsc	status,2,c
  3652  001270  EF3C  F009         	goto	i2u203_41
  3653  001274  EF3E  F009         	goto	i2u203_40
  3654  001278                     i2u203_41:
  3655  001278  EF64  F009         	goto	i2l63
  3656  00127C                     i2u203_40:
  3657  00127C                     
  3658                           ; BSR set to: 0
  3659                           ;newmain.c: 156:         T2CONbits.TMR2ON = 0;
  3660  00127C  94CA               	bcf	202,2,c	;volatile
  3661                           
  3662                           ;newmain.c: 157:         INTCONbits.INT0F = 0;
  3663  00127E  92F2               	bcf	242,1,c	;volatile
  3664  001280                     
  3665                           ; BSR set to: 0
  3666                           ;newmain.c: 158:         fi = 0;
  3667  001280  0E00               	movlw	0
  3668  001282  6FE2               	movwf	(_fi+1)& (0+255),b
  3669  001284  0E00               	movlw	0
  3670  001286  6FE1               	movwf	_fi& (0+255),b
  3671  001288                     
  3672                           ; BSR set to: 0
  3673                           ;newmain.c: 159:         INTCON3bits.INT2F = 0;
  3674  001288  92F0               	bcf	240,1,c	;volatile
  3675  00128A                     
  3676                           ; BSR set to: 0
  3677                           ;newmain.c: 160:         PORTCbits.RC2 = 1;
  3678  00128A  8482               	bsf	130,2,c	;volatile
  3679  00128C                     
  3680                           ; BSR set to: 0
  3681                           ;newmain.c: 161:         caracter_inicio(1,3);
  3682  00128C  0E03               	movlw	3
  3683  00128E  6E05               	movwf	i2caracter_inicio@coluna^0,c
  3684  001290  0E01               	movlw	1
  3685  001292  ECE7  F00F         	call	i2_caracter_inicio
  3686  001296                     
  3687                           ;newmain.c: 162:         printf("jogador 2!!");
  3688  001296  0E0D               	movlw	low STR_5
  3689  001298  0100               	movlb	0	; () banked
  3690  00129A  6F60               	movwf	i2printf@fmt& (0+255),b
  3691  00129C  0E08               	movlw	high STR_5
  3692  00129E  6F61               	movwf	(i2printf@fmt+1)& (0+255),b
  3693  0012A0  EC60  F010         	call	i2_printf	;wreg free
  3694  0012A4                     
  3695                           ;newmain.c: 163:         caracter_inicio(2,0);
  3696  0012A4  0E00               	movlw	0
  3697  0012A6  6E05               	movwf	i2caracter_inicio@coluna^0,c
  3698  0012A8  0E02               	movlw	2
  3699  0012AA  ECE7  F00F         	call	i2_caracter_inicio
  3700  0012AE                     
  3701                           ;newmain.c: 164:         printf("%d ms",T);
  3702  0012AE  0E29               	movlw	low STR_4
  3703  0012B0  0100               	movlb	0	; () banked
  3704  0012B2  6F60               	movwf	i2printf@fmt& (0+255),b
  3705  0012B4  0E08               	movlw	high STR_4
  3706  0012B6  6F61               	movwf	(i2printf@fmt+1)& (0+255),b
  3707  0012B8  C0DD  F062         	movff	_T,?i2_printf+2
  3708  0012BC  C0DE  F063         	movff	_T+1,?i2_printf+3
  3709  0012C0  EC60  F010         	call	i2_printf	;wreg free
  3710                           
  3711                           ;newmain.c: 165:     } else if (TMR2IF){
  3712  0012C4  EF71  F009         	goto	i2l66
  3713  0012C8                     i2l63:
  3714  0012C8  A29E               	btfss	3998,1,c	;volatile
  3715  0012CA  EF69  F009         	goto	i2u204_41
  3716  0012CE  EF6B  F009         	goto	i2u204_40
  3717  0012D2                     i2u204_41:
  3718  0012D2  EF71  F009         	goto	i2l62
  3719  0012D6                     i2u204_40:
  3720  0012D6                     
  3721                           ;newmain.c: 166:         TMR2IF = 0;
  3722  0012D6  929E               	bcf	3998,1,c	;volatile
  3723  0012D8                     
  3724                           ;newmain.c: 167:         T++;
  3725  0012D8  0100               	movlb	0	; () banked
  3726  0012DA  4BDD               	infsnz	_T& (0+255),f,b
  3727  0012DC  2BDE               	incf	(_T+1)& (0+255),f,b
  3728  0012DE  EF71  F009         	goto	i2l66
  3729  0012E2                     i2l62:
  3730  0012E2                     i2l66:
  3731  0012E2  C06F  FFF5         	movff	??_isr+7,tablat
  3732  0012E6  C06E  FFF8         	movff	??_isr+6,tblptru
  3733  0012EA  C06D  FFF7         	movff	??_isr+5,tblptrh
  3734  0012EE  C06C  FFF6         	movff	??_isr+4,tblptrl
  3735  0012F2  C06B  FFDA         	movff	??_isr+3,fsr2h
  3736  0012F6  C06A  FFD9         	movff	??_isr+2,fsr2l
  3737  0012FA  C069  FFE2         	movff	??_isr+1,fsr1h
  3738  0012FE  C068  FFE1         	movff	??_isr,fsr1l
  3739  001302  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3740  001304  0011               	retfie		f
  3741  001306                     __end_of_isr:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function i2_printf *****************
  3745 ;; Defined at:
  3746 ;;		line 5 in file "F:\Program Files\mplab\pic\sources\c99\common\printf.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  3749 ;;		 -> STR_6(6), STR_5(12), STR_4(6), STR_3(12), 
  3750 ;;		 -> STR_2(9), STR_1(7), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  printf          2    6[BANK0 ] PTR void [1]
  3753 ;;		 -> ?i2_printf(2), ?_printf(2), 
  3754 ;;  printf          2    4[BANK0 ] int 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  2    0[BANK0 ] int 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3764 ;;      Params:         0       4       0       0       0       0       0       0       0
  3765 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3767 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3768 ;;Total ram usage:        8 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:   10
  3771 ;; This function calls:
  3772 ;;		i2_vfprintf
  3773 ;; This function is called by:
  3774 ;;		_isr
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text20
  3779  0020C0                     __ptext20:
  3780                           	opt callstack 0
  3781  0020C0                     i2_printf:
  3782                           	opt callstack 8
  3783  0020C0  0E62               	movlw	low (?i2_printf+2)
  3784  0020C2  0100               	movlb	0	; () banked
  3785  0020C4  6F66               	movwf	i2printf@ap& (0+255),b
  3786  0020C6  0E00               	movlw	high (?i2_printf+2)
  3787  0020C8  6F67               	movwf	(i2printf@ap+1)& (0+255),b
  3788  0020CA                     
  3789                           ; BSR set to: 0
  3790  0020CA  0E00               	movlw	0
  3791  0020CC  6E56               	movwf	i2vfprintf@fp^0,c
  3792  0020CE  0E00               	movlw	0
  3793  0020D0  6E57               	movwf	(i2vfprintf@fp+1)^0,c
  3794  0020D2  C060  F058         	movff	i2printf@fmt,i2vfprintf@fmt
  3795  0020D6  C061  F059         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  3796  0020DA  0E66               	movlw	low i2printf@ap
  3797  0020DC  6E5A               	movwf	i2vfprintf@ap^0,c
  3798  0020DE  0E00               	movlw	high i2printf@ap
  3799  0020E0  6E5B               	movwf	(i2vfprintf@ap+1)^0,c
  3800  0020E2  EC2C  F00F         	call	i2_vfprintf	;wreg free
  3801  0020E6  C056  F064         	movff	?i2_vfprintf,i2printf@ret
  3802  0020EA  C057  F065         	movff	?i2_vfprintf+1,i2printf@ret+1
  3803  0020EE  0012               	return		;funcret
  3804  0020F0                     __end_ofi2_printf:
  3805                           	opt callstack 0
  3806                           
  3807 ;; *************** function i2_vfprintf *****************
  3808 ;; Defined at:
  3809 ;;		line 1368 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  3812 ;;		 -> NULL(0), 
  3813 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  3814 ;;		 -> STR_6(6), STR_5(12), STR_4(6), STR_3(12), 
  3815 ;;		 -> STR_2(9), STR_1(7), 
  3816 ;;  ap              2   89[COMRAM] PTR PTR void 
  3817 ;;		 -> i2printf@ap(2), printf@ap(2), 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  vfprintf        2   91[COMRAM] PTR unsigned char 
  3820 ;;		 -> STR_6(6), STR_5(12), STR_4(6), STR_3(12), 
  3821 ;;		 -> STR_2(9), STR_1(7), 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  2   85[COMRAM] int 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         6       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        8 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    9
  3838 ;; This function calls:
  3839 ;;		i2_vfpfcnvrt
  3840 ;; This function is called by:
  3841 ;;		i2_printf
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text21
  3846  001E58                     __ptext21:
  3847                           	opt callstack 0
  3848  001E58                     i2_vfprintf:
  3849                           	opt callstack 8
  3850  001E58                     
  3851                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *fp, co
      +                          nst char *fmt, va_list ap);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1369:
      +                           {;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1371:     char *cfmt;;F:\Prog
      +                          ram Files\mplab\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3852  001E58  C058  F05C         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  3853  001E5C  C059  F05D         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  3854  001E60                     
  3855                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3856  001E60  0E00               	movlw	0
  3857  001E62  0100               	movlb	0	; () banked
  3858  001E64  6FD6               	movwf	(_nout+1)& (0+255),b
  3859  001E66  0E00               	movlw	0
  3860  001E68  6FD5               	movwf	_nout& (0+255),b
  3861                           
  3862                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3863  001E6A  EF4A  F00F         	goto	i2l2136
  3864  001E6E                     i2l2134:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1376:         nout += vfpfcnvrt
      +                          (fp, &cfmt, ap);
  3868  001E6E  C056  F046         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  3869  001E72  C057  F047         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  3870  001E76  0E5C               	movlw	low i2vfprintf@cfmt
  3871  001E78  6E48               	movwf	i2vfpfcnvrt@fmt^0,c
  3872  001E7A  0E00               	movlw	high i2vfprintf@cfmt
  3873  001E7C  6E49               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  3874  001E7E  C05A  F04A         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  3875  001E82  C05B  F04B         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  3876  001E86  ECD8  F007         	call	i2_vfpfcnvrt	;wreg free
  3877  001E8A  5046               	movf	?i2_vfpfcnvrt^0,w,c
  3878  001E8C  0100               	movlb	0	; () banked
  3879  001E8E  27D5               	addwf	_nout& (0+255),f,b
  3880  001E90  5047               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  3881  001E92  23D6               	addwfc	(_nout+1)& (0+255),f,b
  3882  001E94                     i2l2136:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3886  001E94  C05C  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  3887  001E98  C05D  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  3888  001E9C                     	if	0	;tblptru may be non-zero
  3889  001E9C                     	endif
  3890  001E9C                     	if	0	;tblptru may be non-zero
  3891  001E9C                     	endif
  3892  001E9C  0008               	tblrd		*
  3893  001E9E  50F5               	movf	tablat,w,c
  3894  001EA0  0900               	iorlw	0
  3895  001EA2  A4D8               	btfss	status,2,c
  3896  001EA4  EF56  F00F         	goto	i2u192_41
  3897  001EA8  EF58  F00F         	goto	i2u192_40
  3898  001EAC                     i2u192_41:
  3899  001EAC  EF37  F00F         	goto	i2l2134
  3900  001EB0                     i2u192_40:
  3901  001EB0                     
  3902                           ; BSR set to: 0
  3903                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3904  001EB0  C0D5  F056         	movff	_nout,?i2_vfprintf
  3905  001EB4  C0D6  F057         	movff	_nout+1,?i2_vfprintf+1
  3906  001EB8                     
  3907                           ; BSR set to: 0
  3908  001EB8  0012               	return		;funcret
  3909  001EBA                     __end_ofi2_vfprintf:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function i2_vfpfcnvrt *****************
  3913 ;; Defined at:
  3914 ;;		line 670 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3917 ;;		 -> NULL(0), 
  3918 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  3919 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  3920 ;;  ap              2   73[COMRAM] PTR PTR void 
  3921 ;;		 -> i2printf@ap(2), printf@ap(2), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  vfpfcnvrt       8   77[COMRAM] long long 
  3924 ;;  vfpfcnvrt       8    0        unsigned long long 
  3925 ;;  vfpfcnvrt       4    0        unsigned long long 
  3926 ;;  vfpfcnvrt       3    0        PTR void 
  3927 ;;  vfpfcnvrt       3    0        unsigned char [3]
  3928 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  3929 ;;  vfpfcnvrt       2    0        int 
  3930 ;;  vfpfcnvrt       2    0        int 
  3931 ;;  vfpfcnvrt       1    0        unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  2   69[COMRAM] int 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3941 ;;      Params:         6       0       0       0       0       0       0       0       0
  3942 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3943 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3944 ;;      Totals:        16       0       0       0       0       0       0       0       0
  3945 ;;Total ram usage:       16 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    8
  3948 ;; This function calls:
  3949 ;;		i2_dtoa
  3950 ;;		i2_fputc
  3951 ;; This function is called by:
  3952 ;;		i2_vfprintf
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text22
  3957  000FB0                     __ptext22:
  3958                           	opt callstack 0
  3959  000FB0                     i2_vfpfcnvrt:
  3960                           	opt callstack 8
  3961  000FB0                     
  3962                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt(FILE 
      +                          *fp, char *fmt[], va_list ap);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 67
      +                          1: {;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3]
      +                          ;;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 673:     int done, i;;F:\Progr
      +                          am Files\mplab\pic\sources\c99\common\doprnt.c: 674:     long long ll;;F:\Program Files\
      +                          mplab\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;;F:\Program Files
      +                          \mplab\pic\sources\c99\common\doprnt.c: 676:     long double f;
  3963  000FB0  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3964  000FB4  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3965  000FB8  CFDE FFF6          	movff	postinc2,tblptrl
  3966  000FBC  CFDD FFF7          	movff	postdec2,tblptrh
  3967  000FC0                     	if	0	;tblptru may be non-zero
  3968  000FC0                     	endif
  3969  000FC0                     	if	0	;tblptru may be non-zero
  3970  000FC0                     	endif
  3971  000FC0  0008               	tblrd		*
  3972  000FC2  50F5               	movf	tablat,w,c
  3973  000FC4  0A25               	xorlw	37
  3974  000FC6  A4D8               	btfss	status,2,c
  3975  000FC8  EFE8  F007         	goto	i2u187_41
  3976  000FCC  EFEA  F007         	goto	i2u187_40
  3977  000FD0                     i2u187_41:
  3978  000FD0  EF96  F008         	goto	i2l2114
  3979  000FD4                     i2u187_40:
  3980  000FD4                     
  3981                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3982  000FD4  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  3983  000FD8  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  3984  000FDC  2ADE               	incf	postinc2,f,c
  3985  000FDE  0E00               	movlw	0
  3986  000FE0  22DD               	addwfc	postdec2,f,c
  3987  000FE2                     
  3988                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 683:         flags = width = 0;
  3989  000FE2  0E00               	movlw	0
  3990  000FE4  0100               	movlb	0	; () banked
  3991  000FE6  6FD8               	movwf	(_width+1)& (0+255),b
  3992  000FE8  0E00               	movlw	0
  3993  000FEA  6FD7               	movwf	_width& (0+255),b
  3994  000FEC  C0D7  F0DB         	movff	_width,_flags
  3995  000FF0  C0D8  F0DC         	movff	_width+1,_flags+1
  3996  000FF4                     
  3997                           ; BSR set to: 0
  3998                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  3999  000FF4  69D9               	setf	_prec& (0+255),b
  4000  000FF6  69DA               	setf	(_prec+1)& (0+255),b
  4001  000FF8                     
  4002                           ; BSR set to: 0
  4003                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0] == 'd
      +                          ') || (*fmt[0] == 'i')) {
  4004  000FF8  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4005  000FFC  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4006  001000  CFDE FFF6          	movff	postinc2,tblptrl
  4007  001004  CFDD FFF7          	movff	postdec2,tblptrh
  4008  001008                     	if	0	;tblptru may be non-zero
  4009  001008                     	endif
  4010  001008                     	if	0	;tblptru may be non-zero
  4011  001008                     	endif
  4012  001008  0008               	tblrd		*
  4013  00100A  50F5               	movf	tablat,w,c
  4014  00100C  0A64               	xorlw	100
  4015  00100E  B4D8               	btfsc	status,2,c
  4016  001010  EF0C  F008         	goto	i2u188_41
  4017  001014  EF0E  F008         	goto	i2u188_40
  4018  001018                     i2u188_41:
  4019  001018  EF20  F008         	goto	i2l2092
  4020  00101C                     i2u188_40:
  4021  00101C                     
  4022                           ; BSR set to: 0
  4023  00101C  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4024  001020  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4025  001024  CFDE FFF6          	movff	postinc2,tblptrl
  4026  001028  CFDD FFF7          	movff	postdec2,tblptrh
  4027  00102C                     	if	0	;tblptru may be non-zero
  4028  00102C                     	endif
  4029  00102C                     	if	0	;tblptru may be non-zero
  4030  00102C                     	endif
  4031  00102C  0008               	tblrd		*
  4032  00102E  50F5               	movf	tablat,w,c
  4033  001030  0A69               	xorlw	105
  4034  001032  A4D8               	btfss	status,2,c
  4035  001034  EF1E  F008         	goto	i2u189_41
  4036  001038  EF20  F008         	goto	i2u189_40
  4037  00103C                     i2u189_41:
  4038  00103C  EF60  F008         	goto	i2l2098
  4039  001040                     i2u189_40:
  4040  001040                     i2l2092:
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 827:             ++*fmt;
  4044  001040  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4045  001044  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4046  001048  2ADE               	incf	postinc2,f,c
  4047  00104A  0E00               	movlw	0
  4048  00104C  22DD               	addwfc	postdec2,f,c
  4049                           
  4050                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 828:             ll = (long lon
      +                          g)(*(int *)__va_arg(*(int **)ap, (int)0));
  4051  00104E  C04A  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4052  001052  C04B  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4053  001056  CFDF F04C          	movff	indf2,??i2_vfpfcnvrt
  4054  00105A  0E02               	movlw	2
  4055  00105C  26DE               	addwf	postinc2,f,c
  4056  00105E  CFDF F04D          	movff	indf2,??i2_vfpfcnvrt+1
  4057  001062  0E00               	movlw	0
  4058  001064  22DD               	addwfc	postdec2,f,c
  4059  001066  C04C  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4060  00106A  C04D  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4061  00106E  CFDE F04E          	movff	postinc2,i2vfpfcnvrt@ll
  4062  001072  CFDD F04F          	movff	postdec2,i2vfpfcnvrt@ll+1
  4063  001076  0E00               	movlw	0
  4064  001078  BE4F               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  4065  00107A  0EFF               	movlw	-1
  4066  00107C  6E50               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  4067  00107E  6E51               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  4068  001080  6E52               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  4069  001082  6E53               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  4070  001084  6E54               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  4071  001086  6E55               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  4072  001088                     
  4073                           ; BSR set to: 0
  4074                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 830:             return dtoa(fp
      +                          , ll);
  4075  001088  C046  F022         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  4076  00108C  C047  F023         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  4077  001090  C04E  F024         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  4078  001094  C04F  F025         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  4079  001098  C050  F026         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  4080  00109C  C051  F027         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  4081  0010A0  C052  F028         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  4082  0010A4  C053  F029         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  4083  0010A8  C054  F02A         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  4084  0010AC  C055  F02B         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  4085  0010B0  EC8A  F005         	call	i2_dtoa	;wreg free
  4086  0010B4  C022  F046         	movff	?i2_dtoa,?i2_vfpfcnvrt
  4087  0010B8  C023  F047         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  4088  0010BC  EFB1  F008         	goto	i2l155
  4089  0010C0                     i2l2098:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[0] == 
      +                          '%') {
  4093  0010C0  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4094  0010C4  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4095  0010C8  CFDE FFF6          	movff	postinc2,tblptrl
  4096  0010CC  CFDD FFF7          	movff	postdec2,tblptrh
  4097  0010D0                     	if	0	;tblptru may be non-zero
  4098  0010D0                     	endif
  4099  0010D0                     	if	0	;tblptru may be non-zero
  4100  0010D0                     	endif
  4101  0010D0  0008               	tblrd		*
  4102  0010D2  50F5               	movf	tablat,w,c
  4103  0010D4  0A25               	xorlw	37
  4104  0010D6  A4D8               	btfss	status,2,c
  4105  0010D8  EF70  F008         	goto	i2u190_41
  4106  0010DC  EF72  F008         	goto	i2u190_40
  4107  0010E0                     i2u190_41:
  4108  0010E0  EF89  F008         	goto	i2l2108
  4109  0010E4                     i2u190_40:
  4110  0010E4                     
  4111                           ; BSR set to: 0
  4112                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  4113  0010E4  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4114  0010E8  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4115  0010EC  2ADE               	incf	postinc2,f,c
  4116  0010EE  0E00               	movlw	0
  4117  0010F0  22DD               	addwfc	postdec2,f,c
  4118  0010F2                     
  4119                           ; BSR set to: 0
  4120                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1352:             fputc((int)'%
      +                          ', fp);
  4121  0010F2  0E00               	movlw	0
  4122  0010F4  6E08               	movwf	(i2fputc@c+1)^0,c
  4123  0010F6  0E25               	movlw	37
  4124  0010F8  6E07               	movwf	i2fputc@c^0,c
  4125  0010FA  C046  F009         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4126  0010FE  C047  F00A         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4127  001102  ECDD  F00D         	call	i2_fputc	;wreg free
  4128  001106                     i2l2104:
  4129                           
  4130                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1353:             return 1;
  4131  001106  0E00               	movlw	0
  4132  001108  6E47               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4133  00110A  0E01               	movlw	1
  4134  00110C  6E46               	movwf	?i2_vfpfcnvrt^0,c
  4135  00110E  EFB1  F008         	goto	i2l155
  4136  001112                     i2l2108:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4140  001112  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4141  001116  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4142  00111A  2ADE               	incf	postinc2,f,c
  4143  00111C  0E00               	movlw	0
  4144  00111E  22DD               	addwfc	postdec2,f,c
  4145  001120                     
  4146                           ; BSR set to: 0
  4147                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  4148  001120  0E00               	movlw	0
  4149  001122  6E47               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4150  001124  0E00               	movlw	0
  4151  001126  6E46               	movwf	?i2_vfpfcnvrt^0,c
  4152  001128  EFB1  F008         	goto	i2l155
  4153  00112C                     i2l2114:
  4154                           
  4155                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fmt)[0],
      +                           fp);
  4156  00112C  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4157  001130  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4158  001134  CFDE FFF6          	movff	postinc2,tblptrl
  4159  001138  CFDD FFF7          	movff	postdec2,tblptrh
  4160  00113C                     	if	0	;tblptru may be non-zero
  4161  00113C                     	endif
  4162  00113C                     	if	0	;tblptru may be non-zero
  4163  00113C                     	endif
  4164  00113C  0008               	tblrd		*
  4165  00113E  50F5               	movf	tablat,w,c
  4166  001140  6E07               	movwf	i2fputc@c^0,c
  4167  001142  6A08               	clrf	(i2fputc@c+1)^0,c
  4168  001144  C046  F009         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4169  001148  C047  F00A         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4170  00114C  ECDD  F00D         	call	i2_fputc	;wreg free
  4171  001150                     
  4172                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4173  001150  C048  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4174  001154  C049  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4175  001158  2ADE               	incf	postinc2,f,c
  4176  00115A  0E00               	movlw	0
  4177  00115C  22DD               	addwfc	postdec2,f,c
  4178  00115E  EF83  F008         	goto	i2l2104
  4179  001162                     i2l155:
  4180  001162  0012               	return		;funcret
  4181  001164                     __end_ofi2_vfpfcnvrt:
  4182                           	opt callstack 0
  4183                           
  4184 ;; *************** function i2_dtoa *****************
  4185 ;; Defined at:
  4186 ;;		line 274 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4189 ;;		 -> NULL(0), 
  4190 ;;  d               8   35[COMRAM] long long 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  dtoa            8   59[COMRAM] long long 
  4193 ;;  dtoa            2   67[COMRAM] int 
  4194 ;;  dtoa            2   57[COMRAM] int 
  4195 ;;  dtoa            2   55[COMRAM] int 
  4196 ;;  dtoa            2   53[COMRAM] int 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  2   33[COMRAM] int 
  4199 ;; Registers used:
  4200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4206 ;;      Params:        10       0       0       0       0       0       0       0       0
  4207 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4208 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4209 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4210 ;;Total ram usage:       36 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    7
  4213 ;; This function calls:
  4214 ;;		i2___aodiv
  4215 ;;		i2___aomod
  4216 ;;		i2_abs
  4217 ;;		i2_pad
  4218 ;; This function is called by:
  4219 ;;		i2_vfpfcnvrt
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text23
  4224  000B14                     __ptext23:
  4225                           	opt callstack 0
  4226  000B14                     i2_dtoa:
  4227                           	opt callstack 8
  4228  000B14                     
  4229                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FILE *fp, 
      +                          long long d);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 275: {;F:\Program F
      +                          iles\mplab\pic\sources\c99\common\doprnt.c: 276:     int i, p, s, w;;F:\Program Files\mp
      +                          lab\pic\sources\c99\common\doprnt.c: 277:     long long n;;F:\Program Files\mplab\pic\so
      +                          urces\c99\common\doprnt.c: 280:     n = d;
  4230  000B14  C024  F03C         	movff	i2dtoa@d,i2dtoa@n
  4231  000B18  C025  F03D         	movff	i2dtoa@d+1,i2dtoa@n+1
  4232  000B1C  C026  F03E         	movff	i2dtoa@d+2,i2dtoa@n+2
  4233  000B20  C027  F03F         	movff	i2dtoa@d+3,i2dtoa@n+3
  4234  000B24  C028  F040         	movff	i2dtoa@d+4,i2dtoa@n+4
  4235  000B28  C029  F041         	movff	i2dtoa@d+5,i2dtoa@n+5
  4236  000B2C  C02A  F042         	movff	i2dtoa@d+6,i2dtoa@n+6
  4237  000B30  C02B  F043         	movff	i2dtoa@d+7,i2dtoa@n+7
  4238  000B34                     
  4239                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 : 0;
  4240  000B34  BE43               	btfsc	(i2dtoa@n+7)^0,7,c
  4241  000B36  EF9F  F005         	goto	i2u168_41
  4242  000B3A  EFA2  F005         	goto	i2u168_40
  4243  000B3E                     i2u168_41:
  4244  000B3E  0E01               	movlw	1
  4245  000B40  EFA3  F005         	goto	i2u169_40
  4246  000B44                     i2u168_40:
  4247  000B44  0E00               	movlw	0
  4248  000B46                     i2u169_40:
  4249  000B46  6E3A               	movwf	i2dtoa@s^0,c
  4250  000B48  6A3B               	clrf	(i2dtoa@s+1)^0,c
  4251                           
  4252                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  4253  000B4A  503A               	movf	i2dtoa@s^0,w,c
  4254  000B4C  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4255  000B4E  B4D8               	btfsc	status,2,c
  4256  000B50  EFAC  F005         	goto	i2u170_41
  4257  000B54  EFAE  F005         	goto	i2u170_40
  4258  000B58                     i2u170_41:
  4259  000B58  EFBE  F005         	goto	i2l1982
  4260  000B5C                     i2u170_40:
  4261  000B5C                     
  4262                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  4263  000B5C  1E43               	comf	(i2dtoa@n+7)^0,f,c
  4264  000B5E  1E42               	comf	(i2dtoa@n+6)^0,f,c
  4265  000B60  1E41               	comf	(i2dtoa@n+5)^0,f,c
  4266  000B62  1E40               	comf	(i2dtoa@n+4)^0,f,c
  4267  000B64  1E3F               	comf	(i2dtoa@n+3)^0,f,c
  4268  000B66  1E3E               	comf	(i2dtoa@n+2)^0,f,c
  4269  000B68  1E3D               	comf	(i2dtoa@n+1)^0,f,c
  4270  000B6A  6C3C               	negf	i2dtoa@n^0,c
  4271  000B6C  0E00               	movlw	0
  4272  000B6E  223D               	addwfc	(i2dtoa@n+1)^0,f,c
  4273  000B70  223E               	addwfc	(i2dtoa@n+2)^0,f,c
  4274  000B72  223F               	addwfc	(i2dtoa@n+3)^0,f,c
  4275  000B74  2240               	addwfc	(i2dtoa@n+4)^0,f,c
  4276  000B76  2241               	addwfc	(i2dtoa@n+5)^0,f,c
  4277  000B78  2242               	addwfc	(i2dtoa@n+6)^0,f,c
  4278  000B7A  2243               	addwfc	(i2dtoa@n+7)^0,f,c
  4279  000B7C                     i2l1982:
  4280                           
  4281                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0)) {
  4282  000B7C  0100               	movlb	0	; () banked
  4283  000B7E  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  4284  000B80  EFC4  F005         	goto	i2u171_41
  4285  000B84  EFC6  F005         	goto	i2u171_40
  4286  000B88                     i2u171_41:
  4287  000B88  EFC7  F005         	goto	i2l1986
  4288  000B8C                     i2u171_40:
  4289  000B8C                     
  4290                           ; BSR set to: 0
  4291                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 288:         flags &= ~(1 << 1)
      +                          ;
  4292  000B8C  93DB               	bcf	_flags& (0+255),1,b
  4293  000B8E                     i2l1986:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec) ? prec 
      +                          : 1;
  4297  000B8E  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  4298  000B90  EFD4  F005         	goto	i2u172_40
  4299  000B94  51DA               	movf	(_prec+1)& (0+255),w,b
  4300  000B96  E106               	bnz	i2u172_41
  4301  000B98  05D9               	decf	_prec& (0+255),w,b
  4302  000B9A  B0D8               	btfsc	status,0,c
  4303  000B9C  EFD2  F005         	goto	i2u172_41
  4304  000BA0  EFD4  F005         	goto	i2u172_40
  4305  000BA4                     i2u172_41:
  4306  000BA4  EFDA  F005         	goto	i2l128
  4307  000BA8                     i2u172_40:
  4308  000BA8                     
  4309                           ; BSR set to: 0
  4310  000BA8  0E00               	movlw	0
  4311  000BAA  6E37               	movwf	(i2dtoa@p+1)^0,c
  4312  000BAC  0E01               	movlw	1
  4313  000BAE  6E36               	movwf	i2dtoa@p^0,c
  4314  000BB0  EFDE  F005         	goto	i2l130
  4315  000BB4                     i2l128:
  4316                           
  4317                           ; BSR set to: 0
  4318  000BB4  C0D9  F036         	movff	_prec,i2dtoa@p
  4319  000BB8  C0DA  F037         	movff	_prec+1,i2dtoa@p+1
  4320  000BBC                     i2l130:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 291:     w = width;
  4324  000BBC  C0D7  F038         	movff	_width,i2dtoa@w
  4325  000BC0  C0D8  F039         	movff	_width+1,i2dtoa@w+1
  4326  000BC4                     
  4327                           ; BSR set to: 0
  4328                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 292:     if (s || (flags & (1 <
      +                          < 2))) {
  4329  000BC4  503A               	movf	i2dtoa@s^0,w,c
  4330  000BC6  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4331  000BC8  A4D8               	btfss	status,2,c
  4332  000BCA  EFE9  F005         	goto	i2u173_41
  4333  000BCE  EFEB  F005         	goto	i2u173_40
  4334  000BD2                     i2u173_41:
  4335  000BD2  EFF2  F005         	goto	i2l1994
  4336  000BD6                     i2u173_40:
  4337  000BD6                     
  4338                           ; BSR set to: 0
  4339  000BD6  A5DB               	btfss	_flags& (0+255),2,b
  4340  000BD8  EFF0  F005         	goto	i2u174_41
  4341  000BDC  EFF2  F005         	goto	i2u174_40
  4342  000BE0                     i2u174_41:
  4343  000BE0  EFF5  F005         	goto	i2l1996
  4344  000BE4                     i2u174_40:
  4345  000BE4                     i2l1994:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 293:         --w;
  4349  000BE4  0638               	decf	i2dtoa@w^0,f,c
  4350  000BE6  A0D8               	btfss	status,0,c
  4351  000BE8  0639               	decf	(i2dtoa@w+1)^0,f,c
  4352  000BEA                     i2l1996:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbuf) - 1;
  4356  000BEA  0E00               	movlw	0
  4357  000BEC  6E45               	movwf	(i2dtoa@i+1)^0,c
  4358  000BEE  0E1F               	movlw	31
  4359  000BF0  6E44               	movwf	i2dtoa@i^0,c
  4360  000BF2                     
  4361                           ; BSR set to: 0
  4362                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0';
  4363  000BF2  0E00               	movlw	0
  4364  000BF4  0101               	movlb	1	; () banked
  4365  000BF6  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4366                           
  4367                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n 
      +                          || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4368  000BF8  EF7A  F006         	goto	i2l2010
  4369  000BFC                     i2l2000:
  4370                           
  4371                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 300:         --i;
  4372  000BFC  0644               	decf	i2dtoa@i^0,f,c
  4373  000BFE  A0D8               	btfss	status,0,c
  4374  000C00  0645               	decf	(i2dtoa@i+1)^0,f,c
  4375  000C02                     
  4376                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = '0' + ab
      +                          s(n % 10);
  4377  000C02  0E00               	movlw	low _dbuf
  4378  000C04  2444               	addwf	i2dtoa@i^0,w,c
  4379  000C06  6ED9               	movwf	fsr2l,c
  4380  000C08  0E01               	movlw	high _dbuf
  4381  000C0A  2045               	addwfc	(i2dtoa@i+1)^0,w,c
  4382  000C0C  6EDA               	movwf	fsr2h,c
  4383  000C0E  C03C  F001         	movff	i2dtoa@n,i2___aomod@dividend
  4384  000C12  C03D  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  4385  000C16  C03E  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  4386  000C1A  C03F  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  4387  000C1E  C040  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  4388  000C22  C041  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  4389  000C26  C042  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  4390  000C2A  C043  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  4391  000C2E  0E0A               	movlw	10
  4392  000C30  6E09               	movwf	i2___aomod@divisor^0,c
  4393  000C32  0E00               	movlw	0
  4394  000C34  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  4395  000C36  0E00               	movlw	0
  4396  000C38  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  4397  000C3A  0E00               	movlw	0
  4398  000C3C  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  4399  000C3E  0E00               	movlw	0
  4400  000C40  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  4401  000C42  0E00               	movlw	0
  4402  000C44  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  4403  000C46  0E00               	movlw	0
  4404  000C48  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  4405  000C4A  0E00               	movlw	0
  4406  000C4C  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  4407  000C4E  ECBF  F00B         	call	i2___aomod	;wreg free
  4408  000C52  C001  F02C         	movff	?i2___aomod,??i2_dtoa
  4409  000C56  C002  F02D         	movff	?i2___aomod+1,??i2_dtoa+1
  4410  000C5A  C003  F02E         	movff	?i2___aomod+2,??i2_dtoa+2
  4411  000C5E  C004  F02F         	movff	?i2___aomod+3,??i2_dtoa+3
  4412  000C62  C005  F030         	movff	?i2___aomod+4,??i2_dtoa+4
  4413  000C66  C006  F031         	movff	?i2___aomod+5,??i2_dtoa+5
  4414  000C6A  C007  F032         	movff	?i2___aomod+6,??i2_dtoa+6
  4415  000C6E  C008  F033         	movff	?i2___aomod+7,??i2_dtoa+7
  4416  000C72  C02C  F013         	movff	??i2_dtoa,i2abs@a
  4417  000C76  C02E  F014         	movff	??i2_dtoa+2,i2abs@a+1
  4418  000C7A  EC08  F010         	call	i2_abs	;wreg free
  4419  000C7E  5013               	movf	?i2_abs^0,w,c
  4420  000C80  0F30               	addlw	48
  4421  000C82  6EDF               	movwf	indf2,c
  4422  000C84                     
  4423                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 302:         --p;
  4424  000C84  0636               	decf	i2dtoa@p^0,f,c
  4425  000C86  A0D8               	btfss	status,0,c
  4426  000C88  0637               	decf	(i2dtoa@p+1)^0,f,c
  4427  000C8A                     
  4428                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 303:         --w;
  4429  000C8A  0638               	decf	i2dtoa@w^0,f,c
  4430  000C8C  A0D8               	btfss	status,0,c
  4431  000C8E  0639               	decf	(i2dtoa@w+1)^0,f,c
  4432  000C90                     
  4433                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 304:         n = n / 10;
  4434  000C90  C03C  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  4435  000C94  C03D  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  4436  000C98  C03E  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  4437  000C9C  C03F  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  4438  000CA0  C040  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  4439  000CA4  C041  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  4440  000CA8  C042  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  4441  000CAC  C043  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  4442  000CB0  0E0A               	movlw	10
  4443  000CB2  6E09               	movwf	i2___aodiv@divisor^0,c
  4444  000CB4  0E00               	movlw	0
  4445  000CB6  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  4446  000CB8  0E00               	movlw	0
  4447  000CBA  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  4448  000CBC  0E00               	movlw	0
  4449  000CBE  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  4450  000CC0  0E00               	movlw	0
  4451  000CC2  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  4452  000CC4  0E00               	movlw	0
  4453  000CC6  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  4454  000CC8  0E00               	movlw	0
  4455  000CCA  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  4456  000CCC  0E00               	movlw	0
  4457  000CCE  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  4458  000CD0  EC48  F00A         	call	i2___aodiv	;wreg free
  4459  000CD4  C001  F03C         	movff	?i2___aodiv,i2dtoa@n
  4460  000CD8  C002  F03D         	movff	?i2___aodiv+1,i2dtoa@n+1
  4461  000CDC  C003  F03E         	movff	?i2___aodiv+2,i2dtoa@n+2
  4462  000CE0  C004  F03F         	movff	?i2___aodiv+3,i2dtoa@n+3
  4463  000CE4  C005  F040         	movff	?i2___aodiv+4,i2dtoa@n+4
  4464  000CE8  C006  F041         	movff	?i2___aodiv+5,i2dtoa@n+5
  4465  000CEC  C007  F042         	movff	?i2___aodiv+6,i2dtoa@n+6
  4466  000CF0  C008  F043         	movff	?i2___aodiv+7,i2dtoa@n+7
  4467  000CF4                     i2l2010:
  4468                           
  4469                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n 
      +                          || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4470  000CF4  BE45               	btfsc	(i2dtoa@i+1)^0,7,c
  4471  000CF6  EF85  F006         	goto	i2u175_41
  4472  000CFA  5045               	movf	(i2dtoa@i+1)^0,w,c
  4473  000CFC  E108               	bnz	i2u175_40
  4474  000CFE  0444               	decf	i2dtoa@i^0,w,c
  4475  000D00  A0D8               	btfss	status,0,c
  4476  000D02  EF85  F006         	goto	i2u175_41
  4477  000D06  EF87  F006         	goto	i2u175_40
  4478  000D0A                     i2u175_41:
  4479  000D0A  EFB8  F006         	goto	i2l2020
  4480  000D0E                     i2u175_40:
  4481  000D0E  503C               	movf	i2dtoa@n^0,w,c
  4482  000D10  103D               	iorwf	(i2dtoa@n+1)^0,w,c
  4483  000D12  103E               	iorwf	(i2dtoa@n+2)^0,w,c
  4484  000D14  103F               	iorwf	(i2dtoa@n+3)^0,w,c
  4485  000D16  1040               	iorwf	(i2dtoa@n+4)^0,w,c
  4486  000D18  1041               	iorwf	(i2dtoa@n+5)^0,w,c
  4487  000D1A  1042               	iorwf	(i2dtoa@n+6)^0,w,c
  4488  000D1C  1043               	iorwf	(i2dtoa@n+7)^0,w,c
  4489  000D1E  A4D8               	btfss	status,2,c
  4490  000D20  EF94  F006         	goto	i2u176_41
  4491  000D24  EF96  F006         	goto	i2u176_40
  4492  000D28                     i2u176_41:
  4493  000D28  EFFE  F005         	goto	i2l2000
  4494  000D2C                     i2u176_40:
  4495  000D2C  BE37               	btfsc	(i2dtoa@p+1)^0,7,c
  4496  000D2E  EFA3  F006         	goto	i2u177_40
  4497  000D32  5037               	movf	(i2dtoa@p+1)^0,w,c
  4498  000D34  E106               	bnz	i2u177_41
  4499  000D36  0436               	decf	i2dtoa@p^0,w,c
  4500  000D38  B0D8               	btfsc	status,0,c
  4501  000D3A  EFA1  F006         	goto	i2u177_41
  4502  000D3E  EFA3  F006         	goto	i2u177_40
  4503  000D42                     i2u177_41:
  4504  000D42  EFFE  F005         	goto	i2l2000
  4505  000D46                     i2u177_40:
  4506  000D46  BE39               	btfsc	(i2dtoa@w+1)^0,7,c
  4507  000D48  EFAE  F006         	goto	i2u178_41
  4508  000D4C  5039               	movf	(i2dtoa@w+1)^0,w,c
  4509  000D4E  E108               	bnz	i2u178_40
  4510  000D50  0438               	decf	i2dtoa@w^0,w,c
  4511  000D52  A0D8               	btfss	status,0,c
  4512  000D54  EFAE  F006         	goto	i2u178_41
  4513  000D58  EFB0  F006         	goto	i2u178_40
  4514  000D5C                     i2u178_41:
  4515  000D5C  EFB8  F006         	goto	i2l2020
  4516  000D60                     i2u178_40:
  4517  000D60  0100               	movlb	0	; () banked
  4518  000D62  B3DB               	btfsc	_flags& (0+255),1,b
  4519  000D64  EFB6  F006         	goto	i2u179_41
  4520  000D68  EFB8  F006         	goto	i2u179_40
  4521  000D6C                     i2u179_41:
  4522  000D6C  EFFE  F005         	goto	i2l2000
  4523  000D70                     i2u179_40:
  4524  000D70                     i2l2020:
  4525                           
  4526                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 308:     if (s || (flags & (1 <
      +                          < 2))) {
  4527  000D70  503A               	movf	i2dtoa@s^0,w,c
  4528  000D72  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4529  000D74  A4D8               	btfss	status,2,c
  4530  000D76  EFBF  F006         	goto	i2u180_41
  4531  000D7A  EFC1  F006         	goto	i2u180_40
  4532  000D7E                     i2u180_41:
  4533  000D7E  EFC9  F006         	goto	i2l2024
  4534  000D82                     i2u180_40:
  4535  000D82  0100               	movlb	0	; () banked
  4536  000D84  A5DB               	btfss	_flags& (0+255),2,b
  4537  000D86  EFC7  F006         	goto	i2u181_41
  4538  000D8A  EFC9  F006         	goto	i2u181_40
  4539  000D8E                     i2u181_41:
  4540  000D8E  EFE7  F006         	goto	i2l2034
  4541  000D92                     i2u181_40:
  4542  000D92                     i2l2024:
  4543                           
  4544                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 309:         --i;
  4545  000D92  0644               	decf	i2dtoa@i^0,f,c
  4546  000D94  A0D8               	btfss	status,0,c
  4547  000D96  0645               	decf	(i2dtoa@i+1)^0,f,c
  4548  000D98                     
  4549                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = s ? '-' 
      +                          : '+';
  4550  000D98  503A               	movf	i2dtoa@s^0,w,c
  4551  000D9A  103B               	iorwf	(i2dtoa@s+1)^0,w,c
  4552  000D9C  A4D8               	btfss	status,2,c
  4553  000D9E  EFD3  F006         	goto	i2u182_41
  4554  000DA2  EFD5  F006         	goto	i2u182_40
  4555  000DA6                     i2u182_41:
  4556  000DA6  EFDB  F006         	goto	i2l2030
  4557  000DAA                     i2u182_40:
  4558  000DAA  0E00               	movlw	0
  4559  000DAC  6E35               	movwf	(i2_dtoa$490+1)^0,c
  4560  000DAE  0E2B               	movlw	43
  4561  000DB0  6E34               	movwf	i2_dtoa$490^0,c
  4562  000DB2  EFDF  F006         	goto	i2l2032
  4563  000DB6                     i2l2030:
  4564  000DB6  0E00               	movlw	0
  4565  000DB8  6E35               	movwf	(i2_dtoa$490+1)^0,c
  4566  000DBA  0E2D               	movlw	45
  4567  000DBC  6E34               	movwf	i2_dtoa$490^0,c
  4568  000DBE                     i2l2032:
  4569  000DBE  0E00               	movlw	low _dbuf
  4570  000DC0  2444               	addwf	i2dtoa@i^0,w,c
  4571  000DC2  6ED9               	movwf	fsr2l,c
  4572  000DC4  0E01               	movlw	high _dbuf
  4573  000DC6  2045               	addwfc	(i2dtoa@i+1)^0,w,c
  4574  000DC8  6EDA               	movwf	fsr2h,c
  4575  000DCA  C034  FFDF         	movff	i2_dtoa$490,indf2
  4576  000DCE                     i2l2034:
  4577                           
  4578                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 314:     return pad(fp, &dbuf[i
      +                          ], w);
  4579  000DCE  C022  F017         	movff	i2dtoa@fp,i2pad@fp
  4580  000DD2  C023  F018         	movff	i2dtoa@fp+1,i2pad@fp+1
  4581  000DD6  0E00               	movlw	low _dbuf
  4582  000DD8  2444               	addwf	i2dtoa@i^0,w,c
  4583  000DDA  6E19               	movwf	i2pad@buf^0,c
  4584  000DDC  0E01               	movlw	high _dbuf
  4585  000DDE  2045               	addwfc	(i2dtoa@i+1)^0,w,c
  4586  000DE0  6E1A               	movwf	(i2pad@buf+1)^0,c
  4587  000DE2  C038  F01B         	movff	i2dtoa@w,i2pad@p
  4588  000DE6  C039  F01C         	movff	i2dtoa@w+1,i2pad@p+1
  4589  000DEA  ECD6  F00C         	call	i2_pad	;wreg free
  4590  000DEE  C017  F022         	movff	?i2_pad,?i2_dtoa
  4591  000DF2  C018  F023         	movff	?i2_pad+1,?i2_dtoa+1
  4592  000DF6  0012               	return		;funcret
  4593  000DF8                     __end_ofi2_dtoa:
  4594                           	opt callstack 0
  4595                           
  4596 ;; *************** function i2_pad *****************
  4597 ;; Defined at:
  4598 ;;		line 72 in file "F:\Program Files\mplab\pic\sources\c99\common\doprnt.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4601 ;;		 -> NULL(0), 
  4602 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4603 ;;		 -> dbuf(32), 
  4604 ;;  p               2   26[COMRAM] int 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  pad             2   31[COMRAM] int 
  4607 ;;  pad             2   29[COMRAM] int 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  2   22[COMRAM] int 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4617 ;;      Params:         6       0       0       0       0       0       0       0       0
  4618 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4619 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4620 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4621 ;;Total ram usage:       11 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    6
  4624 ;; This function calls:
  4625 ;;		i2_fputc
  4626 ;;		i2_fputs
  4627 ;;		i2_strlen
  4628 ;; This function is called by:
  4629 ;;		i2_dtoa
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text24
  4634  0019AC                     __ptext24:
  4635                           	opt callstack 0
  4636  0019AC                     i2_pad:
  4637                           	opt callstack 8
  4638  0019AC                     
  4639                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, ch
      +                          ar *buf, int p);F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 73: {;F:\Program
      +                           Files\mplab\pic\sources\c99\common\doprnt.c: 74:     int i, w;;F:\Program Files\mplab\p
      +                          ic\sources\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4640  0019AC  0100               	movlb	0	; () banked
  4641  0019AE  A1DB               	btfss	_flags& (0+255),0,b
  4642  0019B0  EFDC  F00C         	goto	i2u135_41
  4643  0019B4  EFDE  F00C         	goto	i2u135_40
  4644  0019B8                     i2u135_41:
  4645  0019B8  EFE8  F00C         	goto	i2l1812
  4646  0019BC                     i2u135_40:
  4647  0019BC                     
  4648                           ; BSR set to: 0
  4649                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *
      +                          )buf, fp);
  4650  0019BC  C019  F010         	movff	i2pad@buf,i2fputs@s
  4651  0019C0  C01A  F011         	movff	i2pad@buf+1,i2fputs@s+1
  4652  0019C4  C017  F012         	movff	i2pad@fp,i2fputs@fp
  4653  0019C8  C018  F013         	movff	i2pad@fp+1,i2fputs@fp+1
  4654  0019CC  ECA4  F00F         	call	i2_fputs	;wreg free
  4655  0019D0                     i2l1812:
  4656                           
  4657                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4658  0019D0  BE1C               	btfsc	(i2pad@p+1)^0,7,c
  4659  0019D2  EFED  F00C         	goto	i2u136_41
  4660  0019D6  EFEF  F00C         	goto	i2u136_40
  4661  0019DA                     i2u136_41:
  4662  0019DA  EFF5  F00C         	goto	i2l1816
  4663  0019DE                     i2u136_40:
  4664  0019DE  C01B  F020         	movff	i2pad@p,i2pad@w
  4665  0019E2  C01C  F021         	movff	i2pad@p+1,i2pad@w+1
  4666  0019E6  EFF9  F00C         	goto	i2l117
  4667  0019EA                     i2l1816:
  4668  0019EA  0E00               	movlw	0
  4669  0019EC  6E21               	movwf	(i2pad@w+1)^0,c
  4670  0019EE  0E00               	movlw	0
  4671  0019F0  6E20               	movwf	i2pad@w^0,c
  4672  0019F2                     i2l117:
  4673                           
  4674                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4675  0019F2  0E00               	movlw	0
  4676  0019F4  6E1F               	movwf	(i2pad@i+1)^0,c
  4677  0019F6  0E00               	movlw	0
  4678  0019F8  6E1E               	movwf	i2pad@i^0,c
  4679                           
  4680                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  4681  0019FA  EF0B  F00D         	goto	i2l1822
  4682  0019FE                     i2l1818:
  4683                           
  4684                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  4685  0019FE  0E00               	movlw	0
  4686  001A00  6E08               	movwf	(i2fputc@c+1)^0,c
  4687  001A02  0E20               	movlw	32
  4688  001A04  6E07               	movwf	i2fputc@c^0,c
  4689  001A06  C017  F009         	movff	i2pad@fp,i2fputc@fp
  4690  001A0A  C018  F00A         	movff	i2pad@fp+1,i2fputc@fp+1
  4691  001A0E  ECDD  F00D         	call	i2_fputc	;wreg free
  4692  001A12                     
  4693                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4694  001A12  4A1E               	infsnz	i2pad@i^0,f,c
  4695  001A14  2A1F               	incf	(i2pad@i+1)^0,f,c
  4696  001A16                     i2l1822:
  4697                           
  4698                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  4699  001A16  5020               	movf	i2pad@w^0,w,c
  4700  001A18  5C1E               	subwf	i2pad@i^0,w,c
  4701  001A1A  501F               	movf	(i2pad@i+1)^0,w,c
  4702  001A1C  0A80               	xorlw	128
  4703  001A1E  6E1D               	movwf	??i2_pad^0,c
  4704  001A20  5021               	movf	(i2pad@w+1)^0,w,c
  4705  001A22  0A80               	xorlw	128
  4706  001A24  581D               	subwfb	??i2_pad^0,w,c
  4707  001A26  A0D8               	btfss	status,0,c
  4708  001A28  EF18  F00D         	goto	i2u137_41
  4709  001A2C  EF1A  F00D         	goto	i2u137_40
  4710  001A30                     i2u137_41:
  4711  001A30  EFFF  F00C         	goto	i2l1818
  4712  001A34                     i2u137_40:
  4713  001A34                     
  4714                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))
      +                          ) {
  4715  001A34  0100               	movlb	0	; () banked
  4716  001A36  B1DB               	btfsc	_flags& (0+255),0,b
  4717  001A38  EF20  F00D         	goto	i2u138_41
  4718  001A3C  EF22  F00D         	goto	i2u138_40
  4719  001A40                     i2u138_41:
  4720  001A40  EF2C  F00D         	goto	i2l1826
  4721  001A44                     i2u138_40:
  4722  001A44                     
  4723                           ; BSR set to: 0
  4724                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *
      +                          )buf, fp);
  4725  001A44  C019  F010         	movff	i2pad@buf,i2fputs@s
  4726  001A48  C01A  F011         	movff	i2pad@buf+1,i2fputs@s+1
  4727  001A4C  C017  F012         	movff	i2pad@fp,i2fputs@fp
  4728  001A50  C018  F013         	movff	i2pad@fp+1,i2fputs@fp+1
  4729  001A54  ECA4  F00F         	call	i2_fputs	;wreg free
  4730  001A58                     i2l1826:
  4731                           
  4732                           ;F:\Program Files\mplab\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf) + w;
  4733  001A58  C019  F001         	movff	i2pad@buf,i2strlen@s
  4734  001A5C  C01A  F002         	movff	i2pad@buf+1,i2strlen@s+1
  4735  001A60  EC45  F010         	call	i2_strlen	;wreg free
  4736  001A64  5020               	movf	i2pad@w^0,w,c
  4737  001A66  2401               	addwf	?i2_strlen^0,w,c
  4738  001A68  6E17               	movwf	?i2_pad^0,c
  4739  001A6A  5021               	movf	(i2pad@w+1)^0,w,c
  4740  001A6C  2002               	addwfc	(?i2_strlen+1)^0,w,c
  4741  001A6E  6E18               	movwf	(?i2_pad+1)^0,c
  4742  001A70  0012               	return		;funcret
  4743  001A72                     __end_ofi2_pad:
  4744                           	opt callstack 0
  4745                           
  4746 ;; *************** function i2_strlen *****************
  4747 ;; Defined at:
  4748 ;;		line 5 in file "F:\Program Files\mplab\pic\sources\c99\common\strlen.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4751 ;;		 -> dbuf(32), 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  4754 ;;		 -> dbuf(32), 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  2    0[COMRAM] unsigned int 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4764 ;;      Params:         2       0       0       0       0       0       0       0       0
  4765 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4767 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4768 ;;Total ram usage:        4 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		i2_pad
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text25
  4778  00208A                     __ptext25:
  4779                           	opt callstack 0
  4780  00208A                     i2_strlen:
  4781                           	opt callstack 13
  4782  00208A  C001  F003         	movff	i2strlen@s,i2strlen@a
  4783  00208E  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  4784  002092  EF4D  F010         	goto	i2l1696
  4785  002096                     i2l1694:
  4786  002096  4A01               	infsnz	i2strlen@s^0,f,c
  4787  002098  2A02               	incf	(i2strlen@s+1)^0,f,c
  4788  00209A                     i2l1696:
  4789  00209A  C001  FFD9         	movff	i2strlen@s,fsr2l
  4790  00209E  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  4791  0020A2  50DF               	movf	indf2,w,c
  4792  0020A4  A4D8               	btfss	status,2,c
  4793  0020A6  EF57  F010         	goto	i2u116_41
  4794  0020AA  EF59  F010         	goto	i2u116_40
  4795  0020AE                     i2u116_41:
  4796  0020AE  EF4B  F010         	goto	i2l1694
  4797  0020B2                     i2u116_40:
  4798  0020B2  5003               	movf	i2strlen@a^0,w,c
  4799  0020B4  5C01               	subwf	i2strlen@s^0,w,c
  4800  0020B6  6E01               	movwf	?i2_strlen^0,c
  4801  0020B8  5004               	movf	(i2strlen@a+1)^0,w,c
  4802  0020BA  5802               	subwfb	(i2strlen@s+1)^0,w,c
  4803  0020BC  6E02               	movwf	(?i2_strlen+1)^0,c
  4804  0020BE  0012               	return		;funcret
  4805  0020C0                     __end_ofi2_strlen:
  4806                           	opt callstack 0
  4807                           
  4808 ;; *************** function i2_fputs *****************
  4809 ;; Defined at:
  4810 ;;		line 8 in file "F:\Program Files\mplab\pic\sources\c99\common\nf_fputs.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4813 ;;		 -> dbuf(32), 
  4814 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4815 ;;		 -> NULL(0), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  fputs           2   20[COMRAM] int 
  4818 ;;  fputs           1   19[COMRAM] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  2   15[COMRAM] int 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4828 ;;      Params:         4       0       0       0       0       0       0       0       0
  4829 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4831 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4832 ;;Total ram usage:        7 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    5
  4835 ;; This function calls:
  4836 ;;		i2_fputc
  4837 ;; This function is called by:
  4838 ;;		i2_pad
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text26
  4843  001F48                     __ptext26:
  4844                           	opt callstack 0
  4845  001F48                     i2_fputs:
  4846                           	opt callstack 8
  4847  001F48  0E00               	movlw	0
  4848  001F4A  6E16               	movwf	(i2fputs@i+1)^0,c
  4849  001F4C  0E00               	movlw	0
  4850  001F4E  6E15               	movwf	i2fputs@i^0,c
  4851  001F50  EFB5  F00F         	goto	i2l1690
  4852  001F54                     i2l1686:
  4853  001F54  C014  F007         	movff	i2fputs@c,i2fputc@c
  4854  001F58  6A08               	clrf	(i2fputc@c+1)^0,c
  4855  001F5A  C012  F009         	movff	i2fputs@fp,i2fputc@fp
  4856  001F5E  C013  F00A         	movff	i2fputs@fp+1,i2fputc@fp+1
  4857  001F62  ECDD  F00D         	call	i2_fputc	;wreg free
  4858  001F66  4A15               	infsnz	i2fputs@i^0,f,c
  4859  001F68  2A16               	incf	(i2fputs@i+1)^0,f,c
  4860  001F6A                     i2l1690:
  4861  001F6A  5015               	movf	i2fputs@i^0,w,c
  4862  001F6C  2410               	addwf	i2fputs@s^0,w,c
  4863  001F6E  6ED9               	movwf	fsr2l,c
  4864  001F70  5016               	movf	(i2fputs@i+1)^0,w,c
  4865  001F72  2011               	addwfc	(i2fputs@s+1)^0,w,c
  4866  001F74  6EDA               	movwf	fsr2h,c
  4867  001F76  50DF               	movf	indf2,w,c
  4868  001F78  6E14               	movwf	i2fputs@c^0,c
  4869  001F7A  5014               	movf	i2fputs@c^0,w,c
  4870  001F7C  A4D8               	btfss	status,2,c
  4871  001F7E  EFC3  F00F         	goto	i2u115_41
  4872  001F82  EFC5  F00F         	goto	i2u115_40
  4873  001F86                     i2u115_41:
  4874  001F86  EFAA  F00F         	goto	i2l1686
  4875  001F8A                     i2u115_40:
  4876  001F8A  0012               	return		;funcret
  4877  001F8C                     __end_ofi2_fputs:
  4878                           	opt callstack 0
  4879                           
  4880 ;; *************** function i2_fputc *****************
  4881 ;; Defined at:
  4882 ;;		line 8 in file "F:\Program Files\mplab\pic\sources\c99\common\nf_fputc.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  c               2    6[COMRAM] int 
  4885 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4886 ;;		 -> NULL(0), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2    6[COMRAM] int 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4898 ;;      Params:         4       0       0       0       0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4900 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4901 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4902 ;;Total ram usage:        9 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    4
  4905 ;; This function calls:
  4906 ;;		i2_putch
  4907 ;; This function is called by:
  4908 ;;		i2_pad
  4909 ;;		i2_vfpfcnvrt
  4910 ;;		i2_fputs
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text27
  4915  001BBA                     __ptext27:
  4916                           	opt callstack 0
  4917  001BBA                     i2_fputc:
  4918                           	opt callstack 11
  4919  001BBA  5009               	movf	i2fputc@fp^0,w,c
  4920  001BBC  100A               	iorwf	(i2fputc@fp+1)^0,w,c
  4921  001BBE  B4D8               	btfsc	status,2,c
  4922  001BC0  EFE4  F00D         	goto	i2u109_41
  4923  001BC4  EFE6  F00D         	goto	i2u109_40
  4924  001BC8                     i2u109_41:
  4925  001BC8  EFEF  F00D         	goto	i2l1656
  4926  001BCC                     i2u109_40:
  4927  001BCC  5009               	movf	i2fputc@fp^0,w,c
  4928  001BCE  100A               	iorwf	(i2fputc@fp+1)^0,w,c
  4929  001BD0  A4D8               	btfss	status,2,c
  4930  001BD2  EFED  F00D         	goto	i2u110_41
  4931  001BD6  EFEF  F00D         	goto	i2u110_40
  4932  001BDA                     i2u110_41:
  4933  001BDA  EFF4  F00D         	goto	i2l1658
  4934  001BDE                     i2u110_40:
  4935  001BDE                     i2l1656:
  4936  001BDE  5007               	movf	i2fputc@c^0,w,c
  4937  001BE0  ECFC  F010         	call	i2_putch
  4938  001BE4  EF27  F00E         	goto	i2l855
  4939  001BE8                     i2l1658:
  4940  001BE8  EE20 F004          	lfsr	2,4
  4941  001BEC  5009               	movf	i2fputc@fp^0,w,c
  4942  001BEE  26D9               	addwf	fsr2l,f,c
  4943  001BF0  500A               	movf	(i2fputc@fp+1)^0,w,c
  4944  001BF2  22DA               	addwfc	fsr2h,f,c
  4945  001BF4  50DE               	movf	postinc2,w,c
  4946  001BF6  10DE               	iorwf	postinc2,w,c
  4947  001BF8  B4D8               	btfsc	status,2,c
  4948  001BFA  EF01  F00E         	goto	i2u111_41
  4949  001BFE  EF03  F00E         	goto	i2u111_40
  4950  001C02                     i2u111_41:
  4951  001C02  EF1E  F00E         	goto	i2l1662
  4952  001C06                     i2u111_40:
  4953  001C06  EE20 F004          	lfsr	2,4
  4954  001C0A  5009               	movf	i2fputc@fp^0,w,c
  4955  001C0C  26D9               	addwf	fsr2l,f,c
  4956  001C0E  500A               	movf	(i2fputc@fp+1)^0,w,c
  4957  001C10  22DA               	addwfc	fsr2h,f,c
  4958  001C12  EE10 F002          	lfsr	1,2
  4959  001C16  5009               	movf	i2fputc@fp^0,w,c
  4960  001C18  26E1               	addwf	fsr1l,f,c
  4961  001C1A  500A               	movf	(i2fputc@fp+1)^0,w,c
  4962  001C1C  22E2               	addwfc	fsr1h,f,c
  4963  001C1E  50DE               	movf	postinc2,w,c
  4964  001C20  5CE6               	subwf	postinc1,w,c
  4965  001C22  50E6               	movf	postinc1,w,c
  4966  001C24  0A80               	xorlw	128
  4967  001C26  6E0F               	movwf	(??i2_fputc+4)^0,c
  4968  001C28  50DE               	movf	postinc2,w,c
  4969  001C2A  0A80               	xorlw	128
  4970  001C2C  580F               	subwfb	(??i2_fputc+4)^0,w,c
  4971  001C2E  B0D8               	btfsc	status,0,c
  4972  001C30  EF1C  F00E         	goto	i2u112_41
  4973  001C34  EF1E  F00E         	goto	i2u112_40
  4974  001C38                     i2u112_41:
  4975  001C38  EF27  F00E         	goto	i2l855
  4976  001C3C                     i2u112_40:
  4977  001C3C                     i2l1662:
  4978  001C3C  EE20 F002          	lfsr	2,2
  4979  001C40  5009               	movf	i2fputc@fp^0,w,c
  4980  001C42  26D9               	addwf	fsr2l,f,c
  4981  001C44  500A               	movf	(i2fputc@fp+1)^0,w,c
  4982  001C46  22DA               	addwfc	fsr2h,f,c
  4983  001C48  2ADE               	incf	postinc2,f,c
  4984  001C4A  0E00               	movlw	0
  4985  001C4C  22DD               	addwfc	postdec2,f,c
  4986  001C4E                     i2l855:
  4987  001C4E  0012               	return		;funcret
  4988  001C50                     __end_ofi2_fputc:
  4989                           	opt callstack 0
  4990                           
  4991 ;; *************** function i2_putch *****************
  4992 ;; Defined at:
  4993 ;;		line 79 in file "newmain.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  data            1    wreg     unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  data            1    5[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0
  5008 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5010 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5011 ;;Total ram usage:        1 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    3
  5014 ;; This function calls:
  5015 ;;		i2_escreve_lcd
  5016 ;; This function is called by:
  5017 ;;		i2_fputc
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text28
  5022  0021F8                     __ptext28:
  5023                           	opt callstack 0
  5024  0021F8                     i2_putch:
  5025                           	opt callstack 11
  5026                           
  5027                           ;incstack = 0
  5028                           ;i2putch@data stored from wreg
  5029  0021F8  6E06               	movwf	i2putch@data^0,c
  5030  0021FA                     
  5031                           ;newmain.c: 79: void putch(char data);newmain.c: 80: {;newmain.c: 81:   escreve_lcd(data
      +                          );
  5032  0021FA  5006               	movf	i2putch@data^0,w,c
  5033  0021FC  ECF5  F010         	call	i2_escreve_lcd
  5034  002200  0012               	return		;funcret
  5035  002202                     __end_ofi2_putch:
  5036                           	opt callstack 0
  5037                           
  5038 ;; *************** function i2_escreve_lcd *****************
  5039 ;; Defined at:
  5040 ;;		line 33 in file "lcd.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  c               1    wreg     unsigned char 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  c               1    4[COMRAM] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5054 ;;      Params:         0       0       0       0       0       0       0       0       0
  5055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5057 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5058 ;;Total ram usage:        1 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    2
  5061 ;; This function calls:
  5062 ;;		i2_envia_byte_lcd
  5063 ;; This function is called by:
  5064 ;;		i2_putch
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text29
  5069  0021EA                     __ptext29:
  5070                           	opt callstack 0
  5071  0021EA                     i2_escreve_lcd:
  5072                           	opt callstack 11
  5073                           
  5074                           ;incstack = 0
  5075                           ;i2escreve_lcd@c stored from wreg
  5076  0021EA  6E05               	movwf	i2escreve_lcd@c^0,c
  5077  0021EC  C005  F003         	movff	i2escreve_lcd@c,i2envia_byte_lcd@dado
  5078  0021F0  0E01               	movlw	1
  5079  0021F2  ECB7  F010         	call	i2_envia_byte_lcd
  5080  0021F6  0012               	return		;funcret
  5081  0021F8                     __end_ofi2_escreve_lcd:
  5082                           	opt callstack 0
  5083                           
  5084 ;; *************** function i2_abs *****************
  5085 ;; Defined at:
  5086 ;;		line 1 in file "F:\Program Files\mplab\pic\sources\c99\common\abs.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  a               2   18[COMRAM] int 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  2   18[COMRAM] int 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5100 ;;      Params:         2       0       0       0       0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5102 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5103 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5104 ;;Total ram usage:        4 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		i2_dtoa
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text30
  5114  002010                     __ptext30:
  5115                           	opt callstack 0
  5116  002010                     i2_abs:
  5117                           	opt callstack 14
  5118  002010  BE14               	btfsc	(i2abs@a+1)^0,7,c
  5119  002012  EF15  F010         	goto	i2u152_40
  5120  002016  5014               	movf	(i2abs@a+1)^0,w,c
  5121  002018  E106               	bnz	i2u152_41
  5122  00201A  0413               	decf	i2abs@a^0,w,c
  5123  00201C  B0D8               	btfsc	status,0,c
  5124  00201E  EF13  F010         	goto	i2u152_41
  5125  002022  EF15  F010         	goto	i2u152_40
  5126  002026                     i2u152_41:
  5127  002026  EF23  F010         	goto	i2l840
  5128  00202A                     i2u152_40:
  5129  00202A  C013  F015         	movff	i2abs@a,??i2_abs
  5130  00202E  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  5131  002032  1E15               	comf	??i2_abs^0,f,c
  5132  002034  1E16               	comf	(??i2_abs+1)^0,f,c
  5133  002036  4A15               	infsnz	??i2_abs^0,f,c
  5134  002038  2A16               	incf	(??i2_abs+1)^0,f,c
  5135  00203A  C015  F013         	movff	??i2_abs,?i2_abs
  5136  00203E  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  5137  002042  EF27  F010         	goto	i2l843
  5138  002046                     i2l840:
  5139  002046  C013  F013         	movff	i2abs@a,?i2_abs
  5140  00204A  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  5141  00204E                     i2l843:
  5142  00204E  0012               	return		;funcret
  5143  002050                     __end_ofi2_abs:
  5144                           	opt callstack 0
  5145                           
  5146 ;; *************** function i2___aomod *****************
  5147 ;; Defined at:
  5148 ;;		line 9 in file "F:\Program Files\mplab\pic\sources\c99\common\aomod.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  dividend        8    0[COMRAM] long long 
  5151 ;;  divisor         8    8[COMRAM] long long 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  __aomod         1   17[COMRAM] unsigned char 
  5154 ;;  __aomod         1   16[COMRAM] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  8    0[COMRAM] long long 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5164 ;;      Params:        16       0       0       0       0       0       0       0       0
  5165 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5167 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5168 ;;Total ram usage:       18 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		i2_dtoa
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text31
  5178  00177E                     __ptext31:
  5179                           	opt callstack 0
  5180  00177E                     i2___aomod:
  5181                           	opt callstack 14
  5182  00177E  0E00               	movlw	0
  5183  001780  6E12               	movwf	i2___aomod@sign^0,c
  5184  001782  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  5185  001784  EFC8  F00B         	goto	i2u146_40
  5186  001788  EFC6  F00B         	goto	i2u146_41
  5187  00178C                     i2u146_41:
  5188  00178C  EFDA  F00B         	goto	i2l1882
  5189  001790                     i2u146_40:
  5190  001790  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  5191  001792  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  5192  001794  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  5193  001796  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  5194  001798  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  5195  00179A  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  5196  00179C  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  5197  00179E  6C01               	negf	i2___aomod@dividend^0,c
  5198  0017A0  0E00               	movlw	0
  5199  0017A2  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  5200  0017A4  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  5201  0017A6  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  5202  0017A8  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  5203  0017AA  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  5204  0017AC  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  5205  0017AE  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  5206  0017B0  0E01               	movlw	1
  5207  0017B2  6E12               	movwf	i2___aomod@sign^0,c
  5208  0017B4                     i2l1882:
  5209  0017B4  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  5210  0017B6  EFE1  F00B         	goto	i2u147_40
  5211  0017BA  EFDF  F00B         	goto	i2u147_41
  5212  0017BE                     i2u147_41:
  5213  0017BE  EFF1  F00B         	goto	i2l1886
  5214  0017C2                     i2u147_40:
  5215  0017C2  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  5216  0017C4  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  5217  0017C6  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  5218  0017C8  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  5219  0017CA  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  5220  0017CC  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  5221  0017CE  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  5222  0017D0  6C09               	negf	i2___aomod@divisor^0,c
  5223  0017D2  0E00               	movlw	0
  5224  0017D4  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  5225  0017D6  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  5226  0017D8  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  5227  0017DA  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  5228  0017DC  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  5229  0017DE  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  5230  0017E0  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  5231  0017E2                     i2l1886:
  5232  0017E2  5009               	movf	i2___aomod@divisor^0,w,c
  5233  0017E4  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  5234  0017E6  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  5235  0017E8  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  5236  0017EA  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  5237  0017EC  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  5238  0017EE  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  5239  0017F0  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  5240  0017F2  B4D8               	btfsc	status,2,c
  5241  0017F4  EFFE  F00B         	goto	i2u148_41
  5242  0017F8  EF00  F00C         	goto	i2u148_40
  5243  0017FC                     i2u148_41:
  5244  0017FC  EF48  F00C         	goto	i2l1902
  5245  001800                     i2u148_40:
  5246  001800  0E01               	movlw	1
  5247  001802  6E11               	movwf	i2___aomod@counter^0,c
  5248  001804  EF0E  F00C         	goto	i2l1892
  5249  001808                     i2l1890:
  5250  001808  90D8               	bcf	status,0,c
  5251  00180A  3609               	rlcf	i2___aomod@divisor^0,f,c
  5252  00180C  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  5253  00180E  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  5254  001810  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  5255  001812  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  5256  001814  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  5257  001816  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  5258  001818  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  5259  00181A  2A11               	incf	i2___aomod@counter^0,f,c
  5260  00181C                     i2l1892:
  5261  00181C  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  5262  00181E  EF13  F00C         	goto	i2u149_41
  5263  001822  EF15  F00C         	goto	i2u149_40
  5264  001826                     i2u149_41:
  5265  001826  EF04  F00C         	goto	i2l1890
  5266  00182A                     i2u149_40:
  5267  00182A                     i2l1894:
  5268  00182A  5009               	movf	i2___aomod@divisor^0,w,c
  5269  00182C  5C01               	subwf	i2___aomod@dividend^0,w,c
  5270  00182E  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  5271  001830  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  5272  001832  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  5273  001834  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  5274  001836  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  5275  001838  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  5276  00183A  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  5277  00183C  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  5278  00183E  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  5279  001840  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  5280  001842  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  5281  001844  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  5282  001846  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  5283  001848  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  5284  00184A  A0D8               	btfss	status,0,c
  5285  00184C  EF2A  F00C         	goto	i2u150_41
  5286  001850  EF2C  F00C         	goto	i2u150_40
  5287  001854                     i2u150_41:
  5288  001854  EF3C  F00C         	goto	i2l1898
  5289  001858                     i2u150_40:
  5290  001858  5009               	movf	i2___aomod@divisor^0,w,c
  5291  00185A  5E01               	subwf	i2___aomod@dividend^0,f,c
  5292  00185C  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  5293  00185E  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  5294  001860  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  5295  001862  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  5296  001864  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  5297  001866  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  5298  001868  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  5299  00186A  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  5300  00186C  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  5301  00186E  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  5302  001870  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  5303  001872  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  5304  001874  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  5305  001876  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  5306  001878                     i2l1898:
  5307  001878  90D8               	bcf	status,0,c
  5308  00187A  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  5309  00187C  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  5310  00187E  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  5311  001880  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  5312  001882  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  5313  001884  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  5314  001886  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  5315  001888  3209               	rrcf	i2___aomod@divisor^0,f,c
  5316  00188A  2E11               	decfsz	i2___aomod@counter^0,f,c
  5317  00188C  EF15  F00C         	goto	i2l1894
  5318  001890                     i2l1902:
  5319  001890  5012               	movf	i2___aomod@sign^0,w,c
  5320  001892  B4D8               	btfsc	status,2,c
  5321  001894  EF4E  F00C         	goto	i2u151_41
  5322  001898  EF50  F00C         	goto	i2u151_40
  5323  00189C                     i2u151_41:
  5324  00189C  EF60  F00C         	goto	i2l1906
  5325  0018A0                     i2u151_40:
  5326  0018A0  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  5327  0018A2  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  5328  0018A4  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  5329  0018A6  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  5330  0018A8  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  5331  0018AA  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  5332  0018AC  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  5333  0018AE  6C01               	negf	i2___aomod@dividend^0,c
  5334  0018B0  0E00               	movlw	0
  5335  0018B2  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  5336  0018B4  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  5337  0018B6  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  5338  0018B8  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  5339  0018BA  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  5340  0018BC  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  5341  0018BE  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  5342  0018C0                     i2l1906:
  5343  0018C0  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  5344  0018C4  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  5345  0018C8  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  5346  0018CC  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  5347  0018D0  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  5348  0018D4  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  5349  0018D8  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  5350  0018DC  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  5351  0018E0  0012               	return		;funcret
  5352  0018E2                     __end_ofi2___aomod:
  5353                           	opt callstack 0
  5354                           
  5355 ;; *************** function i2___aodiv *****************
  5356 ;; Defined at:
  5357 ;;		line 9 in file "F:\Program Files\mplab\pic\sources\c99\common\aodiv.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  dividend        8    0[COMRAM] long long 
  5360 ;;  divisor         8    8[COMRAM] long long 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  __aodiv         8   18[COMRAM] long long 
  5363 ;;  __aodiv         1   17[COMRAM] unsigned char 
  5364 ;;  __aodiv         1   16[COMRAM] unsigned char 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  8    0[COMRAM] long long 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5374 ;;      Params:        16       0       0       0       0       0       0       0       0
  5375 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5377 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5378 ;;Total ram usage:       26 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		i2_dtoa
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text32
  5388  001490                     __ptext32:
  5389                           	opt callstack 0
  5390  001490                     i2___aodiv:
  5391                           	opt callstack 14
  5392  001490  0E00               	movlw	0
  5393  001492  6E12               	movwf	i2___aodiv@sign^0,c
  5394  001494  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  5395  001496  EF51  F00A         	goto	i2u139_40
  5396  00149A  EF4F  F00A         	goto	i2u139_41
  5397  00149E                     i2u139_41:
  5398  00149E  EF63  F00A         	goto	i2l1838
  5399  0014A2                     i2u139_40:
  5400  0014A2  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  5401  0014A4  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  5402  0014A6  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  5403  0014A8  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  5404  0014AA  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  5405  0014AC  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  5406  0014AE  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  5407  0014B0  6C09               	negf	i2___aodiv@divisor^0,c
  5408  0014B2  0E00               	movlw	0
  5409  0014B4  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  5410  0014B6  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  5411  0014B8  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  5412  0014BA  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  5413  0014BC  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  5414  0014BE  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  5415  0014C0  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  5416  0014C2  0E01               	movlw	1
  5417  0014C4  6E12               	movwf	i2___aodiv@sign^0,c
  5418  0014C6                     i2l1838:
  5419  0014C6  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  5420  0014C8  EF6A  F00A         	goto	i2u140_40
  5421  0014CC  EF68  F00A         	goto	i2u140_41
  5422  0014D0                     i2u140_41:
  5423  0014D0  EF7C  F00A         	goto	i2l1844
  5424  0014D4                     i2u140_40:
  5425  0014D4  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  5426  0014D6  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  5427  0014D8  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  5428  0014DA  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  5429  0014DC  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  5430  0014DE  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  5431  0014E0  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  5432  0014E2  6C01               	negf	i2___aodiv@dividend^0,c
  5433  0014E4  0E00               	movlw	0
  5434  0014E6  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  5435  0014E8  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  5436  0014EA  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  5437  0014EC  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  5438  0014EE  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  5439  0014F0  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  5440  0014F2  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  5441  0014F4  0E01               	movlw	1
  5442  0014F6  1A12               	xorwf	i2___aodiv@sign^0,f,c
  5443  0014F8                     i2l1844:
  5444  0014F8  EE20  F013         	lfsr	2,i2___aodiv@quotient
  5445  0014FC  0E07               	movlw	7
  5446  0014FE                     i2u141_41:
  5447  0014FE  6ADE               	clrf	postinc2,c
  5448  001500  06E8               	decf	wreg,f,c
  5449  001502  E2FD               	bc	i2u141_41
  5450  001504  5009               	movf	i2___aodiv@divisor^0,w,c
  5451  001506  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  5452  001508  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  5453  00150A  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  5454  00150C  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  5455  00150E  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  5456  001510  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  5457  001512  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  5458  001514  B4D8               	btfsc	status,2,c
  5459  001516  EF8F  F00A         	goto	i2u142_41
  5460  00151A  EF91  F00A         	goto	i2u142_40
  5461  00151E                     i2u142_41:
  5462  00151E  EFE3  F00A         	goto	i2l1866
  5463  001522                     i2u142_40:
  5464  001522  0E01               	movlw	1
  5465  001524  6E11               	movwf	i2___aodiv@counter^0,c
  5466  001526  EF9F  F00A         	goto	i2l1852
  5467  00152A                     i2l1850:
  5468  00152A  90D8               	bcf	status,0,c
  5469  00152C  3609               	rlcf	i2___aodiv@divisor^0,f,c
  5470  00152E  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  5471  001530  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  5472  001532  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  5473  001534  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  5474  001536  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  5475  001538  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  5476  00153A  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  5477  00153C  2A11               	incf	i2___aodiv@counter^0,f,c
  5478  00153E                     i2l1852:
  5479  00153E  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  5480  001540  EFA4  F00A         	goto	i2u143_41
  5481  001544  EFA6  F00A         	goto	i2u143_40
  5482  001548                     i2u143_41:
  5483  001548  EF95  F00A         	goto	i2l1850
  5484  00154C                     i2u143_40:
  5485  00154C                     i2l1854:
  5486  00154C  90D8               	bcf	status,0,c
  5487  00154E  3613               	rlcf	i2___aodiv@quotient^0,f,c
  5488  001550  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  5489  001552  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  5490  001554  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  5491  001556  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  5492  001558  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  5493  00155A  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  5494  00155C  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  5495  00155E  5009               	movf	i2___aodiv@divisor^0,w,c
  5496  001560  5C01               	subwf	i2___aodiv@dividend^0,w,c
  5497  001562  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  5498  001564  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  5499  001566  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  5500  001568  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  5501  00156A  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  5502  00156C  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  5503  00156E  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  5504  001570  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  5505  001572  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  5506  001574  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  5507  001576  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  5508  001578  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  5509  00157A  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  5510  00157C  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  5511  00157E  A0D8               	btfss	status,0,c
  5512  001580  EFC4  F00A         	goto	i2u144_41
  5513  001584  EFC6  F00A         	goto	i2u144_40
  5514  001588                     i2u144_41:
  5515  001588  EFD7  F00A         	goto	i2l1862
  5516  00158C                     i2u144_40:
  5517  00158C  5009               	movf	i2___aodiv@divisor^0,w,c
  5518  00158E  5E01               	subwf	i2___aodiv@dividend^0,f,c
  5519  001590  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  5520  001592  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  5521  001594  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  5522  001596  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  5523  001598  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  5524  00159A  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  5525  00159C  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  5526  00159E  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  5527  0015A0  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  5528  0015A2  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  5529  0015A4  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  5530  0015A6  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  5531  0015A8  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  5532  0015AA  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  5533  0015AC  8013               	bsf	i2___aodiv@quotient^0,0,c
  5534  0015AE                     i2l1862:
  5535  0015AE  90D8               	bcf	status,0,c
  5536  0015B0  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  5537  0015B2  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  5538  0015B4  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  5539  0015B6  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  5540  0015B8  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  5541  0015BA  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  5542  0015BC  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  5543  0015BE  3209               	rrcf	i2___aodiv@divisor^0,f,c
  5544  0015C0  2E11               	decfsz	i2___aodiv@counter^0,f,c
  5545  0015C2  EFA6  F00A         	goto	i2l1854
  5546  0015C6                     i2l1866:
  5547  0015C6  5012               	movf	i2___aodiv@sign^0,w,c
  5548  0015C8  B4D8               	btfsc	status,2,c
  5549  0015CA  EFE9  F00A         	goto	i2u145_41
  5550  0015CE  EFEB  F00A         	goto	i2u145_40
  5551  0015D2                     i2u145_41:
  5552  0015D2  EFFB  F00A         	goto	i2l1870
  5553  0015D6                     i2u145_40:
  5554  0015D6  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  5555  0015D8  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  5556  0015DA  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  5557  0015DC  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  5558  0015DE  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  5559  0015E0  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  5560  0015E2  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  5561  0015E4  6C13               	negf	i2___aodiv@quotient^0,c
  5562  0015E6  0E00               	movlw	0
  5563  0015E8  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  5564  0015EA  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  5565  0015EC  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  5566  0015EE  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  5567  0015F0  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  5568  0015F2  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  5569  0015F4  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  5570  0015F6                     i2l1870:
  5571  0015F6  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  5572  0015FA  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  5573  0015FE  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  5574  001602  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  5575  001606  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  5576  00160A  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  5577  00160E  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  5578  001612  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  5579  001616  0012               	return		;funcret
  5580  001618                     __end_ofi2___aodiv:
  5581                           	opt callstack 0
  5582                           
  5583 ;; *************** function i2_limpa_lcd *****************
  5584 ;; Defined at:
  5585 ;;		line 36 in file "lcd.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5599 ;;      Params:         0       0       0       0       0       0       0       0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5601 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5602 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5603 ;;Total ram usage:        1 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    2
  5606 ;; This function calls:
  5607 ;;		i2_envia_byte_lcd
  5608 ;; This function is called by:
  5609 ;;		_isr
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text33
  5614  0021B2                     __ptext33:
  5615                           	opt callstack 0
  5616  0021B2                     i2_limpa_lcd:
  5617                           	opt callstack 16
  5618  0021B2                     
  5619                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  5620  0021B2  0E01               	movlw	1
  5621  0021B4  6E03               	movwf	i2envia_byte_lcd@dado^0,c
  5622  0021B6  0E00               	movlw	0
  5623  0021B8  ECB7  F010         	call	i2_envia_byte_lcd
  5624  0021BC                     
  5625                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  5626  0021BC  0E03               	movlw	3
  5627  0021BE  6E05               	movwf	??i2_limpa_lcd^0,c
  5628  0021C0  0E98               	movlw	152
  5629  0021C2                     i2u213_47:
  5630  0021C2  2EE8               	decfsz	wreg,f,c
  5631  0021C4  D7FE               	bra	i2u213_47
  5632  0021C6  2E05               	decfsz	??i2_limpa_lcd^0,f,c
  5633  0021C8  D7FC               	bra	i2u213_47
  5634  0021CA  0012               	return		;funcret
  5635  0021CC                     __end_ofi2_limpa_lcd:
  5636                           	opt callstack 0
  5637                           
  5638 ;; *************** function i2_caracter_inicio *****************
  5639 ;; Defined at:
  5640 ;;		line 73 in file "lcd.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  linha           1    wreg     unsigned char 
  5643 ;;  coluna          1    4[COMRAM] unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  linha           1    5[COMRAM] unsigned char 
  5646 ;;  caracter_ini    1    6[COMRAM] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5656 ;;      Params:         1       0       0       0       0       0       0       0       0
  5657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5659 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5660 ;;Total ram usage:        3 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    2
  5663 ;; This function calls:
  5664 ;;		i2_envia_byte_lcd
  5665 ;; This function is called by:
  5666 ;;		_isr
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text34
  5671  001FCE                     __ptext34:
  5672                           	opt callstack 0
  5673  001FCE                     i2_caracter_inicio:
  5674                           	opt callstack 16
  5675                           
  5676                           ;incstack = 0
  5677                           ;i2caracter_inicio@linha stored from wreg
  5678  001FCE  6E06               	movwf	i2caracter_inicio@linha^0,c
  5679  001FD0                     
  5680                           ;lcd.c: 73:  void caracter_inicio(char linha,char coluna);lcd.c: 74: {;lcd.c: 75:  char 
      +                          posicao=0;
  5681  001FD0  0E00               	movlw	0
  5682  001FD2  6E07               	movwf	i2caracter_inicio@posicao^0,c
  5683  001FD4                     
  5684                           ;lcd.c: 76:  if(linha == 1)
  5685  001FD4  0406               	decf	i2caracter_inicio@linha^0,w,c
  5686  001FD6  A4D8               	btfss	status,2,c
  5687  001FD8  EFF0  F00F         	goto	i2u195_41
  5688  001FDC  EFF2  F00F         	goto	i2u195_40
  5689  001FE0                     i2u195_41:
  5690  001FE0  EFF4  F00F         	goto	i2l2194
  5691  001FE4                     i2u195_40:
  5692  001FE4                     
  5693                           ;lcd.c: 77: {;lcd.c: 78:  posicao=0x80;
  5694  001FE4  0E80               	movlw	128
  5695  001FE6  6E07               	movwf	i2caracter_inicio@posicao^0,c
  5696  001FE8                     i2l2194:
  5697                           
  5698                           ;lcd.c: 80:  if(linha == 2)
  5699  001FE8  0E02               	movlw	2
  5700  001FEA  1806               	xorwf	i2caracter_inicio@linha^0,w,c
  5701  001FEC  A4D8               	btfss	status,2,c
  5702  001FEE  EFFB  F00F         	goto	i2u196_41
  5703  001FF2  EFFD  F00F         	goto	i2u196_40
  5704  001FF6                     i2u196_41:
  5705  001FF6  EFFF  F00F         	goto	i2l2198
  5706  001FFA                     i2u196_40:
  5707  001FFA                     
  5708                           ;lcd.c: 81: {;lcd.c: 82:  posicao=0xc0;
  5709  001FFA  0EC0               	movlw	192
  5710  001FFC  6E07               	movwf	i2caracter_inicio@posicao^0,c
  5711  001FFE                     i2l2198:
  5712                           
  5713                           ;lcd.c: 85: posicao=posicao+coluna;
  5714  001FFE  5007               	movf	i2caracter_inicio@posicao^0,w,c
  5715  002000  2405               	addwf	i2caracter_inicio@coluna^0,w,c
  5716  002002  6E07               	movwf	i2caracter_inicio@posicao^0,c
  5717  002004                     
  5718                           ;lcd.c: 87: envia_byte_lcd(0,posicao);
  5719  002004  C007  F003         	movff	i2caracter_inicio@posicao,i2envia_byte_lcd@dado
  5720  002008  0E00               	movlw	0
  5721  00200A  ECB7  F010         	call	i2_envia_byte_lcd
  5722  00200E  0012               	return		;funcret
  5723  002010                     __end_ofi2_caracter_inicio:
  5724                           	opt callstack 0
  5725                           
  5726 ;; *************** function i2_envia_byte_lcd *****************
  5727 ;; Defined at:
  5728 ;;		line 22 in file "lcd.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  endereco        1    wreg     unsigned char 
  5731 ;;  dado            1    2[COMRAM] unsigned char 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  endereco        1    3[COMRAM] unsigned char 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         1       0       0       0       0       0       0       0       0
  5744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5746 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5747 ;;Total ram usage:        2 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    1
  5750 ;; This function calls:
  5751 ;;		i2_envia_nibble_lcd
  5752 ;; This function is called by:
  5753 ;;		i2_escreve_lcd
  5754 ;;		i2_limpa_lcd
  5755 ;;		i2_caracter_inicio
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text35
  5760  00216E                     __ptext35:
  5761                           	opt callstack 0
  5762  00216E                     i2_envia_byte_lcd:
  5763                           	opt callstack 11
  5764                           
  5765                           ;incstack = 0
  5766                           ;i2envia_byte_lcd@endereco stored from wreg
  5767  00216E  6E04               	movwf	i2envia_byte_lcd@endereco^0,c
  5768  002170                     
  5769                           ;lcd.c: 22: void envia_byte_lcd(char endereco,char dado);lcd.c: 23: {;lcd.c: 24:  PORTDb
      +                          its.RD0 = endereco;
  5770  002170  B004               	btfsc	i2envia_byte_lcd@endereco^0,0,c
  5771  002172  D002               	bra	i2u104_45
  5772  002174  9083               	bcf	131,0,c	;volatile
  5773  002176  D001               	bra	i2u104_46
  5774  002178                     i2u104_45:
  5775  002178  8083               	bsf	131,0,c	;volatile
  5776  00217A                     i2u104_46:
  5777  00217A                     
  5778                           ;lcd.c: 25:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  5779  00217A  D000               	nop2		;2 cycle nop
  5780  00217C  D000               	nop2		;2 cycle nop
  5781  00217E  F000               	nop	
  5782  002180                     
  5783                           ;lcd.c: 26:  envia_nibble_lcd(dado>>4);
  5784  002180  3803               	swapf	i2envia_byte_lcd@dado^0,w,c
  5785  002182  0B0F               	andlw	15
  5786  002184  ECB7  F00E         	call	i2_envia_nibble_lcd
  5787  002188                     
  5788                           ;lcd.c: 27:  envia_nibble_lcd(dado & 0x0f);
  5789  002188  5003               	movf	i2envia_byte_lcd@dado^0,w,c
  5790  00218A  0B0F               	andlw	15
  5791  00218C  ECB7  F00E         	call	i2_envia_nibble_lcd
  5792  002190  0012               	return		;funcret
  5793  002192                     __end_ofi2_envia_byte_lcd:
  5794                           	opt callstack 0
  5795                           
  5796 ;; *************** function i2_envia_nibble_lcd *****************
  5797 ;; Defined at:
  5798 ;;		line 4 in file "lcd.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  dado            1    wreg     unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  dado            1    1[COMRAM] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5812 ;;      Params:         0       0       0       0       0       0       0       0       0
  5813 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5814 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5815 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		i2_envia_byte_lcd
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text36
  5826  001D6E                     __ptext36:
  5827                           	opt callstack 0
  5828  001D6E                     i2_envia_nibble_lcd:
  5829                           	opt callstack 11
  5830                           
  5831                           ;incstack = 0
  5832                           ;i2envia_nibble_lcd@dado stored from wreg
  5833  001D6E  6E02               	movwf	i2envia_nibble_lcd@dado^0,c
  5834  001D70                     
  5835                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD1 = 1;
  5836  001D70  8283               	bsf	131,1,c	;volatile
  5837  001D72                     
  5838                           ;lcd.c: 7:   PORTDbits.RD4 = dado & 0x01;
  5839  001D72  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5840  001D76  0E01               	movlw	1
  5841  001D78  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5842  001D7A  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  5843  001D7C  5083               	movf	131,w,c	;volatile
  5844  001D7E  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5845  001D80  0BEF               	andlw	-17
  5846  001D82  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5847  001D84  6E83               	movwf	131,c	;volatile
  5848                           
  5849                           ;lcd.c: 8:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  5850  001D86  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5851  001D8A  90D8               	bcf	status,0,c
  5852  001D8C  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5853  001D8E  0E01               	movlw	1
  5854  001D90  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5855  001D92  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  5856  001D94  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  5857  001D96  5083               	movf	131,w,c	;volatile
  5858  001D98  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5859  001D9A  0BDF               	andlw	-33
  5860  001D9C  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5861  001D9E  6E83               	movwf	131,c	;volatile
  5862                           
  5863                           ;lcd.c: 9:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  5864  001DA0  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5865  001DA4  90D8               	bcf	status,0,c
  5866  001DA6  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5867  001DA8  90D8               	bcf	status,0,c
  5868  001DAA  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5869  001DAC  0E01               	movlw	1
  5870  001DAE  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5871  001DB0  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  5872  001DB2  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  5873  001DB4  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  5874  001DB6  5083               	movf	131,w,c	;volatile
  5875  001DB8  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5876  001DBA  0BBF               	andlw	-65
  5877  001DBC  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5878  001DBE  6E83               	movwf	131,c	;volatile
  5879                           
  5880                           ;lcd.c: 10:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  5881  001DC0  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  5882  001DC4  90D8               	bcf	status,0,c
  5883  001DC6  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5884  001DC8  90D8               	bcf	status,0,c
  5885  001DCA  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5886  001DCC  90D8               	bcf	status,0,c
  5887  001DCE  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5888  001DD0  0E01               	movlw	1
  5889  001DD2  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  5890  001DD4  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5891  001DD6  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  5892  001DD8  5083               	movf	131,w,c	;volatile
  5893  001DDA  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5894  001DDC  0B7F               	andlw	-129
  5895  001DDE  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  5896  001DE0  6E83               	movwf	131,c	;volatile
  5897  001DE2                     
  5898                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  5899  001DE2  0E10               	movlw	16
  5900  001DE4                     i2u214_47:
  5901  001DE4  2EE8               	decfsz	wreg,f,c
  5902  001DE6  D7FE               	bra	i2u214_47
  5903  001DE8  D000               	nop2	
  5904  001DEA                     
  5905                           ;lcd.c: 14:   PORTDbits.RD1 = 0;
  5906  001DEA  9283               	bcf	131,1,c	;volatile
  5907  001DEC                     
  5908                           ;lcd.c: 15:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  5909  001DEC  0E10               	movlw	16
  5910  001DEE                     i2u215_47:
  5911  001DEE  2EE8               	decfsz	wreg,f,c
  5912  001DF0  D7FE               	bra	i2u215_47
  5913  001DF2  D000               	nop2	
  5914  001DF4  0012               	return		;funcret
  5915  001DF6                     __end_ofi2_envia_nibble_lcd:
  5916                           	opt callstack 0
  5917                           
  5918                           	psect	rparam
  5919  0000                     
  5920                           	psect	temp
  5921  00005E                     btemp:
  5922                           	opt callstack 0
  5923  00005E                     	ds	1
  5924  0000                     int$flags	set	btemp
  5925  0000                     wtemp8	set	btemp+1
  5926  0000                     ttemp5	set	btemp+1
  5927  0000                     ttemp6	set	btemp+4
  5928  0000                     ttemp7	set	btemp+8
  5929                           tosu	equ	0xFFF
  5930                           tosh	equ	0xFFE
  5931                           tosl	equ	0xFFD
  5932                           stkptr	equ	0xFFC
  5933                           pclatu	equ	0xFFB
  5934                           pclath	equ	0xFFA
  5935                           pcl	equ	0xFF9
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           indf0	equ	0xFEF
  5943                           postinc0	equ	0xFEE
  5944                           postdec0	equ	0xFED
  5945                           preinc0	equ	0xFEC
  5946                           plusw0	equ	0xFEB
  5947                           fsr0h	equ	0xFEA
  5948                           fsr0l	equ	0xFE9
  5949                           wreg	equ	0xFE8
  5950                           indf1	equ	0xFE7
  5951                           postinc1	equ	0xFE6
  5952                           postdec1	equ	0xFE5
  5953                           preinc1	equ	0xFE4
  5954                           plusw1	equ	0xFE3
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           bsr	equ	0xFE0
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           preinc2	equ	0xFDC
  5962                           plusw2	equ	0xFDB
  5963                           fsr2h	equ	0xFDA
  5964                           fsr2l	equ	0xFD9
  5965                           status	equ	0xFD8


Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    117     131
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[6]), STR_5(CODE[12]), STR_4(CODE[6]), STR_3(CODE[12]), 
		 -> STR_2(CODE[9]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S951_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[6]), STR_5(CODE[12]), STR_4(CODE[6]), STR_3(CODE[12]), 
		 -> STR_2(CODE[9]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[6]), STR_5(CODE[12]), STR_4(CODE[6]), STR_3(CODE[12]), 
		 -> STR_2(CODE[9]), STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_escreve_lcd
    i2_escreve_lcd->i2_envia_byte_lcd
    i2_abs->i2___aomod
    i2_limpa_lcd->i2_envia_byte_lcd
    i2_caracter_inicio->i2_envia_byte_lcd
    i2_envia_byte_lcd->i2_envia_nibble_lcd

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _abs->___aomod
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _caracter_inicio->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _isr in BANK0

    _isr->i2_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11080
                                            115 BANK0      2     2      0
                    _caracter_inicio
                     _inicializa_lcd
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    8494
                                            109 BANK0      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8112
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7743
                                             85 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5686
                                             49 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4037
                                             38 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1899
                                             31 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1498
                                             22 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     730
                                             21 BANK0      1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (6) _escreve_lcd                                          1     1      0     708
                                             20 BANK0      1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             34 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                             16 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                             16 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            1     1      0     686
                                             20 BANK0      1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (1) _inicializa_lcd                                       1     1      0     774
                                             20 BANK0      1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (1) _caracter_inicio                                      3     2      1    1126
                                             20 BANK0      3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (7) _envia_byte_lcd                                       2     1      1     686
                                             18 BANK0      2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (8) _envia_nibble_lcd                                     2     2      0      88
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 8     8      0    5377
                                              8 BANK0      8     8      0
                  i2_caracter_inicio
                        i2_limpa_lcd
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) i2_printf                                            8     4      4    4669
                                              0 BANK0      8     4      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    4485
                                             85 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        42    36      6    4281
                                             69 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             36    26     10    3228
                                             33 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    1929
                                             22 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     845
                                             15 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     644
                                              6 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0     276
                                              5 COMRAM     1     1      0
                      i2_escreve_lcd
 ---------------------------------------------------------------------------------
 (18) i2_escreve_lcd                                       1     1      0     254
                                              4 COMRAM     1     1      0
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (13) i2_limpa_lcd                                         1     1      0     232
                                              4 COMRAM     1     1      0
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (13) i2_caracter_inicio                                   3     2      1     476
                                              4 COMRAM     3     2      1
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (19) i2_envia_byte_lcd                                    2     1      1     232
                                              2 COMRAM     2     1      1
                 i2_envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (20) i2_envia_nibble_lcd                                  2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _caracter_inicio
     _envia_byte_lcd
       _envia_nibble_lcd
   _inicializa_lcd
     _envia_byte_lcd
       _envia_nibble_lcd
     _envia_nibble_lcd
   _limpa_lcd
     _envia_byte_lcd
       _envia_nibble_lcd
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
                     _envia_nibble_lcd
             _fputs
               _fputc
                 _putch
                   _escreve_lcd
                     _envia_byte_lcd
                       _envia_nibble_lcd
             _strlen
         _fputc
           _putch
             _escreve_lcd
               _envia_byte_lcd
                 _envia_nibble_lcd

 _isr (ROOT)
   i2_caracter_inicio
     i2_envia_byte_lcd
       i2_envia_nibble_lcd
   i2_limpa_lcd
     i2_envia_byte_lcd
       i2_envia_nibble_lcd
   i2_printf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
                 i2_escreve_lcd
                   i2_envia_byte_lcd
                     i2_envia_nibble_lcd
             i2_fputs
               i2_fputc
                 i2_putch
                   i2_escreve_lcd
                     i2_envia_byte_lcd
                       i2_envia_nibble_lcd
             i2_strlen
         i2_fputc
           i2_putch
             i2_escreve_lcd
               i2_envia_byte_lcd
                 i2_envia_nibble_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     100      20        0.0%
DATA                 0      0     100       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 30 07:21:09 2022

                          _T 00DD                           l45 21E8                           l73 1D6C  
                         l90 1F46                           l82 21B0                           l76 211A  
                         l85 1CE0                           l79 21DA                  __CFG_BOR$ON 000000  
                         _fi 00E1                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l120 196E                          l122 19AA                          l130 08D8  
                        l117 192A                          l128 08D0                          l161 1E4E  
                        l162 1E56                          l155 0FAE                          l148 0B12  
                        l292 177C                          l279 148E                          l840 1FC4  
                        l843 1FCC                          l870 216C                          l855 1BB8  
                        l863 1F00                          l876 2088                 __CFG_CPB$OFF 000000  
                        _PR2 000FCB                 __CFG_CPD$OFF 000000           i2___aodiv@quotient 0013  
                        _abs 1F8C                          _fix 00DF                          _pad 18E2  
                        _isr 0008                          wreg 000FE8          __end_ofi2_vfpfcnvrt 1164  
                 i2_dtoa$490 0034                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       ?_abs 0082                         l2040 0E1C                         l2050 0E88  
                       l2042 0E2A                         l2122 1DF6                         l2210 1A9C  
                       l2140 1C5A                         l2060 0F3A                         l2052 0ED0  
                       l2044 0E3C                         l2124 1DFE                         l2220 1AA6  
                       l2212 1A9E                         l2150 1C98                         l2142 1C6C  
                       l2062 0F4E                         l2046 0E40                         l2038 0DF8  
                       l2126 1E0C                         l2230 1AC2                         l2222 1AA8  
                       l2214 1AA0                         l1600 1D62                         l2152 1C9E  
                       l2144 1C72                         l2160 2192                         l2056 0F08  
                       l2048 0E64                         l2072 0F76                         l2128 1E32  
                       l2240 1AFC                         l2232 1AC6                         l2224 1AAA  
                       l2216 1AA2                         l2208 1A72                         l1602 1D64  
                       l2170 1F20                         l2154 1CBC                         l2146 1C8A  
                       l2138 1C50                         l2162 219E                         l2074 0F9C  
                       l2058 0F2C                         l2066 0F5C                         l2242 1AFE  
                       l2234 1AD2                         l2226 1AAC                         l2218 1AA4  
                       l1620 2110                         l2172 1F32                         l2164 1F06  
                       l2156 1CC8                         l2148 1C92                         l2068 0F6A  
                       l2180 2150                         l2244 1B18                         l2236 1AE0  
                       l2228 1ABE                         l1614 20F4                         l2174 1F36  
                       l2166 1F0C                         l2158 1CD4                         l1630 21D0  
                       l1710 1922                         l1702 18E2                         l2238 1AF4  
                       l1616 2100                         l2176 1F3C                         l2168 1F1C  
                       l1800 172C                         l1640 1B36                         l1720 1990  
                       l1712 1936                         l1704 18F2                         l1618 2106  
                       l1730 130C                         l1802 173C                         l1634 21E0  
                       l1642 1B48                         l1714 194A                         l1706 1906  
                       l2178 2146                         l1740 136C                         l1732 131A  
                       l1804 175C                         l1724 1F8C                         l1644 1B52  
                       l1716 1950                         l1708 1916                         l1750 13B6  
                       l1742 1370                         l1734 133A                         l1726 1FA8  
                       l1646 1B70                         l1638 1B22                         l1670 1EDA  
                       l1718 197C                         l1760 1426                         l1752 13C4  
                       l1744 137C                         l1736 133E                         l1728 1306  
                       l1648 1BA6                         l1672 1EE0                         l1680 207A  
                       l1920 089A                         l1594 1CE6                         l1762 1438  
                       l1754 13D6                         l1746 139A                         l1738 134C  
                       l1666 1EBA                         l1674 2050                         l1930 08F2  
                       l1922 08A8                         l1914 0830                         l1596 1CE8  
                       l1756 1404                         l1748 13A2                         l1764 143E  
                       l1780 1650                         l1772 1618                         l1668 1EC8  
                       l1676 205C                         l1940 091E                         l1932 0900  
                       l1924 08AA                         l1916 0850                         l1598 1D5A  
                       l1766 144E                         l1758 1424                         l1790 16B8  
                       l1782 165E                         l1774 161E                         l1678 2062  
                       l1950 0A2E                         l1942 09A2                         l1934 0906  
                       l1926 08C4                         l1918 087A                         l1768 146E  
                       l1792 16C6                         l1784 167E                         l1776 162C  
                       l1960 0AA0                         l1952 0A4C                         l1944 09A8  
                       l1936 090E                         l1928 08E0                         l1794 16F4  
                       l1786 169C                         l1778 164C                         l1970 0ADA  
                       l1962 0AAE                         l1954 0A66                         l1946 09AE  
                       l1938 0918                         l1796 1714                         l1788 16A4  
                       l1964 0AB4                         l1972 0AEA                         l1956 0A80  
                       l1948 0A12                         l1798 1726                         l1966 0AC6  
                       l1958 0A8E                         ?_pad 0086                         l1968 0AD2  
                       ?_isr 0001                         STR_1 0822                         STR_2 0819  
                       STR_3 0801                         STR_4 0829                         STR_5 080D  
                       STR_6 0829                         u1200 197C                         u1201 1978  
                       u1210 1FA8                         u1050 1B36                         u1130 1F00  
                       u1035 20FE                         u1211 1FA4                         u1051 1B32  
                       u1131 1EFC                         u1036 2100                         u1220 131A  
                       u1300 165E                         u1060 1B48                         u1140 207A  
                       u1221 1316                         u1301 165A                         u1061 1B44  
                       u1141 2076                         u1230 134C                         u1310 169C  
                       u1070 1B70                         u1231 1348                         u1311 1698  
                       u1071 1B6C                         u1320 16C6                         u1080 1BA6  
                       u1241 1376                         u1321 16C2                         u1081 1BA2  
                       u1250 139A                         u1330 16F4                         u1170 18F2  
                       u2107 1CB2                         u1251 1396                         u1331 16F0  
                       u1171 18EE                         u1260 13C4                         u1340 173C  
                       u1180 1916                         u2117 1D5C                         u1261 13C0  
                       u1341 1738                         u1181 1912                         u1270 1404  
                       u1190 196E                         u2127 1D66                         u1271 1400  
                       u1191 196A                         u1280 144E                         u1600 0A2E  
                       u1281 144A                         u1601 0A2A                         u2057 1B0A  
                       u1290 162C                         u1610 0A4C                         u1530 0862  
                       u2067 21A6                         u1291 1628                         u1611 0A48  
                       u1531 085C                         u1620 0A66                         u1540 0864  
                       u2077 1C62                         u1621 0A62                         u1630 0A80  
                       u1550 087A                         u2087 1C7A                         u1631 0A7C  
                       u1551 0876                         u1640 0A8E                         u1560 08A8  
                       u2097 1C8C                         u1641 0A8A                         u1561 08A4  
                       u1650 0AA0                         u1570 08C4                         u1651 0A9C  
                       u1571 08C0                         u1660 0AAE                         u1580 08F2  
                       u1661 0AAA                         u1581 08EE                         u1670 0AC6  
                       u1590 0900                         u1830 0E1C                         u1910 1E4E  
                       u1671 0AC2                         u1591 08FC                         u1831 0E18  
                       u1911 1E4A                         u1840 0E64                         u1841 0E60  
                       u1930 1F1C                         u1850 0E88                         u1931 1F18  
                       u1851 0E84                         u1940 1F32                         u1860 0F2C  
                       u1941 1F2E                         u1861 0F28                         u1970 1AF4  
                       u1971 1AF0                         i2l45 2200                         i2l61 125A  
                       i2l62 12E2                         i2l63 12C8                         i2l73 1DF4  
                       i2l90 200E                         i2l82 21CA                         i2l66 12E2  
                       i2l59 11EC                         i2l76 2190                         i2l79 21F6  
               ?_escreve_lcd 0001       envia_byte_lcd@endereco 0073                         abs@a 0082  
                       _dbuf 0100                         _main 1A72                         _dtoa 0830  
                       _prec 00D9                         _nout 00D5                         pad@i 008D  
                       pad@p 008A                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 008F  
                       fsr2l 000FD9                         btemp 005E                         start 000E  
              __CFG_IESO$OFF 000000              __end_ofi2_fputc 1C50              __end_ofi2_fputs 1F8C  
            __end_ofi2_putch 2202                __CFG_MCLRE$ON 000000      __end_of_caracter_inicio 1F48  
               ___param_bank 000000                        ??_abs 0084                        ??_pad 008C  
                      ??_isr 0068                   i2_vfprintf 1E58                __CFG_PLLDIV$1 000000  
             __CFG_CCP2MX$ON 000000              __end_of___aodiv 1490                        ?_main 0001  
                      ?_dtoa 0091              __end_of___aomod 177E                        i2l120 1A34  
                      i2l122 1A70                        i2l130 0BBC                        i2l117 19F2  
                      i2l128 0BB4                        i2l161 1EB0                        i2l162 1EB8  
                      i2l155 1162                        i2l148 0DF6                        i2l292 18E0  
                      i2l279 1616                        i2l840 2046                        i2l843 204E  
                      i2l870 20EE                        i2l855 1C4E                        i2l863 1F8A  
                      i2l876 20BE                 vfpfcnvrt@fmt 00B7                        _PORTC 000F82  
                      _PORTD 000F83                __CFG_USBDIV$1 000000                        _TRISC 000F94  
                      _TRISD 000F95                        i2_abs 2010                        i2_pad 19AC  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000      __size_of_envia_byte_lcd 002C               __CFG_EBTRB$OFF 000000  
                      _flags 00DB                        _fputc 1B22                        _fputs 1EBA  
                      pad@fp 0086                        _width 00D7                        _putch 21DC  
                      dtoa@d 0093                        dtoa@i 00B3                        dtoa@n 00AB  
                      dtoa@p 00A5                        dtoa@s 00A9                        dtoa@w 00A7  
                i2_limpa_lcd 21B2                        tablat 000FF5                        ttemp5 005F  
                      ttemp6 0062                        ttemp7 0066                        status 000FD8  
                      wtemp8 005F               __CFG_ICPRT$OFF 000000           __size_ofi2___aodiv 0188  
         __size_ofi2___aomod 0164             __end_ofi2_printf 20F0             __end_ofi2_strlen 20C0  
            __initialization 211C                 __end_of_main 1B22                 __end_of_dtoa 0B14  
           i2_envia_byte_lcd 216E                   i2printf@ap 0066                  i2_vfpfcnvrt 0FB0  
              i2vfpfcnvrt@ap 004A                i2vfpfcnvrt@fp 0046                i2vfpfcnvrt@ll 004E  
                     ??_main 00D3                       ??_dtoa 009B                __activetblptr 000001  
                     ?i2_abs 0013                       ?i2_pad 0017                       ?_fputc 0076  
                     ?_fputs 007F                       ?_putch 0001                       i2l2000 0BFC  
                     i2l2002 0C02                       i2l2010 0CF4                       i2l2012 0D0E  
                     i2l2020 0D70                       i2l2004 0C84                       i2l2100 10E4  
                     i2l2030 0DB6                       i2l2022 0D82                       i2l2014 0D2C  
                     i2l2006 0C8A                       i2l2110 1120                       i2l2102 10F2  
                     i2l2200 2004                       i2l2032 0DBE                       i2l2024 0D92  
                     i2l2016 0D46                       i2l2008 0C90                       i2l2104 1106  
                     i2l2026 0D98                       i2l2034 0DCE                       i2l2018 0D60  
                     i2l2114 112C                       i2l2130 1E58                       i2l2202 20C0  
                     i2l2028 0DAA                       i2l2116 1150                       i2l2108 1112  
                     i2l2132 1E60                       i2l2204 20CA                       i2l2300 1296  
                     i2l2134 1E6E                       i2l2302 12A4                       i2l2080 0FB0  
                     i2l2136 1E94                       i2l2304 12AE                       i2l1610 1DEA  
                     i2l2090 101C                       i2l2082 0FD4                       i2l2306 12D6  
                     i2l2250 11A8                       i2l1612 1DEC                       i2l1604 1D70  
                     i2l2092 1040                       i2l2084 0FE2                       i2l2308 12D8  
                     i2l2260 11C8                       i2l2252 11C0                       i2l1606 1D72  
                     i2l1622 2170                       i2l2190 1FD4                       i2l2094 1088  
                     i2l2086 0FF4                       i2l2270 11FA                       i2l2262 11CA  
                     i2l2254 11C2                       i2l2246 1186                       i2l1608 1DE2  
                     i2l1624 217A                       i2l2192 1FE4                       i2l2184 21B2  
                     i2l1632 21EC                       i2l2088 0FF8                       i2l2280 121E  
                     i2l2272 120E                       i2l2264 11CC                       i2l2256 11C4  
                     i2l2248 1194                       i2l1626 2180                       i2l2194 1FE8  
                     i2l2186 21BC                       i2l1810 19BC                       i2l2098 10C0  
                     i2l2290 127C                       i2l2282 1228                       i2l2274 1212  
                     i2l2266 11D0                       i2l2258 11C6                       i2l1628 2188  
                     i2l2196 1FFA                       i2l2188 1FD0                       i2l1900 188A  
                     i2l1636 21FA                       i2l1660 1C06                       i2l1652 1BBA  
                     i2l1820 1A12                       i2l1812 19D0                       i2l2292 1280  
                     i2l2284 1236                       i2l2276 121A                       i2l2268 11DA  
                     i2l2198 1FFE                       i2l1830 1490                       i2l1902 1890  
                     i2l1910 2010                       i2l1662 1C3C                       i2l1654 1BCC  
                     i2l1822 1A16                       i2l1814 19DE                       i2l2294 1288  
                     i2l2286 1240                       i2l2278 121C                       i2l1840 14D4  
                     i2l1832 1494                       i2l1904 18A0                       i2l1912 202A  
                     i2l1656 1BDE                       i2l1824 1A44                       i2l1816 19EA  
                     i2l1808 19AC                       i2l2296 128A                       i2l2288 1268  
                     i2l1850 152A                       i2l1842 14F4                       i2l1834 14A2  
                     i2l1906 18C0                       i2l1658 1BE8                       i2l1690 1F6A  
                     i2l1826 1A58                       i2l1818 19FE                       i2l2298 128C  
                     i2l1860 15AC                       i2l1852 153E                       i2l1844 14F8  
                     i2l1836 14C2                       i2l1684 1F48                       i2l1692 208A  
                     i2l1870 15F6                       i2l1862 15AE                       i2l1854 154C  
                     i2l1846 1504                       i2l1838 14C6                       i2l1686 1F54  
                     i2l1694 2096                       i2l1864 15C0                       i2l1856 155E  
                     i2l1848 1522                       i2l1880 17B0                       i2l1688 1F66  
                     i2l1696 209A                       i2l1858 158C                       i2l1866 15C6  
                     i2l1890 1808                       i2l1882 17B4                       i2l1874 177E  
                     i2l1698 20B2                       i2l1868 15D6                       i2l1892 181C  
                     i2l1884 17C2                       i2l1876 1782                       i2l1980 0B5C  
                     i2l1894 182A                       i2l1886 17E2                       i2l1878 1790  
                     i2l1990 0BC4                       i2l1982 0B7C                       i2l1896 1858  
                     i2l1888 1800                       i2l1992 0BD6                       i2l1984 0B8C  
                     i2l1976 0B14                       i2l1898 1878                       i2l1994 0BE4  
                     i2l1986 0B8E                       i2l1978 0B34                       i2l1996 0BEA  
                     i2l1988 0BA8                       i2l1998 0BF2                    ??i2_fputc 000B  
                  ??i2_fputs 0014                    ??i2_putch 0006                       _TMR2IE 007CE9  
                     _TMR2IF 007CF1      __size_of_inicializa_lcd 0092               i2___aodiv@sign 0012  
                     i2abs@a 0013                       i2_dtoa 0B14                       i2pad@i 001E  
                     i2pad@p 001B                       i2pad@w 0020               __CFG_XINST$OFF 000000  
           _envia_nibble_lcd 1CE2                 vfprintf@cfmt 00CB             ?_caracter_inicio 0074  
             i2___aomod@sign 0012                    ??___aodiv 0080                i2vfprintf@fmt 0058  
                  ??___aomod 0080                  ?i2_vfprintf 0056                       clear_0 2122  
                     clear_1 212E                       _printf 2146                       pad@buf 0088  
                     dtoa@fp 0091                       _strlen 2050                       fputc@c 0076  
                     fputs@c 0083                       fputs@i 0084            __end_ofi2___aodiv 1618  
                     fputs@s 007F            __end_ofi2___aomod 18E2                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
         i2___aomod@dividend 0001             __end_of_vfprintf 1E58                   __accesstop 0060  
    __end_of__initialization 2134           envia_byte_lcd@dado 0072              __CFG_PBADEN$OFF 000000  
            __CFG_FOSC$XT_XT 000000   __end_ofi2_envia_nibble_lcd 1DF6         __size_of_escreve_lcd 0010  
              ___rparam_used 000001                 escreve_lcd@c 0074                __end_ofi2_abs 2050  
              __end_ofi2_pad 1A72               __pcstackCOMRAM 0001                __end_of_fputc 1BBA  
              __end_of_fputs 1F02                __end_of_putch 21EA                  i2printf@fmt 0060  
                i2printf@ret 0064       __size_ofi2_escreve_lcd 000E                  i2putch@data 0006  
                    ??i2_abs 0015                      ??i2_pad 001D               _envia_byte_lcd 20F0  
             i2vfpfcnvrt@fmt 0048                    ?i2_printf 0060                    ?i2_strlen 0001  
                    ??_fputc 007A                      ??_fputs 0083                      ??_putch 0075  
                 __pbssBANK0 00D5                   __pbssBANK1 0100          __size_ofi2_vfprintf 0062  
                    ?i2_dtoa 0022           __size_of_limpa_lcd 0020                      ?_printf 00CD  
                    ?_strlen 0070       __end_of_envia_byte_lcd 211C           __size_of_vfpfcnvrt 01B8  
                 ??i2_printf 005E                   ??i2_strlen 0003     __end_ofi2_envia_byte_lcd 2192  
               ?i2_limpa_lcd 0001                      i2_fputc 1BBA                      i2_fputs 1F48  
            __CFG_VREGEN$OFF 000000               _inicializa_lcd 1C50                      i2pad@fp 0017  
                    i2_putch 21F8                      i2dtoa@d 0024                      i2dtoa@i 0044  
                    i2dtoa@n 003C                      i2dtoa@p 0036                      i2dtoa@s 003A  
                    i2dtoa@w 0038                i2_escreve_lcd 21EA              __size_ofi2_dtoa 02E4  
                    __Hparam 0000         caracter_inicio@linha 0075                      __Lparam 0000  
                    ___aodiv 1306                      ___aomod 1618                    ?_vfprintf 00C5  
             i2vfprintf@cfmt 005C                 __psmallconst 0800              __CFG_STVREN$OFF 000000  
               ?i2_vfpfcnvrt 0046                      __pcinit 211C                      __ramtop 0800  
                    __ptext0 1A72                      __ptext1 2146                      __ptext2 1DF6  
                    __ptext3 0DF8                      __ptext4 0830                      __ptext5 18E2  
                    __ptext6 2050                      __ptext7 1EBA                      __ptext8 1B22  
                    __ptext9 21DC              __size_of_printf 0028              __size_of_strlen 003A  
                  _T2CONbits 000FCA                 __size_of_abs 0042              ?_envia_byte_lcd 0072  
               __size_of_pad 00CA                 __size_of_isr 12FE            __end_of_limpa_lcd 21B2  
   __end_of_envia_nibble_lcd 1D6E     i2envia_byte_lcd@endereco 0004       __end_of_inicializa_lcd 1CE2  
             __pintcode_body 1164         end_of_initialization 2134               ?i2_escreve_lcd 0001  
                    fputc@fp 0078                      int_func 1164                      fputs@fp 0081  
          __end_of_vfpfcnvrt 0FB0               i2escreve_lcd@c 0005                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
               ??i2_vfprintf 005C                   ??_vfprintf 00CB                      strlen@a 0072  
                    strlen@s 0070                    _PORTCbits 000F82                    _PORTDbits 000F83  
          i2___aodiv@divisor 0009            i2___aodiv@counter 0011                    i2___aodiv 1490  
                  i2___aomod 177E              ?_inicializa_lcd 0001           __end_ofi2_vfprintf 1EBA  
             __end_ofi2_dtoa 0DF8                  vfpfcnvrt@ap 00B9                  vfpfcnvrt@fp 00B5  
                vfpfcnvrt@ll 00BD           i2_envia_nibble_lcd 1D6E                    i2fputc@fp 0009  
                  i2fputs@fp 0012     __size_of_caracter_inicio 0046       i2envia_nibble_lcd@dado 0002  
             __end_of_printf 216E               __end_of_strlen 208A          start_initialization 211C  
        ?i2_envia_nibble_lcd 0001                  __end_of_abs 1FCE                  __end_of_pad 19AC  
                __end_of_isr 1306                   ?i2___aodiv 0001                   ?i2___aomod 0001  
            ??i2_escreve_lcd 0005            __size_ofi2_printf 0030                ??_escreve_lcd 0074  
          __size_ofi2_strlen 0036                    i2strlen@a 0003                    i2strlen@s 0001  
       __size_ofi2_limpa_lcd 001A                     ??i2_dtoa 002C       caracter_inicio@posicao 0076  
       ??i2_envia_nibble_lcd 0001                  vfprintf@fmt 00C7                 i2vfprintf@ap 005A  
               i2vfprintf@fp 0056             __CFG_LPT1OSC$OFF 000000                     ??_printf 00CF  
          i2___aomod@divisor 0009                     ??_strlen 0072            i2___aomod@counter 0011  
       __size_ofi2_vfpfcnvrt 01B4            i2_caracter_inicio 1FCE                __pcstackBANK0 0060  
           ___aodiv@dividend 0070           ?i2_caracter_inicio 0005            ?i2_envia_byte_lcd 0003  
                   ?i2_fputc 0007                     ?i2_fputs 0010          ??i2_caracter_inicio 0006  
         ??i2_envia_byte_lcd 0004                     ?i2_putch 0001         i2envia_byte_lcd@dado 0003  
        __end_of_escreve_lcd 21DC                    __pintcode 0008                     ?___aodiv 0070  
                   ?___aomod 0070             ___aodiv@quotient 0082             ??_envia_byte_lcd 0073  
  __end_ofi2_caracter_inicio 2010            __size_of_vfprintf 0062                  __smallconst 0800  
             __size_ofi2_abs 0040               __size_ofi2_pad 00C6            ?_envia_nibble_lcd 0001  
                ??i2___aodiv 0011                  ??i2___aomod 0011            ??_caracter_inicio 0075  
             __size_of_fputc 0098               __size_of_fputs 0048                    _limpa_lcd 2192  
             __size_of_putch 000E           ??_envia_nibble_lcd 0070                     i2u110_40 1BDE  
                   i2u110_41 1BDA                     i2u111_40 1C06                     i2u111_41 1C02  
                   i2u112_40 1C3C                     i2u200_40 11FA                     i2u112_41 1C38  
                   i2u200_41 11F6                     i2u104_45 2178                     i2u104_46 217A  
                   i2u201_40 120E                     i2u201_41 120A                     i2u202_40 1268  
                   i2u202_41 1264                     i2u115_40 1F8A                     i2u203_40 127C  
                   i2u115_41 1F86                     i2u203_41 1278                     i2u140_40 14D4  
                   i2u116_40 20B2                     i2u204_40 12D6                     i2u140_41 14D0  
                   i2u116_41 20AE                     i2u204_41 12D2                     i2u109_40 1BCC  
                   i2u141_41 14FE                     i2u109_41 1BC8                     i2u213_47 21C2  
                   i2u142_40 1522                     i2u150_40 1858                     i2u142_41 151E  
                   i2u150_41 1854                     i2u214_47 1DE4                     i2u143_40 154C  
                   i2u151_40 18A0                     i2u135_40 19BC                     i2u143_41 1548  
                   i2u151_41 189C                     i2u135_41 19B8                     i2u215_47 1DEE  
                   i2u144_40 158C                     i2u152_40 202A                     i2u136_40 19DE  
                   i2u144_41 1588                     i2u152_41 2026                     i2u136_41 19DA  
                   i2u145_40 15D6                     i2u137_40 1A34                     i2u145_41 15D2  
                   i2u137_41 1A30                     i2u146_40 1790                     i2u138_40 1A44  
                   i2u170_40 0B5C                     i2u146_41 178C                     i2u138_41 1A40  
                   i2u170_41 0B58                     i2u139_40 14A2                     i2u147_40 17C2  
                   i2u171_40 0B8C                     i2u139_41 149E                     i2u147_41 17BE  
                   i2u171_41 0B88                     i2u148_40 1800                     i2u180_40 0D82  
                   i2u172_40 0BA8                     i2u148_41 17FC                     i2u180_41 0D7E  
                   i2u172_41 0BA4                     i2u149_40 182A                     i2u181_40 0D92  
                   i2u173_40 0BD6                     i2u149_41 1826                     i2u181_41 0D8E  
                   i2u173_41 0BD2                     i2u182_40 0DAA                     i2u174_40 0BE4  
                   i2u190_40 10E4                     i2u182_41 0DA6                     i2u174_41 0BE0  
                   i2u190_41 10E0                     i2u175_40 0D0E                     i2u175_41 0D0A  
                   i2u176_40 0D2C                     i2u168_40 0B44                     i2u192_40 1EB0  
                   i2u176_41 0D28                     i2u168_41 0B3E                     i2u192_41 1EAC  
                   i2u177_40 0D46                     i2u169_40 0B46                     i2u177_41 0D42  
                   i2u178_40 0D60                     i2u178_41 0D5C                     i2u195_40 1FE4  
                   i2u179_40 0D70                     i2u187_40 0FD4                     i2u195_41 1FE0  
                   i2u179_41 0D6C                     i2u187_41 0FD0                     i2u196_40 1FFA  
                   i2u188_40 101C                     i2u196_41 1FF6                     i2u188_41 1018  
                   i2u189_40 1040                     i2u189_41 103C                     i2u198_40 1194  
                   i2u198_41 1190                     i2u199_40 11A8                     i2u199_41 11A4  
           __CFG_WDTPS$32768 000000                    _vfpfcnvrt 0DF8             ??_inicializa_lcd 0074  
                   i2_printf 20C0                     i2pad@buf 0019                     i2dtoa@fp 0022  
                   i2_strlen 208A                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
                   i2fputc@c 0007                   ?_limpa_lcd 0001                     i2fputs@c 0014  
                   i2fputs@i 0015                     i2fputs@s 0010                  _escreve_lcd 21CC  
           __size_ofi2_fputc 0096             __size_ofi2_fputs 0044             __size_ofi2_putch 000A  
      caracter_inicio@coluna 0074                     __Hrparam 0000                   vfprintf@ap 00C9  
                   __Lrparam 0000                   vfprintf@fp 00C5                 __Lsmallconst 0800  
           __size_of___aodiv 018A             __size_of___aomod 0166                   ?_vfpfcnvrt 00B5  
 __size_ofi2_caracter_inicio 0042              ___aodiv@divisor 0078              ___aodiv@counter 0080  
                   _dtoa$490 00A3                     __ptext10 21CC                     __ptext11 1F8C  
                   __ptext20 20C0                     __ptext12 1618                     __ptext21 1E58  
                   __ptext13 1306                     __ptext30 2010                     __ptext22 0FB0  
                   __ptext14 2192                     __ptext31 177E                     __ptext23 0B14  
                   __ptext15 1C50                     __ptext32 1490                     __ptext24 19AC  
                   __ptext16 1F02                     __ptext33 21B2                     __ptext25 208A  
                   __ptext17 20F0                     __ptext34 1FCE                     __ptext26 1F48  
                   __ptext18 1CE2                     __ptext35 216E                     __ptext27 1BBA  
                   __ptext36 1D6E                     __ptext28 21F8                     __ptext29 21EA  
              __size_of_main 00B0                __size_of_dtoa 02E4                     int$flags 005E  
                   _vfprintf 1DF6                    printf@fmt 00CD             ___aomod@dividend 0070  
      __CFG_CPUDIV$OSC1_PLL2 000000                    putch@data 0075                   _INTCONbits 000FF2  
              ??i2_limpa_lcd 0005                  ??_limpa_lcd 0074                     intlevel2 0000  
      __end_ofi2_escreve_lcd 21F8  __size_ofi2_envia_nibble_lcd 0088    __size_ofi2_envia_byte_lcd 0024  
                   printf@ap 00D1              ___aomod@divisor 0078                ??i2_vfpfcnvrt 004C  
                ??_vfpfcnvrt 00BB              ___aomod@counter 0080              _caracter_inicio 1F02  
       envia_nibble_lcd@dado 0071                 ___aodiv@sign 0081           i2___aodiv@dividend 0001  
   i2caracter_inicio@posicao 0007      i2caracter_inicio@coluna 0005          __end_ofi2_limpa_lcd 21CC  
     i2caracter_inicio@linha 0006                 ___aomod@sign 0081    __size_of_envia_nibble_lcd 008C  
